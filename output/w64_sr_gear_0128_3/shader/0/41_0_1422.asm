//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:11 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// TEXCOORD                 1   xyzw        1     NONE   float
// TEXCOORD                 2   xyzw        2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float   xy
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[15], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_constantbuffer cb7[63], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_temps 9
mul r0.xy, v5.xyxx, cb12[12].zwzz
add r1.xyz, -v4.xyzx, cb12[14].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v3.xyxx, t3.xyzw, s4
add r0.w, -r2.z, r2.y
lt r0.w, r0.w, l(0.00470588217)
movc r0.w, r0.w, r2.y, r2.z
deriv_rtx_coarse r3.xy, r2.xyxx
deriv_rtx_coarse r3.z, r0.w
deriv_rty_coarse r4.xy, r2.xyxx
deriv_rty_coarse r4.z, r0.w
mul r2.zw, r3.yyyz, r3.xxxx
mul r3.xy, r4.yzyy, r4.xxxx
lt r3.zw, |r3.xxxy|, |r2.zzzw|
movc r2.zw, r3.zzzw, r2.zzzw, r3.xxxy
add r1.w, r2.x, l(-0.500000)
lt r1.w, |r1.w|, l(0.00470588217)
add r3.x, r2.y, r2.x
add r3.x, r3.x, l(-1.000000)
lt r3.x, |r3.x|, l(0.00588235306)
lt r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.z, r2.z, r3.x
add r3.x, -r2.y, l(1.000000)
movc r2.z, r2.z, r3.x, r2.x
add r3.x, r0.w, r2.z
add r3.x, r3.x, l(-1.000000)
lt r3.x, |r3.x|, l(0.00588235306)
and r2.w, r2.w, r3.x
add r3.x, -r0.w, l(1.000000)
movc r2.z, r2.w, r3.x, r2.z
movc r1.w, r1.w, r2.z, r2.x
ge r0.w, r0.w, l(0.500000)
if_nz r0.w
  mad r2.xz, v3.zzwz, cb7[6].xxyx, cb7[6].zzwz
  sample_indexable(texture2d)(float,float,float,float) r2.xzw, r2.xzxx, t8.xwyz, s1
  mov r0.w, l(4)
else
  ge r2.y, r2.y, l(0.500000)
  if_nz r2.y
    mad r3.xy, v3.zwzz, cb7[3].xyxx, cb7[3].zwzz
    sample_indexable(texture2d)(float,float,float,float) r2.xzw, r3.xyxx, t6.xwyz, s1
    mov r0.w, l(2)
  else
    mad r3.xy, v3.zwzz, cb7[0].xyxx, cb7[0].zwzz
    sample_indexable(texture2d)(float,float,float,float) r2.xzw, r3.xyxx, t4.xwyz, s1
    mov r0.w, l(0)
  endif
endif
ge r1.w, r1.w, l(0.500000)
iadd r2.y, r0.w, l(1)
movc r0.w, r1.w, r2.y, r0.w
imul null, r0.w, r0.w, l(9)
mov_sat r1.w, cb7[r0.w + 11].x
mov_sat r2.y, cb7[r0.w + 17].x
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v3.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r4.xy, v3.xyxx, t2.zwxy, s3
ge r3.w, r4.y, l(0.156862751)
and r3.w, r3.w, l(0x3f800000)
add r4.xy, r4.yxyy, l(-0.188235298, -0.156862751, 0.000000, 0.000000)
mul_sat r4.xy, r4.xyxx, l(1.231884, 1.18604648, 0.000000, 0.000000)
mad_sat r4.x, cb7[r0.w + 15].y, r4.x, cb7[r0.w + 15].x
mad_sat r4.x, cb7[r0.w + 15].w, r4.x, cb7[r0.w + 15].z
mul_sat r5.xyz, r2.xzwx, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r2.xzw, r2.xxzw, l(-0.250000, 0.000000, -0.250000, -0.250000)
mad_sat r6.xyz, cb7[r0.w + 9].xyzx, r5.xyzx, r2.xzwx
add r6.xyz, r6.xyzx, -cb7[r0.w + 9].xyzx
mad r6.xyz, r1.wwww, r6.xyzx, cb7[r0.w + 9].xyzx
mul_sat r7.xyz, r3.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r8.xyz, r3.xyzx, l(-0.250000, -0.250000, -0.250000, 0.000000)
mad_sat r6.xyz, r6.xyzx, r7.xyzx, r8.xyzx
mad_sat r2.xzw, cb7[r0.w + 14].xxyz, r5.xxyz, r2.xxzw
add r2.xzw, r2.xxzw, -cb7[r0.w + 14].xxyz
mad r2.xyz, r2.yyyy, r2.xzwx, cb7[r0.w + 14].xyzx
mad_sat r2.xyz, r2.xyzx, r7.xyzx, r8.xyzx
add r5.xyz, -r2.xyzx, r6.xyzx
mad r2.xyz, r4.xxxx, r5.xyzx, r2.xyzx
add r2.xyz, -r3.xyzx, r2.xyzx
mad r2.xyz, r3.wwww, r2.xyzx, r3.xyzx
ne r1.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb7[r0.w + 10].w
and r3.xyz, r1.wwww, cb7[r0.w + 10].xyzx
mul r1.w, r4.y, cb0[4].x
mul r1.w, r1.w, l(4.59479332)
mul r3.xyz, r3.xyzx, r1.wwww
mul r3.xyz, r3.wwww, r3.xyzx
mul r4.yzw, r4.xxxx, r3.xxyz
mad r3.xyz, r3.xyzx, r4.xxxx, r2.xyzx
max r1.w, r3.y, r3.x
max r1.w, r3.z, r1.w
add_sat r1.w, r1.w, l(-1.000000)
add r1.w, -r1.w, l(1.000000)
mad r2.xyz, r2.xyzx, r1.wwww, r4.yzwy
max r1.w, r2.y, r2.x
max r1.w, r2.z, r1.w
max r1.w, r1.w, l(1.000000)
div r2.xyz, r2.xyzx, r1.wwww
mul_sat r3.xyz, r2.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r2.xyz, r2.xyzx, l(-0.250000, -0.250000, -0.250000, 0.000000)
mad r2.xyz, cb7[r0.w + 9].xyzx, r3.xyzx, r2.xyzx
add r2.xyz, r2.xyzx, -cb0[7].xyzx
mad r2.xyz, r3.wwww, r2.xyzx, cb0[7].xyzx
add r0.w, -cb0[7].w, cb0[8].x
mad r0.w, r3.w, r0.w, cb0[7].w
mul r2.xyz, r2.xyzx, cb13[1].wwww
mul r2.xyz, r2.xyzx, cb13[1].xxxx
dp3 r1.x, -r1.xyzx, -r1.xyzx
sqrt r1.x, r1.x
mul r1.x, r1.x, l(0.015625)
min r1.x, r1.x, l(1.000000)
sqrt r0.z, r1.x
sample_l_indexable(texture3d)(float,float,float,float) r0.z, r0.xyzx, t21.yzxw, s5, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t20.wxyz, s5, l(0.000000)
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.z, r0.x, l(1.000000)
mul r1.xyz, r2.xyzx, cb8[7].xyzx
mul r0.x, r0.x, r0.w
mul o0.xyz, r0.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
