//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:05 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float      w
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float
// POSITION                 0   xyz         3     NONE   float   xyz
// POSITION                 1   xy          4     NONE   float   xy
// POSITION                 2   xyz         5     NONE   float   xyz
// SV_VERTEXID              0   x           6   VERTID    uint
// SV_InstanceID            0   x           7   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// SV_POSITION              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[111], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_input v0.w
dcl_input v1.xyzw
dcl_input v3.xyz
dcl_input v4.xy
dcl_input v5.xyz
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output_siv o3.xyzw, position
dcl_temps 6
mov r0.w, l(0)
mov r1.w, l(0)
mul r2.x, l(3.141000), cb0[101].x
sincos r2.x, r3.x, r2.x
mad r2.yzw, v3.xxyz, cb1[4].xxyz, cb1[5].xxyz
mul r1.xyz, r2.yzwy, r3.xxxx
dp3 r3.y, cb0[102].xyzx, cb0[102].xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, cb0[102].xxyz
mul r3.yzw, r2.xxxx, r3.yyzw
mul r4.xyz, r2.wyzw, -r3.zwyz
mad r4.xyz, r2.zwyz, -r3.wyzw, -r4.xyzx
dp3 r2.x, r2.yzwy, -r3.yzwy
mov r4.w, -r2.x
add r1.xyzw, r1.xyzw, r4.xyzw
mul r2.xyz, r1.yzxy, r3.wyzw
mad r2.xyz, r3.zwyz, r1.zxyz, -r2.xyzx
mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
mad r1.xyz, r1.wwww, r3.yzwy, r1.xyzx
add r1.w, v1.w, l(-3.141000)
mul r1.xyzw, r1.xyzw, l(0.042500, 0.008500, 0.008500, 0.500000)
sincos r2.x, r4.x, r1.w
mul r0.xyz, r1.xyzx, r4.xxxx
mul r2.xyz, r2.xxxx, l(0.000000, 1.000000, 0.000000, 0.000000)
mul r5.xyzw, r1.yzxy, -r2.zzyy
mad r1.xyz, -r1.zxyz, -r2.yzzy, r5.xyzx
mov r1.w, -r5.w
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyz, r0.yzxy, r2.zzyz
mad r1.xyz, r2.yzzy, r0.zxyz, -r1.xyzx
mad r0.xyz, r4.xxxx, r0.xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r2.zyzz, r0.xyzx
add r0.xyz, r0.xyzx, v1.xyzx
mul r1.xyz, r0.yyyy, cb1[1].xyzx
mad r0.xyw, cb1[0].xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, cb1[2].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb1[3].xyzx
mov r1.xyz, v5.xyzx
mov r1.w, l(0)
mul r4.yzw, -r3.zzwy, v5.zzxy
mad r5.xyz, v5.yzxy, -r3.wyzw, -r4.yzwy
dp3 r0.w, v5.xyzx, -r3.yzwy
mov r5.w, -r0.w
mad r1.xyzw, r3.xxxx, r1.xyzw, r5.xyzw
mul r4.yzw, r1.yyzx, r3.wwyz
mad r4.yzw, r3.zzwy, r1.zzxy, -r4.yyzw
mad r1.xyz, r3.xxxx, r1.xyzx, r4.yzwy
mad r1.xyz, r1.wwww, r3.yzwy, r1.xyzx
mul r3.xyz, r1.xyzx, r4.xxxx
mul r5.xyzw, -r2.zzyy, r1.yzxy
mad r1.xyz, -r1.zxyz, -r2.yzzy, r5.xyzx
mov r1.w, -r5.w
mov r3.w, l(0)
add r1.xyzw, r1.xyzw, r3.xyzw
mul r3.xyz, r1.yzxy, r2.zzyz
mad r3.xyz, r2.yzzy, r1.zxyz, -r3.xyzx
mad r1.xyz, r4.xxxx, r1.xyzx, r3.xyzx
mad r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
mul r2.xyz, r1.yyyy, cb1[1].xyzx
mad r1.xyw, cb1[0].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb1[2].xyzx, r1.zzzz, r1.xywx
mad r2.xy, v4.xyxx, cb1[6].xyxx, cb1[6].zwzz
mad r0.w, r2.y, l(-0.010000), l(0.010000)
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov o1.xyz, r1.xyzx
mul r1.xyzw, r0.yyyy, cb12[1].xyzw
mad r1.xyzw, cb12[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb12[2].xyzw, r0.zzzz, r1.xyzw
add o2.xyz, -r0.xyzx, cb12[7].xyzx
add r0.xyzw, r1.xyzw, cb12[3].xyzw
mov o0.w, r0.w
mul r1.x, cb0[8].y, cb0[107].x
lt r1.y, l(0.999000), v0.w
movc r2.z, r1.y, l(0), r1.x
mov o0.xyz, r2.xyzx
lt r1.x, r2.z, l(0.000001)
lt r1.y, cb0[110].x, l(0.000001)
or r1.x, r1.y, r1.x
movc o3.xyzw, r1.xxxx, l(10000.000000,10000.000000,-10000.000000,1.000000), r0.xyzw
ret
// Approximately 0 instruction slots used
