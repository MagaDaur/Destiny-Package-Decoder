//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:49 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float   xy
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[15], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_constantbuffer cb7[63], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_temps 7
mul r0.xy, v5.xyxx, cb12[12].zwzz
add r1.xyz, -v4.xyzx, cb12[14].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
dp3 r3.x, r2.xyzx, v1.xyzx
dp3 r3.y, r2.xyzx, v2.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v3.xyxx, t3.xyzw, s5
add r0.w, -r4.z, r4.y
lt r0.w, r0.w, l(0.00470588217)
movc r0.w, r0.w, r4.y, r4.z
deriv_rtx_coarse r5.xy, r4.xyxx
deriv_rtx_coarse r5.z, r0.w
deriv_rty_coarse r6.xy, r4.xyxx
deriv_rty_coarse r6.z, r0.w
mul r3.zw, r5.yyyz, r5.xxxx
mul r4.zw, r6.yyyz, r6.xxxx
lt r5.xy, |r4.zwzz|, |r3.zwzz|
movc r3.zw, r5.xxxy, r3.zzzw, r4.zzzw
add r1.w, r4.x, l(-0.500000)
lt r1.w, |r1.w|, l(0.00470588217)
add r2.w, r4.y, r4.x
add r2.w, r2.w, l(-1.000000)
lt r2.w, |r2.w|, l(0.00588235306)
lt r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.w, r2.w, r3.z
add r3.z, -r4.y, l(1.000000)
movc r2.w, r2.w, r3.z, r4.x
add r3.z, r0.w, r2.w
add r3.z, r3.z, l(-1.000000)
lt r3.z, |r3.z|, l(0.00588235306)
and r3.z, r3.w, r3.z
add r3.w, -r0.w, l(1.000000)
movc r2.w, r3.z, r3.w, r2.w
movc r1.w, r1.w, r2.w, r4.x
ge r0.w, r0.w, l(0.500000)
if_nz r0.w
  mad r3.zw, v3.zzzw, cb7[7].xxxy, cb7[7].zzzw
  sample_indexable(texture2d)(float,float,float,float) r3.zw, r3.zwzz, t9.zwxy, s1
  mad r3.zw, r3.zzzw, cb7[8].xxxx, cb7[8].yyyy
  mov r0.w, l(4)
else
  ge r2.w, r4.y, l(0.500000)
  if_nz r2.w
    mad r4.xy, v3.zwzz, cb7[4].xyxx, cb7[4].zwzz
    sample_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t7.xyzw, s1
    mad r3.zw, r4.xxxy, cb7[5].xxxx, cb7[5].yyyy
    mov r0.w, l(2)
  else
    mad r4.xy, v3.zwzz, cb7[1].xyxx, cb7[1].zwzz
    sample_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t5.xyzw, s1
    mad r3.zw, r4.xxxy, cb7[2].xxxx, cb7[2].yyyy
    mov r0.w, l(0)
  endif
endif
ge r1.w, r1.w, l(0.500000)
iadd r2.w, r0.w, l(1)
movc r0.w, r1.w, r2.w, r0.w
imul null, r0.w, r0.w, l(9)
mov_sat r1.w, cb7[r0.w + 11].y
mov_sat r2.w, cb7[r0.w + 17].y
sample_indexable(texture2d)(float,float,float,float) r4.xy, v3.xyxx, t1.xyzw, s3
mad r4.xy, r4.xyxx, cb0[4].xxxx, cb0[4].yyyy
sample_indexable(texture2d)(float,float,float,float) r4.z, v3.xyxx, t2.xywz, s4
ge r4.w, r4.z, l(0.156862751)
and r4.w, r4.w, l(0x3f800000)
add r4.z, r4.z, l(-0.188235298)
mul_sat r4.z, r4.z, l(1.231884)
mad_sat r4.z, cb7[r0.w + 15].y, r4.z, cb7[r0.w + 15].x
mad_sat r0.w, cb7[r0.w + 15].w, r4.z, cb7[r0.w + 15].z
mad r5.xy, r3.zwzz, r1.wwww, r4.xyxx
mad r3.zw, r3.zzzw, r2.wwww, r4.xxxy
add r5.xy, -r3.zwzz, r5.xyxx
mad r3.zw, r0.wwww, r5.xxxy, r3.zzzw
add r3.zw, -r4.xxxy, r3.zzzw
mad r4.xy, r4.wwww, r3.zwzz, r4.xyxx
dp2 r0.w, r4.xyxx, r4.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r4.z, r0.w
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mul r5.xyz, r4.yyyy, v2.xyzx
mad r4.xyw, v1.xyxz, r4.xxxx, r5.xyxz
mad r4.xyz, v0.xyzx, r4.zzzz, r4.xywx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r2.xyzx, r4.xyzx
dp3 r1.w, r2.xyzx, v0.xyzx
mul r2.xy, r3.xyxx, cb0[6].xxxx
div r2.xy, r2.xyxx, r1.wwww
add r2.xy, -r2.xyxx, v3.xyxx
mul r0.w, r0.w, r0.w
mad_sat r1.w, r0.w, cb0[7].x, cb0[7].y
mad r3.xyz, cb0[9].xyzx, r1.wwww, cb0[8].xyzx
mad r2.zw, r2.xxxy, cb0[10].xxxy, cb0[10].zzzw
mad r4.xy, r2.xyxx, cb0[11].xyxx, cb0[11].zwzz
mad r2.xy, r2.xyxx, cb0[12].xyxx, cb0[12].zwzz
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t26.xyzw, s2
add r2.xy, r2.xyxx, -cb0[14].xyxx
mad r2.xy, r2.xyxx, cb0[13].xxxx, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t27.xyzw, s2
add r2.xy, r2.xyxx, -cb0[16].xyxx
mad r2.xy, r2.xyxx, cb0[15].xxxx, r2.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t28.yzwx, s2
mul r2.xyz, r1.wwww, r3.xyzx
mad_sat r0.w, r0.w, cb0[17].x, cb0[17].y
mul r2.xyz, r0.wwww, r2.xyzx
mov r2.w, l(1.000000)
mul r2.xyzw, r2.xyzw, cb0[18].xxxx
mul r2.xyz, r2.xyzx, cb13[1].wwww
mul r2.xyz, r2.xyzx, cb13[1].xxxx
dp3 r0.w, -r1.xyzx, -r1.xyzx
sqrt r0.w, r0.w
mul r0.w, r0.w, l(0.015625)
min r0.w, r0.w, l(1.000000)
sqrt r0.z, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r0.z, r0.xyzx, t21.yzxw, s6, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t20.wxyz, s6, l(0.000000)
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.z, r0.x, l(1.000000)
mul r0.yzw, r2.xxyz, cb8[7].xxyz
mul r0.x, r0.x, r2.w
mul o0.xyz, r0.xxxx, r0.yzwy
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
