//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:52 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[154], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb9[64], dynamicIndexed
dcl_constantbuffer cb10[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 8
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[89].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[99].x
  ftou r0.y, cb0[90].x
  ishl r0.z, vThreadID.x, l(2)
  iadd r0.xy, r0.zzzz, r0.xyxx
  iadd r1.xyz, r0.yyyy, l(1, 2, 3, 0)
  ld_indexable(buffer)(float,float,float,float) r2.xyzw, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r1.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.xyw, r0.yyyy, t0.xywz
  ld_indexable(buffer)(float,float,float,float) r4.xyz, r1.zzzz, t0.xyzw
  add r0.y, l(0.250000), cb10[0].x
  ftoi r0.y, r0.y
  ftoi r0.w, cb0[23].x
  iadd r0.y, r0.w, r0.y
  add r0.w, l(0.250000), cb10[1].x
  ftoi r0.w, r0.w
  lt r1.z, cb0[23].x, cb0[24].x
  and r1.z, r1.z, cb0[23].x
  ftoi r1.z, r1.z
  iadd r0.w, r0.w, r1.z
  div r1.z, cb0[22].x, r3.w
  mov_sat r5.x, r4.z
  mad r5.x, r5.x, l(-0.0699999928), l(-0.050000)
  mov_sat r5.y, r2.w
  mad r5.zw, r5.yyyy, l(0.000000, 0.000000, 0.068965, -1.931035), l(0.000000, 0.000000, 0.862069, 1.000000)
  mul r5.y, r5.y, r5.y
  mad_sat r5.y, r5.z, r5.y, r5.w
  mad r5.y, r5.y, l(0.500000), l(0.500000)
  add r6.w, r1.z, r2.w
  mul r7.xyz, cb0[26].xyzx, cb9[r0.y + 0].yyyy
  mad r7.xyz, cb0[25].xyzx, cb9[r0.y + 0].xxxx, r7.xyzx
  mad r7.xyz, cb0[27].xyzx, cb9[r0.y + 0].zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb0[28].xyzx
  add r7.xyz, -r2.xyzx, r7.xyzx
  dp3 r0.y, r7.xyzx, r7.xyzx
  sqrt r1.z, r0.y
  add r1.z, r1.z, l(-0.005000)
  mul r2.w, r5.y, cb0[22].x
  rsq r0.y, r0.y
  mul r5.yzw, r0.yyyy, r7.xxyz
  lt r0.y, l(0.000000), r1.z
  lt r1.z, r1.z, l(0.000000)
  iadd r0.y, -r0.y, r1.z
  itof r0.y, r0.y
  mul r5.yzw, r0.yyyy, r5.yyzw
  mad r1.xyz, r5.yzwy, r2.wwww, r1.xywx
  mad r5.yzw, r2.xxyz, l(0.000000, 0.625000, 0.625000, 0.625000), l(0.000000, 0.500000, 0.500000, 0.500000)
  sample_l_indexable(texture3d)(float,float,float,float) r5.yzw, r5.yzwy, t1.wxyz, s1, l(0.000000)
  mad r5.yzw, r5.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  mov r7.x, cb0[6].z
  mov r7.z, l(1.000000)
  mul r5.yzw, r5.yyzw, r7.xxxz
  mov r7.x, cb0[22].x
  mov r7.z, cb0[6].z
  mul r5.yzw, r5.yyzw, r7.xxxz
  mov r7.xy, l(1.300000,2.000000,0,0)
  mov r7.z, cb0[22].x
  mad r1.xyz, r5.yzwy, r7.xyzx, r1.xyzx
  mul r5.xyz, r5.xxxx, cb0[152].xyzx
  mad r1.xyz, r5.xyzx, cb0[151].xxxx, r1.xyzx
  mul_sat r0.y, l(5.000000), cb0[153].x
  add r0.y, -r0.y, l(1.000000)
  mul r1.xyz, r0.yyyy, r1.xyzx
  mad r6.xyz, r1.xyzx, cb0[138].xxxx, r2.xyzx
  mul r0.y, r3.x, cb0[153].x
  mad r3.y, r0.y, l(6.28318548), r3.y
  mul r2.xyz, r6.zxyz, -cb9[r0.w + 32].yzxy
  mad r2.xyz, r6.yzxy, -cb9[r0.w + 32].zxyz, -r2.xyzx
  dp3 r0.y, r6.xyzx, -cb9[r0.w + 32].xyzx
  mov r2.w, -r0.y
  mul r5.xyz, r6.xyzx, cb9[r0.w + 32].wwww
  mov r5.w, l(0)
  add r2.xyzw, r2.xyzw, r5.xyzw
  mul r5.xyz, r2.yzxy, cb9[r0.w + 32].zxyz
  mad r5.xyz, cb9[r0.w + 32].yzxy, r2.zxyz, -r5.xyzx
  mad r2.xyz, cb9[r0.w + 32].wwww, r2.xyzx, r5.xyzx
  mad r2.xyz, r2.wwww, cb9[r0.w + 32].xyzx, r2.xyzx
  add r2.xyz, r2.xyzx, cb9[r0.w + 0].xyzx
  add r2.xyz, r2.xyzx, -cb12[7].xyzx
  dp3 r0.y, r2.xyzx, r2.xyzx
  sqrt r1.w, r0.y
  store_uav_typed u0.xyzw, r0.xxxx, r1.xyzw
  iadd r0.yzw, r0.xxxx, l(0, 1, 2, 3)
  store_uav_typed u0.xyzw, r0.yyyy, r6.xyzw
  store_uav_typed u0.xyzw, r0.zzzz, r3.xyzw
  mov r4.w, l(0)
  store_uav_typed u0.xyzw, r0.wwww, r4.xyzw
endif
ret
// Approximately 0 instruction slots used
