//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[156], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb9[64], dynamicIndexed
dcl_constantbuffer cb10[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 9
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[89].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[99].x
  ftou r0.y, cb0[90].x
  imad r0.y, l(6), vThreadID.x, r0.y
  iadd r1.xyzw, r0.yyyy, l(2, 1, 3, 4)
  ld_indexable(buffer)(float,float,float,float) r2.xyzw, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyz, r0.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.xyz, r1.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r5.xyzw, r1.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r1.wwww, t0.xyzw
  iadd r0.y, r0.y, l(5)
  ld_indexable(buffer)(float,float,float,float) r6.xyz, r0.yyyy, t0.xyzw
  add r0.y, l(0.250000), cb10[0].x
  lt r0.z, cb0[23].x, cb0[24].x
  and r0.z, r0.z, cb0[23].x
  ftoi r0.yz, r0.yyzy
  iadd r0.y, r0.z, r0.y
  div r0.z, cb0[22].x, r5.x
  add r2.x, r0.z, r2.x
  mul r3.w, r5.x, r2.x
  mad r4.xyz, r3.xyzx, cb0[153].xxxx, r4.xyzx
  mul r0.z, r2.y, cb0[155].x
  mad r2.z, r0.z, l(6.28318548), r2.z
  mul r7.xyz, r4.zxyz, -cb9[r0.y + 32].yzxy
  mad r7.xyz, r4.yzxy, -cb9[r0.y + 32].zxyz, -r7.xyzx
  dp3 r0.z, r4.xyzx, -cb9[r0.y + 32].xyzx
  mov r7.w, -r0.z
  mul r8.xyz, r4.xyzx, cb9[r0.y + 32].wwww
  mov r8.w, l(0)
  add r7.xyzw, r7.xyzw, r8.xyzw
  mul r8.xyz, r7.yzxy, cb9[r0.y + 32].zxyz
  mad r8.xyz, cb9[r0.y + 32].yzxy, r7.zxyz, -r8.xyzx
  mad r7.xyz, cb9[r0.y + 32].wwww, r7.xyzx, r8.xyzx
  mad r7.xyz, r7.wwww, cb9[r0.y + 32].xyzx, r7.xyzx
  add r0.yzw, r7.xxyz, cb9[r0.y + 0].xxyz
  add r0.yzw, r0.yyzw, -cb12[7].xxyz
  dp3 r0.y, r0.yzwy, r0.yzwy
  sqrt r4.w, r0.y
  imad r0.x, l(6), vThreadID.x, r0.x
  store_uav_typed u0.xyzw, r0.xxxx, r3.xyzw
  iadd r3.xyzw, r0.xxxx, l(1, 2, 3, 4)
  store_uav_typed u0.xyzw, r3.xxxx, r4.xyzw
  store_uav_typed u0.xyzw, r3.yyyy, r2.xyzw
  store_uav_typed u0.xyzw, r3.zzzz, r5.xyzw
  store_uav_typed u0.xyzw, r3.wwww, r1.xyzw
  iadd r0.y, r0.x, l(5)
  mov r6.w, l(0)
  store_uav_typed u0.xyzw, r0.yyyy, r6.xyzw
endif
ret
// Approximately 0 instruction slots used
