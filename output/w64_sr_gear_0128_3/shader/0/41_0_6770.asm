//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:55 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyz
// TEXCOORD                 5   xyzw        5     NONE   float     zw
// TEXCOORD                 6   xy          6     NONE   float   xy
// SV_POSITION              0   xyzw        7      POS   float   xy
// SV_isFrontFace           0   x           8    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[124], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.zw
dcl_input_ps linear v6.xy
dcl_input_ps_siv linear noperspective v7.xy, position
dcl_output o0.xyzw
dcl_temps 2
round_ne r0.x, v5.z
mov r0.y, l(0)
mad r0.zw, v0.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
mad r0.xy, r0.xyxx, r0.zwzz, v0.xyxx
mad r0.zw, r0.xxxy, v3.xxxy, v3.zzzw
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t1.zwxy, s2
mad r0.xy, r0.zwzz, l(0.200000, 0.200000, 0.000000, 0.000000), r0.xyxx
add r0.xy, r0.xyxx, l(-0.100000, -0.100000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t0.xwyz, s2
log r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, l(2.200000, 2.200000, 0.000000, 0.000000)
exp r0.xy, r0.xyxx
mul_sat r0.y, r0.y, cb0[123].x
mul_sat r0.y, r0.y, v0.z
dp3 r0.z, -v2.xyzx, -v2.xyzx
sqrt r0.z, r0.z
mul r0.z, r0.z, l(0.015625)
min r0.z, r0.z, l(1.000000)
sqrt r1.z, r0.z
mul r1.xy, v7.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r0.z, r1.xyzx, t21.yzxw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t20.xyzw, s1, l(0.000000)
mul r1.xy, r1.xyxx, cb12[12].xyxx
ftoi r1.xy, r1.xyxx
add r0.w, r0.w, l(-1.000000)
mad r0.z, r0.z, r0.w, l(1.000000)
mul r0.y, r0.z, r0.y
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyzw, t10.yzxw
mad r0.z, r0.z, cb2[0].y, cb2[0].x
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.z, r0.z, -v0.w
div_sat r0.z, r0.z, v6.x
add r0.z, -r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
mul r0.y, r0.z, r0.y
max r0.z, v5.w, l(0.001000)
log r0.z, r0.z
mul r0.z, r0.z, l(2.200000)
exp r0.z, r0.z
add r0.x, -r0.z, r0.x
add r0.z, -r0.z, l(1.000000)
max r0.z, r0.z, l(0.000010)
div r0.x, r0.x, r0.z
max r0.x, r0.x, l(0.000000)
mul r0.xzw, r0.xxxx, v4.xxyz
mul r0.xzw, r0.xxzw, v6.yyyy
mul r0.xzw, r0.xxzw, cb13[1].wwww
mul r0.xzw, r0.xxzw, cb13[1].xxxx
mul r0.xzw, r0.xxzw, cb8[7].xxyz
mul o0.xyz, r0.yyyy, r0.xzwx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
