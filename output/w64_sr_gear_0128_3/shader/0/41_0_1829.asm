//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:10 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// TEXCOORD                 1   xyzw        1     NONE   float
// TEXCOORD                 2   xyzw        2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xy
// TEXCOORD                 4   xyz         4     NONE   float
// SV_POSITION              0   xyzw        5      POS   float
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb6[11], immediateIndexed
dcl_constantbuffer cb7[8], immediateIndexed
dcl_constantbuffer cb8[3], immediateIndexed
dcl_constantbuffer cb9[9], immediateIndexed
dcl_constantbuffer cb10[3], immediateIndexed
dcl_constantbuffer cb11[9], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t13
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.x, v3.xyxx, t13.xyzw, s3
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb9[8].w
if_nz r0.y
  mad r0.zw, v3.xxxy, cb8[0].xxxy, cb8[0].zzzw
  sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t5.yzxw, s1
  mad_sat r0.z, cb8[2].y, r0.z, cb8[2].x
  mad r0.z, cb8[2].w, r0.z, cb8[2].z
else
  mov r0.z, l(0)
endif
add r0.z, -r0.z, l(1.000000)
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), cb11[8].w
if_nz r0.w
  mad r1.xy, v3.xyxx, cb10[0].xyxx, cb10[0].zwzz
  sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t9.xyzw, s1
  mad_sat r1.x, cb10[2].y, r1.x, cb10[2].x
  mad r1.x, cb10[2].w, r1.x, cb10[2].z
else
  mov r1.x, l(0)
endif
add r1.x, -r1.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.y, v3.xyxx, t2.xwyz, s2
add r2.xyz, -cb6[4].xyzx, cb7[1].xyzx
mad r2.xyz, r1.yyyy, r2.xyzx, cb6[4].xyzx
mul r2.xyz, r0.zzzz, r2.xyzx
mul o0.xyz, r1.xxxx, r2.xyzx
mad_sat r0.x, cb0[10].y, r0.x, cb0[10].x
if_nz r0.y
  mad r0.yz, v3.xxyx, cb8[0].xxyx, cb8[0].zzwz
  sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t5.yxzw, s1
  mad_sat r0.y, cb8[2].y, r0.y, cb8[2].x
  mad r0.y, cb8[2].w, r0.y, cb8[2].z
else
  mov r0.y, l(0)
endif
add r0.y, -r0.y, l(1.000000)
if_nz r0.w
  mad r0.zw, v3.xxxy, cb10[0].xxxy, cb10[0].zzzw
  sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t9.yzxw, s1
  mad_sat r0.z, cb10[2].y, r0.z, cb10[2].x
  mad r0.z, cb10[2].w, r0.z, cb10[2].z
else
  mov r0.z, l(0)
endif
add r0.z, -r0.z, l(1.000000)
mul r0.w, l(0.010000), cb6[10].w
mad r1.x, cb7[7].w, l(0.010000), -r0.w
mad r0.w, r1.y, r1.x, r0.w
mul r0.y, r0.w, r0.y
mul r0.y, r0.y, r0.z
mul o0.w, r0.y, r0.x
ret
// Approximately 0 instruction slots used
