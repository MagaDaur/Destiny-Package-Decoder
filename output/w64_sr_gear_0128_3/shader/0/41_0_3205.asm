//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:05 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb13[5], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 7
mul r0.xy, v0.xyxx, cb12[12].zwzz
mul r0.zw, r0.xxxy, cb12[12].xxxy
ftoi r1.xy, r0.zwzz
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t1.yzxw
mul r2.xyzw, v0.yyyy, cb0[4].xyzw
mad r2.xyzw, cb0[3].xyzw, v0.xxxx, r2.xyzw
mad r2.xyzw, cb0[5].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[6].xyzw
div r2.xyz, r2.xyzx, r2.wwww
add r3.xyz, -r2.xyzx, cb0[7].xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
sqrt r0.z, r0.z
mad_sat r0.w, r0.z, cb0[10].x, cb0[10].y
mul r0.w, r0.w, r0.w
lt r2.w, l(0.000100), r0.w
if_nz r2.w
  ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t0.xyzw
  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r0.xyxx, t2.xyzw, s0
  dp3 r0.x, r1.xyzx, r1.xyzx
  sqrt r0.x, r0.x
  mad r0.y, r0.x, l(4.000000), l(-3.000000)
  div r1.xyz, r1.xyzx, r0.xxxx
  add_sat r0.x, r4.y, r4.y
  mul r1.w, r4.z, l(1.250000)
  mov_sat r1.w, r1.w
  mul r0.x, r0.x, r0.x
  max r0.x, r0.x, l(0.000100)
  log r0.x, r0.x
  mul r0.x, r0.x, cb0[16].x
  exp r0.x, r0.x
  div r3.xyz, r3.xyzx, r0.zzzz
  dp3 r0.z, r2.xyzx, r2.xyzx
  rsq r0.z, r0.z
  mul r4.yzw, r0.zzzz, r2.xxyz
  dp3_sat r2.w, r1.xyzx, r3.xyzx
  min r3.w, r1.w, l(0.200000)
  add r3.w, r2.w, r3.w
  min r3.w, r3.w, l(1.000000)
  mad r2.xyz, -r2.xyzx, r0.zzzz, r3.xyzx
  dp3 r0.z, r2.xyzx, r2.xyzx
  rsq r0.z, r0.z
  mul r2.xyz, r0.zzzz, r2.xyzx
  dp3 r0.z, r1.xyzx, r2.xyzx
  dp3 r5.x, r1.xyzx, -r4.yzwy
  add r5.x, |r5.x|, l(0.000010)
  dp3_sat r2.x, r3.xyzx, r2.xyzx
  mul r6.x, r0.y, l(-0.500000)
  mad r0.y, -r0.y, l(0.900000), l(1.000000)
  mul r2.y, r0.y, r0.y
  mul r2.y, r2.y, r2.y
  add r2.z, -r2.x, l(1.000000)
  mad r4.x, r4.x, l(0.840000), l(0.040000)
  mul r5.y, r2.z, r2.z
  mul r5.y, r5.y, r5.y
  mul r5.z, r2.z, r5.y
  mad r2.z, -r2.z, r5.y, l(1.000000)
  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mad r2.z, r4.x, r5.z, r2.z
  mov_sat r6.x, r6.x
  mad r4.x, -r5.x, r2.y, r5.x
  mad r4.x, r4.x, r5.x, r2.y
  sqrt r4.x, r4.x
  add r4.x, r2.w, r4.x
  mad r5.y, -r2.w, r2.y, r2.w
  mad r5.y, r5.y, r2.w, r2.y
  sqrt r5.y, r5.y
  add r5.y, r5.y, r5.x
  add r4.x, r4.x, r5.y
  div r4.x, l(0.500000), r4.x
  add r4.x, r6.x, r4.x
  min r4.x, r4.x, l(1.000000)
  mad r5.y, r0.z, r2.y, -r0.z
  mad r0.z, r5.y, r0.z, l(1.000000)
  mul r0.z, r0.z, r0.z
  div r0.z, r2.y, r0.z
  mul r0.z, r0.z, r2.z
  mul r0.z, r4.x, r0.z
  mul r2.x, r2.x, r2.x
  dp2 r0.y, r2.xxxx, r0.yyyy
  add r2.x, -r2.w, l(1.000000)
  add r0.y, r0.y, l(-0.500000)
  mul r2.y, r2.x, r2.x
  mul r2.y, r2.y, r2.y
  mul r2.x, r2.y, r2.x
  mad r2.x, r0.y, r2.x, l(1.000000)
  add r2.y, -r5.x, l(1.000000)
  mul r2.z, r2.y, r2.y
  mul r2.z, r2.z, r2.z
  mul r2.y, r2.z, r2.y
  mad r0.y, r0.y, r2.y, l(1.000000)
  mul r0.y, r0.y, r2.x
  lt r2.x, l(0.000100), r1.w
  dp3_sat r1.x, r3.xyzx, -r1.xyzx
  dp3 r1.y, -r4.yzwy, -r4.yzwy
  rsq r1.y, r1.y
  mul r4.xyz, r1.yyyy, -r4.yzwy
  dp3_sat r1.y, r3.xyzx, -r4.xyzx
  log r1.y, r1.y
  mul r1.y, r1.y, cb13[4].y
  exp r1.y, r1.y
  mad_sat r1.x, r1.x, cb13[4].x, r1.y
  mul r1.x, r1.w, r1.x
  and r1.x, r1.x, r2.x
  mul r0.z, r2.w, r0.z
  mul r0.z, r0.z, l(0.318309873)
  mul r0.y, r3.w, r0.y
  mul r1.x, r1.x, l(0.318309873)
  mad r0.y, r0.y, l(0.318309873), r1.x
  mul r1.xyz, r0.yyyy, cb0[9].xyzx
  mul r2.xyz, r0.zzzz, cb0[9].xyzx
  mul r1.xyz, r0.xxxx, r1.xyzx
  mul r0.xyz, r0.xxxx, r2.xyzx
  mul r0.w, r0.w, cb0[13].x
  mul r1.xyz, r0.wwww, r1.xyzx
  mul r0.xyz, r0.wwww, r0.xyzx
  mul r1.xyz, r1.xyzx, cb0[14].xxxx
  mul r0.xyz, r0.xyzx, cb0[14].yyyy
else
  mov r1.xyz, l(0,0,0,0)
  mov r0.xyz, l(0,0,0,0)
endif
mov o0.xyz, r1.xyzx
mov o0.w, l(0)
mov o1.xyz, r0.xyzx
mov o1.w, l(0)
ret
// Approximately 0 instruction slots used
