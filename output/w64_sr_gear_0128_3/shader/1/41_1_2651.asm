//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:07 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy
// SV_VERTEXID              0   x           4   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb12[16], immediateIndexed
dcl_constantbuffer cb1[24], dynamicIndexed
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input_sgv v4.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output_siv o5.xyzw, position
dcl_temps 15
mad r0.xyz, v0.xyzx, cb1[5].wwww, cb1[5].xyzx
add r0.w, -cb0[3].x, cb0[4].x
mad r0.w, cb0[5].x, r0.w, cb0[3].x
mul r1.x, cb0[6].x, cb0[7].x
mad r0.w, r0.w, r1.x, -cb0[2].x
mad r0.w, cb0[8].x, r0.w, cb0[2].x
add r0.w, r0.w, cb0[1].x
max r0.w, r0.w, cb0[9].x
min r0.w, r0.w, cb0[10].x
mul r0.w, r0.w, cb0[11].x
mul r0.w, r0.w, l(3.141000)
sincos r1.x, r2.x, r0.w
dp3 r0.w, cb0[0].xyzx, cb0[0].xyzx
rsq r0.w, r0.w
mul r1.yzw, r0.wwww, cb0[0].xxyz
mul r1.xyz, r1.yzwy, r1.xxxx
add r0.xyz, r0.xyzx, -cb0[12].xyzx
mul r2.yzw, -r1.yyzx, r0.zzxy
mad r3.xyz, r0.yzxy, -r1.zxyz, -r2.yzwy
dp3 r0.w, r0.xyzx, -r1.xyzx
mov r3.w, -r0.w
mul r0.xyz, r0.xyzx, r2.xxxx
mov r0.w, l(0)
add r0.xyzw, r0.xyzw, r3.xyzw
mul r2.yzw, r0.yyzx, r1.zzxy
mad r2.yzw, r1.yyzx, r0.zzxy, -r2.yyzw
mad r0.xyz, r2.xxxx, r0.xyzx, r2.yzwy
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, cb0[12].xyzx
mul r2.yzw, -r1.yyzx, v1.zzxy
mad r3.xyz, v1.yzxy, -r1.zxyz, -r2.yzwy
dp3 r1.w, v1.xyzx, -r1.xyzx
mov r3.w, -r1.w
mov r4.xyz, v1.xyzx
mov r4.w, l(0)
mad r3.xyzw, r2.xxxx, r4.xyzw, r3.xyzw
mul r2.yzw, r1.zzxy, r3.yyzx
mad r2.yzw, r1.yyzx, r3.zzxy, -r2.yyzw
mad r2.yzw, r2.xxxx, r3.xxyz, r2.yyzw
mad r2.yzw, r3.wwww, r1.xxyz, r2.yyzw
mul r3.xyz, -r1.yzxy, v2.zxyz
mad r3.xyz, v2.yzxy, -r1.zxyz, -r3.xyzx
dp3 r1.w, v2.xyzx, -r1.xyzx
mov r3.w, -r1.w
mov r4.xyz, v2.xyzx
mov r4.w, l(0)
mad r3.xyzw, r2.xxxx, r4.xyzw, r3.xyzw
mul r4.xyz, r1.zxyz, r3.yzxy
mad r4.xyz, r1.yzxy, r3.zxyz, -r4.xyzx
mad r3.xyz, r2.xxxx, r3.xyzx, r4.xyzx
mad r1.xyz, r3.wwww, r1.xyzx, r3.xyzx
mul r1.w, v0.w, l(32767.099609)
ftoi r1.w, r1.w
imax r2.x, -r1.w, r1.w
ige r3.x, r2.x, l(2048)
ilt r3.y, r1.w, l(0)
ishl r3.z, v4.x, l(1)
movc r3.z, r3.y, r3.z, v4.x
ishl r2.x, r2.x, l(3)
iadd r2.x, r2.x, l(0xffffc000)
bfi r2.x, l(3), l(0), r3.z, r2.x
ld_indexable(buffer)(uint,uint,uint,uint) r4.xyzw, r2.xxxx, t1.xyzw
movc r1.w, r3.x, r4.x, r1.w
imul null, r3.z, r1.w, l(3)
imad r5.xy, l(3, 3, 0, 0), r1.wwww, l(1, 2, 0, 0)
if_nz r3.x
  utof r3.xw, r4.zzzw
  mul r3.xw, r3.xxxw, l(0.00392156886, 0.000000, 0.000000, 0.00392156886)
  mov r6.x, cb1[r3.z + 8].w
  mov r6.y, cb1[r5.x + 8].w
  mov r6.z, cb1[r5.y + 8].w
  imul null, r1.w, r4.y, l(3)
  imad r4.xy, l(3, 3, 0, 0), r4.yyyy, l(1, 2, 0, 0)
  mul r7.xyz, r3.wwww, cb1[r1.w + 8].xyzx
  mul r8.x, r3.w, cb1[r1.w + 8].w
  mul r8.y, r3.w, cb1[r4.x + 8].w
  mul r8.z, r3.w, cb1[r4.y + 8].w
  mul r4.xzw, r3.wwww, cb1[r4.x + 8].xxyz
  mul r9.xyz, r3.wwww, cb1[r4.y + 8].xyzx
  mad r7.xyz, cb1[r3.z + 8].xyzx, r3.xxxx, r7.xyzx
  mad r6.xyz, r6.xyzx, r3.xxxx, r8.xyzx
  mad r4.xyz, cb1[r5.x + 8].xyzx, r3.xxxx, r4.xzwx
  mad r8.xyz, cb1[r5.y + 8].xyzx, r3.xxxx, r9.xyzx
  if_nz r3.y
    iadd r1.w, r2.x, l(1)
    ld_indexable(buffer)(uint,uint,uint,uint) r9.xyzw, r1.wwww, t1.xyzw
    utof r3.xy, r9.zwzz
    mul r3.xy, r3.xyxx, l(0.00392156886, 0.00392156886, 0.000000, 0.000000)
    imul null, r5.zw, r9.xxxy, l(0, 0, 3, 3)
    imad r9.xyzw, l(3, 3, 3, 3), r9.xxyy, l(1, 2, 1, 2)
    mul r10.x, r3.x, cb1[r5.z + 8].w
    mul r10.y, r3.x, cb1[r9.x + 8].w
    mul r10.z, r3.x, cb1[r9.y + 8].w
    mad r11.xyz, r3.xxxx, cb1[r5.z + 8].xyzx, r7.xyzx
    add r10.xyz, r6.xyzx, r10.xyzx
    mad r12.xyz, r3.xxxx, cb1[r9.x + 8].xyzx, r4.xyzx
    mad r13.xyz, r3.xxxx, cb1[r9.y + 8].xyzx, r8.xyzx
    mul r14.x, r3.y, cb1[r5.w + 8].w
    mul r14.y, r3.y, cb1[r9.z + 8].w
    mul r14.z, r3.y, cb1[r9.w + 8].w
    mad r7.xyz, r3.yyyy, cb1[r5.w + 8].xyzx, r11.xyzx
    add r6.xyz, r10.xyzx, r14.xyzx
    mad r4.xyz, r3.yyyy, cb1[r9.z + 8].xyzx, r12.xyzx
    mad r8.xyz, r3.yyyy, cb1[r9.w + 8].xyzx, r13.xyzx
  endif
else
  mov r7.xyz, cb1[r3.z + 8].xyzx
  mov r6.x, cb1[r3.z + 8].w
  mov r6.y, cb1[r5.x + 8].w
  mov r6.z, cb1[r5.y + 8].w
  mov r4.xyz, cb1[r5.x + 8].xyzx
  mov r8.xyz, cb1[r5.y + 8].xyzx
endif
add r3.xyz, r6.xyzx, cb12[15].xyzx
mov r7.w, r3.x
mov r0.w, l(1.000000)
dp4 r5.x, r7.xyzw, r0.xyzw
mov r4.w, r3.y
dp4 r5.y, r4.xyzw, r0.xyzw
mov r8.w, r3.z
dp4 r5.z, r8.xyzw, r0.xyzw
mul r3.xyzw, r5.yyyy, cb12[1].xyzw
mad r3.xyzw, cb12[0].xyzw, r5.xxxx, r3.xyzw
mad r3.xyzw, cb12[2].xyzw, r5.zzzz, r3.xyzw
add o5.xyzw, r3.xyzw, cb12[14].xyzw
add o4.xyz, r5.xyzx, cb12[7].xyzx
dp3 r0.x, r2.yzwy, r2.yzwy
rsq r0.x, r0.x
mul r0.xyw, r0.xxxx, r2.yzyw
dp3 r2.x, r7.xyzx, r0.xywx
dp3 r2.y, r4.xyzx, r0.xywx
dp3 r2.z, r8.xyzx, r0.xywx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyw, r0.xxxx, r1.xyxz
dp3 r1.x, r7.xyzx, r0.xywx
dp3 r1.y, r4.xyzx, r0.xywx
dp3 r1.z, r8.xyzx, r0.xywx
mul r0.xyw, r1.yzyx, r2.zxzy
mad r0.xyw, r2.yzyx, r1.zxzy, -r0.xyxw
mul o2.xyz, r0.xywx, v2.wwww
mad r0.xy, v3.xyxx, cb1[6].xyxx, cb1[6].zwzz
mul_sat r0.w, r2.z, cb1[7].z
add_sat o0.w, r0.w, cb1[7].w
mul r0.w, v1.w, l(32767.099609)
ftoi r0.w, r0.w
ishr r1.w, r0.w, l(3)
and r1.w, r1.w, l(4095)
and r0.w, r0.w, l(7)
itof r0.w, r0.w
add o2.w, r0.w, l(0.100000)
ld_indexable(buffer)(uint,uint,uint,uint) r3.xyzw, r1.wwww, t1.xyzw
ishl r3.yw, r3.yyyw, l(0, 8, 0, 8)
or r3.xy, r3.ywyy, r3.xzxx
f16tof32 r3.xy, r3.xyxx
mul o3.zw, r0.xxxy, r3.xxxy
mov o0.xyz, r2.xyzx
mov o1.w, r0.z
mov o1.xyz, r1.xyzx
mov o3.xy, r0.xyxx
ret
// Approximately 0 instruction slots used
