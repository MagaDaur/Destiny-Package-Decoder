//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:08 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[24], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb7[63], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 10
add r0.xyz, -v4.xyzx, cb12[7].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
sqrt r0.w, r0.w
dp3 r1.x, r0.xyzx, v1.xyzx
dp3 r1.y, r0.xyzx, v2.xyzx
dp3 r0.x, r0.xyzx, v0.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v3.xyxx, t3.xyzw, s6
add r0.y, -r2.z, r2.y
lt r0.y, r0.y, l(0.00470588217)
movc r0.y, r0.y, r2.y, r2.z
deriv_rtx_coarse r3.xy, r2.xyxx
deriv_rtx_coarse r3.z, r0.y
deriv_rty_coarse r4.xy, r2.xyxx
deriv_rty_coarse r4.z, r0.y
mul r1.zw, r3.yyyz, r3.xxxx
mul r2.zw, r4.yyyz, r4.xxxx
lt r3.xy, |r2.zwzz|, |r1.zwzz|
movc r1.zw, r3.xxxy, r1.zzzw, r2.zzzw
add r0.z, r2.x, l(-0.500000)
lt r0.z, |r0.z|, l(0.00470588217)
add r2.z, r2.y, r2.x
add r2.z, r2.z, l(-1.000000)
lt r2.z, |r2.z|, l(0.00588235306)
lt r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.z, r1.z, r2.z
add r2.z, -r2.y, l(1.000000)
movc r1.z, r1.z, r2.z, r2.x
add r2.z, r0.y, r1.z
add r2.z, r2.z, l(-1.000000)
lt r2.z, |r2.z|, l(0.00588235306)
and r1.w, r1.w, r2.z
add r2.z, -r0.y, l(1.000000)
movc r1.z, r1.w, r2.z, r1.z
movc r0.z, r0.z, r1.z, r2.x
ge r0.y, r0.y, l(0.500000)
if_nz r0.y
  mad r1.zw, v3.zzzw, cb7[7].xxxy, cb7[7].zzzw
  sample_indexable(texture2d)(float,float,float,float) r0.y, r1.zwzz, t9.xzyw, s1
  add_sat r0.y, r0.y, cb7[8].z
  mov r1.z, l(4)
else
  ge r1.w, r2.y, l(0.500000)
  if_nz r1.w
    mad r2.xy, v3.zwzz, cb7[4].xyxx, cb7[4].zwzz
    sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t7.xywz, s1
    add_sat r0.y, r1.w, cb7[5].z
    mov r1.z, l(2)
  else
    mad r2.xy, v3.zwzz, cb7[1].xyxx, cb7[1].zwzz
    sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t5.xywz, s1
    add_sat r0.y, r1.w, cb7[2].z
    mov r1.z, l(0)
  endif
endif
ge r0.z, r0.z, l(0.500000)
iadd r1.w, r1.z, l(1)
movc r0.z, r0.z, r1.w, r1.z
imul null, r0.z, r0.z, l(9)
mov_sat r1.zw, cb7[r0.z + 11].yyyw
mov_sat r2.xy, cb7[r0.z + 12].yzyy
mov_sat r2.z, cb7[r0.z + 17].w
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v3.xyxx, t0.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r4.xy, v3.xyxx, t1.xyzw, s4
mad r4.xy, r4.xyxx, cb0[23].xxxx, cb0[23].yyyy
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v3.xyxx, t2.xyzw, s5
ge r2.w, r5.w, l(0.156862751)
and r3.w, r2.w, l(0x3f800000)
add r4.zw, r5.wwwz, l(0.000000, 0.000000, -0.188235298, -0.156862751)
mul_sat r4.zw, r4.zzzw, l(0.000000, 0.000000, 1.231884, 1.18604648)
mad_sat r4.z, cb7[r0.z + 15].y, r4.z, cb7[r0.z + 15].x
mad_sat r4.z, cb7[r0.z + 15].w, r4.z, cb7[r0.z + 15].z
mul_sat r6.y, r5.w, l(7.968750)
add r5.z, l(128.500000), cb0[2].x
mul r5.z, r5.z, l(0.00390625000)
ge r5.w, l(0.050000), r6.y
movc r5.z, r5.w, r5.z, l(-1.000000)
mad_sat r5.w, cb7[r0.z + 13].y, r5.y, cb7[r0.z + 13].x
mad_sat r5.w, cb7[r0.z + 13].w, r5.w, cb7[r0.z + 13].z
mul_sat r7.xyz, r3.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r8.xyz, r3.xyzx, l(-0.250000, -0.250000, -0.250000, 0.000000)
mad_sat r9.xyz, cb7[r0.z + 9].xyzx, r7.xyzx, r8.xyzx
add r0.y, r0.y, l(-1.000000)
mul r0.y, r0.y, r1.z
mad_sat r7.xyz, cb7[r0.z + 14].xyzx, r7.xyzx, r8.xyzx
add r8.xyz, -r7.xyzx, r9.xyzx
mad r7.xyz, r4.zzzz, r8.xyzx, r7.xyzx
mov r6.x, r5.y
add r1.z, r5.w, -r6.x
mad r1.z, r4.z, r1.z, r5.y
add r5.y, r1.w, -r2.z
mad r8.y, r4.z, r5.y, r2.z
mad r0.y, r4.z, r0.y, l(1.000000)
add r0.z, l(128.500000), cb7[r0.z + 12].x
mul r0.z, r0.z, l(0.00390625000)
ge r1.w, l(0.050000), r1.w
movc r0.z, r1.w, r0.z, l(-1.000000)
min r0.y, r0.y, r1.z
lt r1.z, l(0.000100), r2.x
mul r1.w, r2.x, l(-2.000000)
mad r2.x, r2.x, l(-2.000000), l(-0.200000)
mul r2.x, r0.y, r2.x
mad r1.w, r2.x, l(-5.002501), r1.w
min r1.w, r0.y, r1.w
movc r8.x, r1.z, r1.w, r0.y
add r7.xyz, -r3.xyzx, r7.xyzx
mad r3.xyz, r3.wwww, r7.xyzx, r3.xyzx
mad r1.zw, r4.zzzz, r4.xxxy, -r4.xxxy
mad r4.xy, r3.wwww, r1.zwzz, r4.xyxx
add r1.zw, -r6.xxxy, r8.xxxy
mad r1.zw, r3.wwww, r1.zzzw, r6.xxxy
mul r0.y, r2.y, r3.w
movc o0.w, r2.w, r0.z, r5.z
add r0.z, -v3.y, v3.x
add r0.z, r0.z, cb0[19].z
mad_sat r0.z, cb0[19].y, |r0.z|, cb0[19].x
dp2 r2.x, cb0[20].xyxx, v3.xyxx
add r2.x, r2.x, cb0[20].z
dp2 r2.z, cb0[21].xyxx, v3.xyxx
add r2.y, r2.z, cb0[21].z
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t11.xyzw, s2
mul r0.z, r0.z, r2.x
mad r0.z, r0.z, cb0[22].x, cb0[22].y
mul r2.xyz, r4.wwww, cb0[15].xyzx
mul r2.xyz, r2.xyzx, cb0[14].xyzx
mul r1.xy, r1.xyxx, cb0[16].xxxx
div r1.xy, r1.xyxx, r0.xxxx
add r1.xy, -r1.xyxx, v3.xyxx
dp2 r0.x, cb0[17].xyxx, r1.xyxx
add r6.x, r0.x, cb0[17].z
dp2 r0.x, cb0[18].xyxx, r1.xyxx
add r6.y, r0.x, cb0[18].z
sample_indexable(texture2d)(float,float,float,float) r5.yzw, r6.xyxx, t10.wxyz, s2
mul r2.xyz, r2.xyzx, r5.yzwy
mul r0.x, r0.z, l(4.594790)
mul r5.yzw, r2.xxyz, r0.xxxx
mad r2.xyz, r0.xxxx, r2.xyzx, r3.xyzx
max r0.x, r2.y, r2.x
max r0.x, r2.z, r0.x
add_sat r0.x, r0.x, l(-1.000000)
add r0.x, -r0.x, l(1.000000)
mad r2.xyz, r3.xyzx, r0.xxxx, r5.yzwy
max r0.x, r2.y, r2.x
max r0.x, r2.z, r0.x
max r0.x, r0.x, l(1.000000)
div r2.xyz, r2.xyzx, r0.xxxx
max r0.x, r5.z, r5.y
max r0.x, r5.w, r0.x
dp2 r0.z, r4.xyxx, r4.xyxx
add r0.z, -r0.z, l(1.000000)
max r0.z, r0.z, l(0.000000)
sqrt r4.z, r0.z
dp3 r0.z, r4.xyzx, r4.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r4.xyzx
mul r4.xyz, r3.yyyy, v2.xyzx
mad r3.xyw, v1.xyxz, r3.xxxx, r4.xyxz
mad r3.xyz, v0.xyzx, r3.zzzz, r3.xywx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx
mov_sat r0.z, cb0[12].x
dp3 r1.x, v0.xyzx, v0.xyzx
rsq r1.x, r1.x
mul r4.xyz, r1.xxxx, v0.xyzx
dp3 r1.x, cb0[5].xyzx, r4.xyzx
add r1.y, -cb0[3].x, cb0[4].x
mad_sat r1.x, r1.x, r1.y, cb0[3].x
add r1.y, v4.z, -cb0[6].z
mul r1.y, r1.y, cb0[7].x
max r1.y, r1.y, l(0.000000)
log r1.y, r1.y
mul r1.y, r1.y, cb0[8].x
exp r1.y, r1.y
mul_sat r1.y, r1.y, cb0[9].x
mul r1.x, r1.y, r1.x
mad_sat r0.w, r0.w, cb0[10].x, cb0[10].y
mul r0.w, r0.w, r1.x
dp3 r1.x, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
max r1.x, r1.x, l(0.000100)
log r1.x, r1.x
mul r1.x, r1.x, -cb0[11].x
exp r1.x, r1.x
mul r0.w, r0.w, r1.x
add o2.w, r0.z, v0.w
mad r0.x, r0.w, cb0[13].x, r0.x
mad r0.z, r1.z, l(0.125000), l(0.375000)
mad_sat o1.xyz, r3.xyzx, r0.zzzz, l(0.500000, 0.500000, 0.500000, 0.000000)
add r0.x, r0.x, l(0.00781250000)
log r0.x, r0.x
mad_sat r0.x, r0.x, l(0.0769230798), l(0.538461566)
mov_sat r5.x, r5.x
add r0.x, r0.x, r5.x
mul o2.yz, r0.xxyx, l(0.000000, 0.500000, 0.800000, 0.000000)
mov o0.xyz, r2.xyzx
mov o1.w, l(0)
mov o2.x, r1.w
ret
// Approximately 0 instruction slots used
