//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:53 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float    yzw
// TEXCOORD                 8   xyzw        8     NONE   float
// TEXCOORD                 9   xyzw        9     NONE   float
// TEXCOORD                10   xyzw       10     NONE   float
// POSITION                 0   xyz        11     NONE   float   xyz
// POSITION                 1   xy         12     NONE   float   xy
// POSITION                 2   xyz        13     NONE   float   xyz
// SV_VERTEXID              0   x          14   VERTID    uint
// SV_InstanceID            0   x          15   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 8      w        1     NONE   float      w
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                30   xyz         8     NONE   float   xyz
// SV_POSITION              0   xyzw        9      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[137], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v4.xyzw
dcl_input v5.xyz
dcl_input v6.xyzw
dcl_input v7.yzw
dcl_input v11.xyz
dcl_input v12.xy
dcl_input v13.xyz
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyz
dcl_output_siv o9.xyzw, position
dcl_temps 8
mul r0.xyz, v4.yyyy, cb1[1].xyzx
mad r0.xyz, cb1[0].xyzx, v4.xxxx, r0.xyzx
mad r0.xyz, cb1[2].xyzx, v4.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb1[3].xyzx
add r0.xyz, -r0.xyzx, cb12[7].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
add r0.y, r0.x, l(-1.000000)
add r0.x, -r0.x, l(10000.000000)
min_sat r0.x, r0.x, r0.y
mul r0.x, r0.x, cb0[5].z
mul r0.x, r0.x, cb0[136].x
lt r0.y, l(0.999000), v4.w
movc r0.x, r0.y, l(0), r0.x
mov o0.z, r0.x
lt r0.x, r0.x, l(0.000001)
mov r1.w, l(0)
mov r2.w, l(0)
mul r0.y, l(3.141000), cb0[129].x
sincos r3.x, r4.x, r0.y
mad r0.yzw, v11.xxyz, cb1[4].xxyz, cb1[5].xxyz
mul r2.xyz, r0.yzwy, r4.xxxx
dp3 r3.y, cb0[130].xyzx, cb0[130].xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, cb0[130].xxyz
mul r3.xyz, r3.yzwy, r3.xxxx
mul r4.yzw, r0.wwyz, -r3.yyzx
mad r5.xyz, r0.zwyz, -r3.zxyz, -r4.yzwy
dp3 r0.y, r0.yzwy, -r3.xyzx
mov r5.w, -r0.y
add r2.xyzw, r2.xyzw, r5.xyzw
mul r0.yzw, r2.yyzx, r3.zzxy
mad r0.yzw, r3.yyzx, r2.zzxy, -r0.yyzw
mad r0.yzw, r4.xxxx, r2.xxyz, r0.yyzw
mad r0.yzw, r2.wwww, r3.xxyz, r0.yyzw
mul r0.yzw, r0.yyzw, v7.zzzz
mul r0.yzw, r0.yyzw, v6.xxyz
add r2.x, v6.w, l(3.141000)
mul r2.x, r2.x, l(0.500000)
sincos r2.x, r5.x, r2.x
mul r1.xyz, r0.yzwy, r5.xxxx
dp3 r2.y, v5.xyzx, v5.xyzx
rsq r2.y, r2.y
mul r2.yzw, r2.yyyy, v5.xxyz
mul r2.xyz, r2.yzwy, r2.xxxx
mul r4.yzw, r0.wwyz, -r2.yyzx
mad r6.xyz, r0.zwyz, -r2.zxyz, -r4.yzwy
dp3 r0.y, r0.yzwy, -r2.xyzx
mov r6.w, -r0.y
add r1.xyzw, r1.xyzw, r6.xyzw
mul r0.yzw, r1.yyzx, r2.zzxy
mad r0.yzw, r2.yyzx, r1.zzxy, -r0.yyzw
mad r0.yzw, r5.xxxx, r1.xxyz, r0.yyzw
mad r0.yzw, r1.wwww, r2.xxyz, r0.yyzw
add r0.yzw, r0.yyzw, v4.xxyz
mul r1.xyz, r0.zzzz, cb1[1].xyzx
mad r1.xyz, cb1[0].xyzx, r0.yyyy, r1.xyzx
mad r0.yzw, cb1[2].xxyz, r0.wwww, r1.xxyz
add r0.yzw, r0.yyzw, cb1[3].xxyz
mul r1.xyzw, r0.zzzz, cb12[1].xyzw
mad r1.xyzw, cb12[0].xyzw, r0.yyyy, r1.xyzw
mad r1.xyzw, cb12[2].xyzw, r0.wwww, r1.xyzw
add o2.xyz, -r0.yzwy, cb12[7].xyzx
add r1.xyzw, r1.xyzw, cb12[3].xyzw
mov o0.w, r1.w
mad o0.xy, v12.xyxx, cb1[6].xyxx, cb1[6].zwzz
mov r6.xyz, v13.xyzx
mov r6.w, l(0)
mul r0.yzw, -r3.yyzx, v13.zzxy
mad r7.xyz, v13.yzxy, -r3.zxyz, -r0.yzwy
dp3 r0.y, v13.xyzx, -r3.xyzx
mov r7.w, -r0.y
mad r6.xyzw, r4.xxxx, r6.xyzw, r7.xyzw
mul r0.yzw, r3.zzxy, r6.yyzx
mad r0.yzw, r3.yyzx, r6.zzxy, -r0.yyzw
mad r0.yzw, r4.xxxx, r6.xxyz, r0.yyzw
mad r0.yzw, r6.wwww, r3.xxyz, r0.yyzw
mul r3.xyz, r0.yzwy, r5.xxxx
mul r4.xyz, -r2.yzxy, r0.wyzw
mad r4.xyz, r0.zwyz, -r2.zxyz, -r4.xyzx
dp3 r0.y, r0.yzwy, -r2.xyzx
mov r4.w, -r0.y
mov r3.w, l(0)
add r3.xyzw, r3.xyzw, r4.xyzw
mul r0.yzw, r2.zzxy, r3.yyzx
mad r0.yzw, r2.yyzx, r3.zzxy, -r0.yyzw
mad r0.yzw, r5.xxxx, r3.xxyz, r0.yyzw
mad r0.yzw, r3.wwww, r2.xxyz, r0.yyzw
mul r2.xyz, r0.zzzz, cb1[1].xyzx
mad r2.xyz, cb1[0].xyzx, r0.yyyy, r2.xyzx
mad o1.xyz, cb1[2].xyzx, r0.wwww, r2.xyzx
mov o1.w, v7.w
mov o3.xyzw, v0.xyzw
mov o4.xyzw, v1.xyzw
mov o5.xyzw, v2.xyzw
mov o6.xyw, l(0,0,0,0)
mov o6.z, v7.y
mov o7.xyz, l(0,0,0,0)
mov o7.w, v7.z
mov o8.xyz, l(0,0,0,0)
lt r0.y, v7.w, l(0.000001)
or r0.x, r0.y, r0.x
movc o9.xyzw, r0.xxxx, l(10000.000000,10000.000000,-10000.000000,1.000000), r1.xyzw
ret
// Approximately 0 instruction slots used
