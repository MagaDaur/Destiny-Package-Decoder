//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:11 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[159], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb9[64], dynamicIndexed
dcl_constantbuffer cb10[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 10
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[89].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[99].x
  ftou r0.y, cb0[90].x
  imad r0.y, l(5), vThreadID.x, r0.y
  iadd r1.xyzw, r0.yyyy, l(1, 2, 3, 4)
  ld_indexable(buffer)(float,float,float,float) r2.xyzw, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r1.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r0.yzw, r0.yyyy, t0.wxyz
  ld_indexable(buffer)(float,float,float,float) r4.xyzw, r1.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.xy, r1.wwww, t0.xyzw
  add r5.x, l(0.250000), cb10[0].x
  lt r5.y, cb0[23].x, cb0[24].x
  and r5.y, r5.y, cb0[23].x
  ftoi r5.xy, r5.xyxx
  iadd r5.x, r5.y, r5.x
  div r5.y, cb0[22].x, r4.x
  mov_sat r5.z, r4.y
  mov_sat r5.w, r1.y
  mad r6.xyz, r5.wwww, l(0.675498, 305937.437500, 0.704698, 0.000000), l(0.000000, -153987.859375, 0.295302, 0.000000)
  ge r7.xyzw, r5.wwww, l(0.000000, 0.503332, 0.503333, 1.000000)
  and r7.xyzw, r7.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r7.xyz, r7.yzwy, r7.xyzx
  add r7.xyz, r7.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r7.xyz, r7.xyzx
  mul r6.xyz, r6.xyzx, r7.xyzx
  mul r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
  add r5.w, r6.y, r6.x
  mad r5.w, r6.z, l(2.000000), r5.w
  mad_sat r5.w, r7.w, l(1.000000), r5.w
  mad r5.w, r5.w, l(4.000000), l(-2.000000)
  mad r6.xyzw, r5.zzzz, l(5.000000, 0.675498, 305937.437500, 0.704698), l(2.000000, 0.000000, -153987.859375, 0.295302)
  ge r7.xyzw, r5.zzzz, l(0.000000, 0.503332, 0.503333, 1.000000)
  and r7.xyzw, r7.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r7.xyz, r7.yzwy, r7.xyzx
  add r7.xyz, r7.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r7.xyz, r7.xyzx
  mul r6.yzw, r6.yyzw, r7.xxyz
  mul r6.yz, r6.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000)
  add r5.z, r6.z, r6.y
  mad r5.z, r6.w, l(2.000000), r5.z
  mad_sat r5.z, r7.w, l(1.000000), r5.z
  add r5.z, r5.z, l(-0.500000)
  add r7.w, r2.w, r5.y
  mul r6.yzw, l(0.000000, 1.000000, -1.000000, 1.000000), cb9[r5.x + 32].zzyw
  mul r6.yzw, r6.yyzw, cb9[r5.x + 32].zzxy
  mul r8.xyz, l(-1.000000, 1.000000, 1.000000, 0.000000), cb9[r5.x + 32].ywzy
  mad r6.yzw, cb9[r5.x + 32].yyzx, r8.xxyz, -r6.yyzw
  mul r8.xyz, l(1.000000, 1.000000, -1.000000, 0.000000), cb9[r5.x + 32].wzyw
  mad r6.yzw, cb9[r5.x + 32].wwww, r8.xxyz, r6.yyzw
  mad r6.yzw, cb9[r5.x + 32].xxxx, cb9[r5.x + 32].xxyz, r6.yyzw
  mul r8.xyz, r6.zzzz, cb0[26].zxyz
  mad r8.xyz, cb0[25].zxyz, r6.yyyy, r8.xyzx
  mad r6.yzw, cb0[27].zzxy, r6.wwww, r8.xxyz
  mul r8.xyz, cb0[26].yzxy, cb9[r5.x + 0].yyyy
  mad r8.xyz, cb0[25].yzxy, cb9[r5.x + 0].xxxx, r8.xyzx
  mad r8.xyz, cb0[27].yzxy, cb9[r5.x + 0].zzzz, r8.xyzx
  add r8.xyz, r8.xyzx, cb0[28].yzxy
  add r8.xyz, r2.yzxy, -r8.xyzx
  dp3 r2.w, r8.xyzx, r8.xyzx
  sqrt r2.w, r2.w
  add r2.w, -r5.z, r2.w
  mul r5.y, r5.w, cb0[22].x
  dp3 r5.z, -r8.xyzx, -r8.xyzx
  rsq r5.z, r5.z
  mul r9.xyz, r5.zzzz, -r8.zxyz
  mul r5.yzw, r5.yyyy, r9.xxyz
  lt r8.w, l(0.000000), r2.w
  lt r2.w, r2.w, l(0.000000)
  iadd r2.w, -r8.w, r2.w
  itof r2.w, r2.w
  mul r9.xyz, r6.yzwy, r8.xyzx
  mad r6.yzw, r6.wwyz, r8.yyzx, -r9.xxyz
  dp3 r8.x, r6.yzwy, r6.yzwy
  rsq r8.x, r8.x
  mul r6.yzw, r6.yyzw, r8.xxxx
  mul r6.x, r6.x, cb0[22].x
  mul r6.xyz, r6.xxxx, r6.yzwy
  mad r5.yzw, r5.yyzw, r2.wwww, r6.xxyz
  add r0.yzw, r0.yyzw, r5.yyzw
  mul_sat r2.w, l(10.000000), cb0[158].x
  add r2.w, -r2.w, l(1.000000)
  mul r6.xyz, r0.yzwy, r2.wwww
  mad r7.xyz, r6.xyzx, cb0[148].xxxx, r2.xyzx
  mul r0.y, r3.x, cb0[158].x
  mad r3.y, r0.y, l(6.28318548), r3.y
  mul r0.yzw, r7.zzxy, -cb9[r5.x + 32].yyzx
  mad r2.xyz, r7.yzxy, -cb9[r5.x + 32].zxyz, -r0.yzwy
  dp3 r0.y, r7.xyzx, -cb9[r5.x + 32].xyzx
  mov r2.w, -r0.y
  mul r8.xyz, r7.xyzx, cb9[r5.x + 32].wwww
  mov r8.w, l(0)
  add r2.xyzw, r2.xyzw, r8.xyzw
  mul r0.yzw, r2.yyzx, cb9[r5.x + 32].zzxy
  mad r0.yzw, cb9[r5.x + 32].yyzx, r2.zzxy, -r0.yyzw
  mad r0.yzw, cb9[r5.x + 32].wwww, r2.xxyz, r0.yyzw
  mad r0.yzw, r2.wwww, cb9[r5.x + 32].xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, cb9[r5.x + 0].xxyz
  add r0.yzw, r0.yyzw, -cb12[7].xxyz
  dp3 r0.y, r0.yzwy, r0.yzwy
  sqrt r6.w, r0.y
  imad r0.x, l(5), vThreadID.x, r0.x
  store_uav_typed u0.xyzw, r0.xxxx, r6.xyzw
  iadd r2.xyzw, r0.xxxx, l(1, 2, 3, 4)
  store_uav_typed u0.xyzw, r2.xxxx, r7.xyzw
  store_uav_typed u0.xyzw, r2.yyyy, r3.xyzw
  store_uav_typed u0.xyzw, r2.zzzz, r4.xyzw
  mov r1.zw, l(0,0,0,0)
  store_uav_typed u0.xyzw, r2.wwww, r1.xyzw
endif
ret
// Approximately 0 instruction slots used
