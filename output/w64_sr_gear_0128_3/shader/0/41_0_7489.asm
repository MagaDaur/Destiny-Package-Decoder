//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:51 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb7[63], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 15
add r0.xyz, -v4.xyzx, cb12[7].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r0.xyz, r0.xyzx, r1.xxxx
sqrt r0.w, r0.w
dp3 r0.x, r0.xyzx, v0.xyzx
ftou r0.y, v2.w
uge r0.z, r0.y, l(4)
if_nz r0.z
  mad r1.xy, v3.zwzz, cb7[6].xyxx, cb7[6].zwzz
  mad r1.zw, v3.zzzw, cb7[7].xxxy, cb7[7].zzzw
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t8.wxyz, s1
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t9.xyzw, s1
  mad r1.xy, r1.xyxx, cb7[8].xxxx, cb7[8].yyyy
  add_sat r0.z, r1.z, cb7[8].z
else
  uge r1.z, r0.y, l(2)
  if_nz r1.z
    mad r1.zw, v3.zzzw, cb7[3].xxxy, cb7[3].zzzw
    mad r3.xy, v3.zwzz, cb7[4].xyxx, cb7[4].zwzz
    sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.zwzz, t6.wxyz, s1
    sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t7.xyzw, s1
    mad r1.xy, r3.xyxx, cb7[5].xxxx, cb7[5].yyyy
    add_sat r0.z, r3.z, cb7[5].z
  else
    mad r1.zw, v3.zzzw, cb7[0].xxxy, cb7[0].zzzw
    mad r3.xy, v3.zwzz, cb7[1].xyxx, cb7[1].zwzz
    sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.zwzz, t4.wxyz, s1
    sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t5.xyzw, s1
    mad r1.xy, r3.xyxx, cb7[2].xxxx, cb7[2].yyyy
    add_sat r0.z, r3.z, cb7[2].z
  endif
endif
imad r3.xyzw, l(9, 9, 9, 9), r0.yyyy, l(9, 11, 12, 13)
imad r4.xyzw, l(9, 9, 9, 9), r0.yyyy, l(14, 15, 16, 17)
mov_sat r5.xyzw, cb7[r3.y + 0].xyzw
mov_sat r1.zw, cb7[r3.z + 0].yyyz
mov_sat r6.xyzw, cb7[r4.w + 0].xyzw
sample_indexable(texture2d)(float,float,float,float) r7.xyz, v3.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r8.xy, v3.xyxx, t1.xyzw, s3
mad r8.xy, r8.xyxx, cb0[16].xxxx, cb0[16].yyyy
sample_indexable(texture2d)(float,float,float,float) r9.xyz, v3.xyxx, t2.xywz, s4
ge r0.y, r9.z, l(0.156862751)
and r3.y, r0.y, l(0x3f800000)
add r8.zw, r9.yyyz, l(0.000000, 0.000000, -0.250000, -0.188235298)
mul_sat r4.w, r8.w, l(1.231884)
mad_sat r4.w, cb7[r4.y + 0].y, r4.w, cb7[r4.y + 0].x
mad_sat r4.y, cb7[r4.y + 0].w, r4.w, cb7[r4.y + 0].z
mul_sat r10.xy, r9.zyzz, l(7.968750, 4.000000, 0.000000, 0.000000)
add r4.w, l(128.500000), cb0[2].x
mul r4.w, r4.w, l(0.00390625000)
ge r7.w, l(0.050000), r10.x
movc r4.w, r7.w, r4.w, l(-1.000000)
mul_sat r11.xyz, r2.yzwy, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r2.yzw, r2.yyzw, l(0.000000, -0.250000, -0.250000, -0.250000)
mad_sat r12.xyz, cb7[r3.x + 0].xyzx, r11.xyzx, r2.yzwy
add r12.xyz, r12.xyzx, -cb7[r3.x + 0].xyzx
mad r12.xyz, r5.xxxx, r12.xyzx, cb7[r3.x + 0].xyzx
mad_sat r3.x, cb7[r3.w + 0].y, r9.y, cb7[r3.w + 0].x
mad_sat r3.x, cb7[r3.w + 0].w, r3.x, cb7[r3.w + 0].z
mov_sat r8.z, r8.z
mad_sat r2.x, r2.x, r10.y, r8.z
mad_sat r5.x, cb7[r3.w + 0].y, r2.x, cb7[r3.w + 0].x
mad_sat r3.w, cb7[r3.w + 0].w, r5.x, cb7[r3.w + 0].z
add r3.w, -r3.x, r3.w
mad r3.x, r5.z, r3.w, r3.x
mul_sat r13.xyz, r7.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r14.xyz, r7.xyzx, l(-0.250000, -0.250000, -0.250000, 0.000000)
mad_sat r12.xyz, r12.xyzx, r13.xyzx, r14.xyzx
mad r5.xz, r1.xxyx, r5.yyyy, r8.xxyx
add r0.z, r0.z, l(-1.000000)
mad r3.w, r5.y, r0.z, l(1.000000)
mad_sat r2.yzw, cb7[r4.x + 0].xxyz, r11.xxyz, r2.yyzw
add r2.yzw, r2.yyzw, -cb7[r4.x + 0].xxyz
mad r2.yzw, r6.xxxx, r2.yyzw, cb7[r4.x + 0].xxyz
mad_sat r2.yzw, r2.yyzw, r13.xxyz, r14.xxyz
mad_sat r4.x, cb7[r4.z + 0].y, r9.y, cb7[r4.z + 0].x
mad_sat r4.x, cb7[r4.z + 0].w, r4.x, cb7[r4.z + 0].z
mad_sat r2.x, cb7[r4.z + 0].y, r2.x, cb7[r4.z + 0].x
mad_sat r2.x, cb7[r4.z + 0].w, r2.x, cb7[r4.z + 0].z
add r2.x, -r4.x, r2.x
mad r2.x, r6.z, r2.x, r4.x
mad r1.xy, r1.xyxx, r6.yyyy, r8.xyxx
mad r0.z, r6.y, r0.z, l(1.000000)
add r6.xyz, -r2.yzwy, r12.xyzx
mad r2.yzw, r4.yyyy, r6.xxyz, r2.yyzw
add r4.xz, -r1.xxyx, r5.xxzx
mad r1.xy, r4.yyyy, r4.xzxx, r1.xyxx
add r3.x, -r2.x, r3.x
mad r2.x, r4.y, r3.x, r2.x
add r3.x, r5.w, -r6.w
mad r5.y, r4.y, r3.x, r6.w
add r3.x, -r0.z, r3.w
mad r0.z, r4.y, r3.x, r0.z
add r3.x, l(128.500000), cb7[r3.z + 0].x
mul r3.x, r3.x, l(0.00390625000)
ge r3.z, l(0.050000), r5.w
movc r3.x, r3.z, r3.x, l(-1.000000)
min r0.z, r0.z, r2.x
lt r2.x, l(0.000100), r1.z
mul r3.z, r1.z, l(-2.000000)
mad r1.z, r1.z, l(-2.000000), l(-0.200000)
mul r1.z, r0.z, r1.z
mad r1.z, r1.z, l(-5.002501), r3.z
min r1.z, r0.z, r1.z
movc r5.x, r2.x, r1.z, r0.z
add r2.xyz, -r7.xyzx, r2.yzwy
mad r2.xyz, r3.yyyy, r2.xyzx, r7.xyzx
add r1.xy, -r8.xyxx, r1.xyxx
mad r1.xy, r3.yyyy, r1.xyxx, r8.xyxx
mov r10.z, r9.y
add r3.zw, -r10.zzzx, r5.xxxy
mad r3.zw, r3.yyyy, r3.zzzw, r10.zzzx
mul r0.z, r1.w, r3.y
movc o0.w, r0.y, r3.x, r4.w
mul r0.x, r0.x, r0.x
mad_sat r0.x, r0.x, cb0[15].x, cb0[15].y
mul r4.xyz, r0.xxxx, cb0[14].xyzx
mad r5.xyz, cb0[14].xyzx, r0.xxxx, r2.xyzx
max r0.x, r5.y, r5.x
max r0.x, r5.z, r0.x
add_sat r0.x, r0.x, l(-1.000000)
add r0.x, -r0.x, l(1.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
max r0.x, r2.y, r2.x
max r0.x, r2.z, r0.x
max r0.x, r0.x, l(1.000000)
div r2.xyz, r2.xyzx, r0.xxxx
max r0.x, r4.y, r4.x
max r0.x, r4.z, r0.x
dp2 r0.y, r1.xyxx, r1.xyxx
add r0.y, -r0.y, l(1.000000)
max r0.y, r0.y, l(0.000000)
sqrt r1.z, r0.y
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r1.xyzx
mul r4.xyz, r1.yyyy, v2.xyzx
mad r1.xyw, v1.xyxz, r1.xxxx, r4.xyxz
mad r1.xyz, v0.xyzx, r1.zzzz, r1.xywx
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r1.xyzx
mov_sat r0.y, cb0[12].x
dp3 r1.w, v0.xyzx, v0.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v0.xyzx
dp3 r1.w, cb0[5].xyzx, r4.xyzx
add r2.w, -cb0[3].x, cb0[4].x
mad_sat r1.w, r1.w, r2.w, cb0[3].x
add r2.w, v4.z, -cb0[6].z
mul r2.w, r2.w, cb0[7].x
max r2.w, r2.w, l(0.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb0[8].x
exp r2.w, r2.w
mul_sat r2.w, r2.w, cb0[9].x
mul r1.w, r1.w, r2.w
mad_sat r0.w, r0.w, cb0[10].x, cb0[10].y
mul r0.w, r0.w, r1.w
dp3 r1.w, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
max r1.w, r1.w, l(0.000100)
log r1.w, r1.w
mul r1.w, r1.w, -cb0[11].x
exp r1.w, r1.w
mul r0.w, r0.w, r1.w
add o2.w, r0.y, v0.w
mad r0.x, r0.w, cb0[13].x, r0.x
mad r0.y, r3.z, l(0.125000), l(0.375000)
mad_sat o1.xyz, r1.xyzx, r0.yyyy, l(0.500000, 0.500000, 0.500000, 0.000000)
add r0.x, r0.x, l(0.00781250000)
log r0.x, r0.x
mad_sat r0.x, r0.x, l(0.0769230798), l(0.538461566)
mov_sat r9.x, r9.x
add r0.x, r0.x, r9.x
mul o2.yz, r0.xxzx, l(0.000000, 0.500000, 0.800000, 0.000000)
mov o0.xyz, r2.xyzx
mov o1.w, l(0)
mov o2.x, r3.w
ret
// Approximately 0 instruction slots used
