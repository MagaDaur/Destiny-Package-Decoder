//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:53 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// SV_POSITION              0   xyzw        4      POS   float   xy
// SV_isFrontFace           0   x           5    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v4.xy, position
dcl_output o0.xyzw
dcl_temps 2
dp3 r0.x, -v2.xyzx, -v2.xyzx
sqrt r0.x, r0.x
mul r0.x, r0.x, l(0.015625)
min r0.x, r0.x, l(1.000000)
sqrt r0.z, r0.x
mul r0.xy, v4.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r0.z, r0.xyzx, t21.yzxw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r0.xyxx, t20.xyzw, s1, l(0.000000)
mul r0.xy, r0.xyxx, cb12[12].xyxx
ftoi r1.xy, r0.xyxx
add r0.x, r0.w, l(-1.000000)
mad r0.x, r0.z, r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.y, v0.xyxx, t0.xyzw, s2
mad_sat r0.z, r0.y, v3.z, v3.y
add r0.yw, -r0.yyyy, l(0.000000, 2.000000, 0.000000, 1.000000)
mul_sat r0.z, r0.z, v0.z
mul r0.x, r0.x, r0.z
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyzw, t10.yzxw
mad r0.z, r0.z, cb2[0].y, cb2[0].x
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mad r0.w, r0.w, v3.x, v0.w
mul r0.y, r0.y, v3.x
add r0.z, -r0.w, r0.z
div_sat r0.y, r0.z, r0.y
add r0.y, -r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
mad r0.yz, v0.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r0.y, r0.yzyy, r0.yzyy
sqrt r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
max r0.y, r0.y, l(0.000000)
mul r0.z, r0.y, r0.y
mul r0.y, r0.y, r0.z
mul r0.z, r0.z, l(3.000000)
mad r0.y, r0.y, l(-2.000000), r0.z
add r0.y, r0.y, l(-2.511886521E-007)
mul r0.y, r0.y, l(1.00000024)
max r0.y, r0.y, l(0.000000)
mov r1.y, l(1.000000)
mov r1.xw, v3.wwww
mul r0.yz, r0.yyyy, r1.xxyx
mov r1.z, cb13[1].w
mul r0.yz, r1.zzwz, r0.yyzy
mul r0.yz, r0.yyzy, cb13[1].xxwx
mul r0.yw, r0.yyyy, cb8[7].xxxy
mul r0.z, r0.z, cb13[1].x
mul r1.z, r0.z, cb8[7].z
mul r1.xy, r0.ywyy, l(0.132000, 0.243864, 0.000000, 0.000000)
mul o0.xyz, r0.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
