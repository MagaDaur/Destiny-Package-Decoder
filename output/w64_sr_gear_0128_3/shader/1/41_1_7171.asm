//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:53 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float      w
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float
// TEXCOORD                 8   xyzw        8     NONE   float
// POSITION                 0   xyz         9     NONE   float    yz
// POSITION                 1   xy         10     NONE   float   xy
// POSITION                 2   xyz        11     NONE   float   xyz
// SV_VERTEXID              0   x          12   VERTID    uint
// SV_InstanceID            0   x          13   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_POSITION              0   xyzw        8      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[152], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.w
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v9.yz
dcl_input v10.xy
dcl_input v11.xyz
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output_siv o8.xyzw, position
dcl_temps 8
mul r0.xyz, v3.yyyy, cb1[1].xyzx
mad r0.xyz, cb1[0].xyzx, v3.xxxx, r0.xyzx
mad r0.xyz, cb1[2].xyzx, v3.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb1[3].xyzx
add r0.xyz, -r0.xyzx, cb12[7].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
add r0.y, -r0.x, l(30.000000)
mul r0.z, v5.x, l(0.280000)
frc r0.z, r0.z
mul r0.w, r0.z, l(5999.999512)
add r0.z, -r0.z, cb0[115].x
add r0.z, r0.z, l(1.000000)
mul_sat r0.z, r0.z, l(3.333333)
mad r0.x, r0.x, l(999.999939), -r0.w
min_sat r0.x, r0.y, r0.x
mul r0.x, r0.z, r0.x
mul r0.x, r0.x, cb0[11].w
mul r0.x, r0.x, cb0[151].x
lt r0.y, l(0.999000), v2.w
movc r0.x, r0.y, l(0), r0.x
mov o0.z, r0.x
lt r0.x, r0.x, l(0.000001)
mov r1.w, l(0)
mov r2.x, cb1[0].y
mov r2.y, cb1[1].y
mov r2.z, cb1[2].y
mov r3.z, cb1[1].z
mov r3.x, cb1[2].z
mov r3.y, cb1[0].z
dp3 r4.y, -cb12[6].xyzx, cb1[0].xyzx
dp3 r4.z, -cb12[6].xyzx, cb1[1].xyzx
dp3 r4.x, -cb12[6].xyzx, cb1[2].xyzx
mul r0.yzw, r3.xxyz, r4.zzxy
mad r0.yzw, r3.zzxy, r4.xxyz, -r0.yyzw
dp3 r2.w, r0.yzwy, r0.yzwy
rsq r3.x, r2.w
lt r2.w, l(0.001000), r2.w
mul r0.yzw, r0.yyzw, r3.xxxx
movc r2.xyz, r2.wwww, r0.yzwy, r2.xyzx
mul r0.yzw, r2.yyzx, r4.xxyz
mad r3.xyz, r4.zxyz, r2.zxyz, -r0.yzwy
mov r5.x, r4.y
mov r6.x, r4.z
mov r2.w, r3.x
mad r0.yz, v9.yyzy, cb1[4].yyzy, cb1[5].yyzy
mul r0.yz, r0.yyzy, cb0[13].yyyy
dp2 r7.x, r0.yzyy, r2.xwxx
mov r5.yz, r2.xxwx
dp3 r5.x, v11.xyzx, r5.xyzx
mov r3.w, r2.y
mov r4.y, r2.z
dp2 r7.y, r0.zyzz, r3.ywyy
mov r6.yz, r3.wwyw
mov r4.z, r3.z
dp3 r5.y, v11.xyzx, r6.xyzx
dp2 r7.z, r0.yzyy, r4.yzyy
dp3 r5.z, v11.xyzx, r4.xyzx
mul r0.y, v3.w, l(0.500000)
sincos r2.x, r3.x, r0.y
mul r1.xyz, r7.xyzx, r3.xxxx
mul r0.yzw, r2.xxxx, l(0.000000, 1.000000, 0.000000, 0.000000)
mul r2.xyzw, -r0.wywy, r7.yzxx
mad r4.xyz, -r7.zxyz, -r0.wwyw, r2.xyzx
mov r4.w, -r2.w
add r1.xyzw, r1.xyzw, r4.xyzw
mul r2.xyz, r0.wyww, r1.yzxy
mad r2.xyz, r0.wwyw, r1.zxyz, -r2.xyzx
mad r1.xyz, r3.xxxx, r1.xyzx, r2.xyzx
mad r1.xyz, r1.wwww, r0.ywwy, r1.xyzx
add r1.xyz, r1.xyzx, v3.xyzx
mul r2.xyz, r1.yyyy, cb1[1].xyzx
mad r1.xyw, cb1[0].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb1[2].xyzx, r1.zzzz, r1.xywx
add r1.xyz, r1.xyzx, cb1[3].xyzx
mul r2.xyzw, r1.yyyy, cb12[1].xyzw
mad r2.xyzw, cb12[0].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb12[2].xyzw, r1.zzzz, r2.xyzw
add o2.xyz, -r1.xyzx, cb12[7].xyzx
add r1.xyzw, r2.xyzw, cb12[3].xyzw
mov o0.w, r1.w
mad o0.xy, v10.xyxx, cb1[6].xyxx, cb1[6].zwzz
mul r2.xyzw, -r0.wywy, r5.yzxx
mad r4.xyz, -r5.zxyz, -r0.wwyw, r2.xyzx
mul r5.xyz, r5.xyzx, r3.xxxx
mov r4.w, -r2.w
mov r5.w, l(0)
add r2.xyzw, r4.xyzw, r5.xyzw
mul r3.yzw, r0.wwyw, r2.yyzx
mad r3.yzw, r0.wwwy, r2.zzxy, -r3.yyzw
mad r2.xyz, r3.xxxx, r2.xyzx, r3.yzwy
mad r0.yzw, r2.wwww, r0.yyzw, r2.xxyz
mul r2.xyz, r0.zzzz, cb1[1].xyzx
mad r2.xyz, cb1[0].xyzx, r0.yyyy, r2.xyzx
mad o1.xyz, cb1[2].xyzx, r0.wwww, r2.xyzx
mov o3.xyzw, v0.xyzw
mov o4.xyzw, v1.xyzw
mov o5.xyzw, v4.xyzw
mov o6.xyz, v5.yzwy
mov o6.w, v6.x
mov o7.xzw, v6.yyzw
mov o7.y, l(0)
lt r0.y, v6.z, l(0.000001)
or r0.x, r0.y, r0.x
movc o8.xyzw, r0.xxxx, l(10000.000000,10000.000000,-10000.000000,1.000000), r1.xyzw
ret
// Approximately 0 instruction slots used
