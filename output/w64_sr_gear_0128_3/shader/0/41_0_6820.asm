//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:55 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float
// TEXCOORD                 6   xyzw        6     NONE   float
// TEXCOORD                 7   xyzw        7     NONE   float      w
// TEXCOORD                 8   xyzw        8     NONE   float    yzw
// TEXCOORD                 9   xyzw        9     NONE   float   xyzw
// SV_POSITION              0   xyzw       10      POS   float   xy
// SV_isFrontFace           0   x          11    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[121], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v7.w
dcl_input_ps linear v8.yzw
dcl_input_ps linear v9.xyzw
dcl_input_ps_siv linear noperspective v10.xy, position
dcl_output o0.xyzw
dcl_temps 3
mad r0.xy, v0.xyxx, v4.xyxx, v4.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t3.xyzw, s2
mad r0.xy, r0.xyxx, v7.wwww, v0.xyxx
mad r0.xy, v7.wwww, l(-0.500000, -0.500000, 0.000000, 0.000000), r0.xyxx
mul r0.z, v8.y, cb0[120].x
round_ni r0.z, r0.z
mul r0.zw, r0.zzzz, cb0[117].xxxy
mad r0.xy, r0.xyxx, cb0[116].xyxx, r0.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s2
log r0.x, r0.x
mul r0.x, r0.x, l(2.200000)
exp r0.x, r0.x
mad_sat r0.y, r0.x, v9.z, v9.y
mad r0.xz, r0.xxxx, l(-1.062400, 0.000000, -0.416300029, 0.000000), l(1.500000, 0.000000, 0.674300, 0.000000)
mul_sat r0.y, r0.y, v0.z
dp3 r0.w, -v2.xyzx, -v2.xyzx
sqrt r0.w, r0.w
mul r0.w, r0.w, l(0.015625)
min r0.w, r0.w, l(1.000000)
sqrt r1.z, r0.w
mul r1.xy, v10.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r0.w, r1.xyzx, t21.yzwx, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.xyxx, t20.xywz, s1, l(0.000000)
mul r1.xy, r1.xyxx, cb12[12].xyxx
ftoi r2.xy, r1.xyxx
add r1.x, r1.z, l(-1.000000)
mad r0.w, r0.w, r1.x, l(1.000000)
mul r0.y, r0.w, r0.y
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r2.xyzw, t10.yzwx
mad r0.w, r0.w, cb2[0].y, cb2[0].x
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mad r0.z, r0.z, v9.x, v0.w
mul r0.x, r0.x, v9.x
add r0.z, -r0.z, r0.w
div_sat r0.x, r0.z, r0.x
add r0.x, -r0.x, l(1.000000)
add r0.z, -r0.x, l(1.000000)
add r1.y, r0.x, v8.z
mul r0.x, r0.z, r0.y
mad r0.yz, v0.xxyx, v3.xxyx, v3.zzwz
sample_indexable(texture2d)(float,float,float,float) r1.x, r0.yzyy, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r1.xyxx, t1.wxyz, s3
max r1.x, v8.w, l(0.001000)
log r1.x, r1.x
mul r1.x, r1.x, l(2.200000)
exp r1.x, r1.x
add r0.yzw, r0.yyzw, -r1.xxxx
add r1.x, -r1.x, l(1.000000)
max r1.x, r1.x, l(0.000010)
div r0.yzw, r0.yyzw, r1.xxxx
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r1.x, l(1.000000)
mov r1.yz, v9.wwww
mul r0.yzw, r0.yyzw, r1.xxyz
mov r1.x, v9.w
mov r1.yz, cb13[1].wwww
mul r0.yzw, r0.yyzw, r1.xxyz
mul r0.yzw, r0.yyzw, cb13[1].wwxx
mul r0.y, r0.y, cb13[1].x
mul r0.zw, r0.zzzw, cb8[7].yyyz
mul r1.yz, r0.zzwz, l(0.000000, 0.230700, 0.048102, 0.000000)
mul r1.x, r0.y, cb8[7].x
mul o0.xyz, r0.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
