//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[104], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 12
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[93].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[103].x
  ftou r0.y, cb0[94].x
  imad r0.y, l(5), vThreadID.x, r0.y
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
  iadd r2.xyzw, r0.yyyy, l(1, 2, 3, 4)
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.xyzw, r2.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r5.xyzw, r2.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.xyz, r2.wwww, t0.xyzw
  mad r6.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mov_sat r7.xyzw, r5.zzww
  mad r7.xyzw, r7.xyzw, l(2.000000, 0.000000, 0.000000, 2.000000), l(1.000000, 0.000000, 0.000000, 1.000000)
  mov_sat r8.z, r2.x
  mad r0.yzw, r8.zzzz, l(0.000000, 0.000000, 0.000000, 2.000000), r7.zzwy
  mov r7.yz, l(0,0,1.000000,0)
  add r7.xyz, r0.yzwy, r7.xyzx
  mov_sat r0.y, r1.w
  mad r0.zw, r0.yyyy, l(0.000000, 0.000000, 6.666667, -6.666668), l(0.000000, 0.000000, 0.000000, 6.666668)
  ge r9.xyzw, r0.yyyy, l(0.000000, 0.150000, 0.850000, 1.000000)
  and r9.xyzw, r9.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r9.xyz, r9.yzwy, r9.xyzx
  add r9.xyz, r9.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r9.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r9.xyz, r9.xyzx
  mul r9.xz, r0.zzwz, r9.xxzx
  add r0.yz, r9.xxyx, r9.xxyx
  add r0.y, r0.z, r0.y
  mad r0.y, r9.z, l(2.000000), r0.y
  min r0.y, r0.y, l(1.000000)
  mad r9.xyzw, r8.zzzz, l(2.185002, 6.641724, -4.143539, 3.244307), l(0.070227, -2.788406, 1.787079, -9.622349)
  mad r10.xyzw, r8.zzzz, l(0.139013, 0.454948, 4.527390, 9.805149), l(0.000000, 0.048623, -1.789883, -2.426151)
  mad r0.zw, r8.zzzz, l(0.000000, 0.000000, -1.726868, -3.534912), l(0.000000, 0.000000, 4.480347, 1.781494)
  mul r11.x, r8.z, r8.z
  mad r9.xyzw, r9.xyzw, r11.xxxx, r10.xyzw
  mad r0.z, r0.z, r11.x, r0.w
  ge r10.xyzw, r8.zzzz, l(0.000000, 0.372222, 0.522222, 0.672222)
  and r10.xyzw, r10.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  ge r11.xy, r8.zzzz, l(0.961111, 1.000000, 0.000000, 0.000000)
  and r11.yz, r11.xxyx, l(0, 0x3f800000, 0x3f800000, 0)
  add r10.xyz, r10.yzwy, r10.xyzx
  add r10.xyz, r10.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r10.xyz, r10.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r10.xyz, r10.xyzx
  mul r9.xyz, r9.xyzx, r10.xyzx
  add r10.xy, r11.zzzz, r11.yzyy
  add r10.xy, r10.xyxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  mul r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  frc r10.xy, r10.xyxx
  mul r0.z, r0.z, r10.x
  mov r0.w, l(2.000000)
  mul r9.xy, r9.xyxx, r0.wwww
  mul r0.yz, r0.yyzy, l(0.000000, 0.050000, 2.000000, 0.000000)
  add r9.x, r9.y, r9.x
  mad r0.w, r0.w, r9.z, r9.x
  mad r0.w, r9.w, r10.w, r0.w
  mad r0.z, r10.y, l(4.000000), r0.z
  mad r0.z, r11.z, l(1.000000), r0.z
  movc_sat r0.z, r11.x, r0.z, r0.w
  mad r0.z, r0.z, l(0.200000018), l(0.100000)
  mul r8.x, r0.z, r0.y
  imad r0.x, l(7), vThreadID.x, r0.x
  store_uav_typed u0.xyzw, r0.xxxx, r1.xyzw
  iadd r1.xyzw, r0.xxxx, l(1, 2, 3, 4)
  store_uav_typed u0.xyzw, r1.xxxx, r3.xyzw
  mad r6.xw, r4.wwwx, l(2.000000, 0.000000, 0.000000, 1.000000), l(-1.000000, 0.000000, 0.000000, 0.000000)
  store_uav_typed u0.xyzw, r1.yyyy, r6.xyzw
  mov r7.w, r4.y
  store_uav_typed u0.xyzw, r1.zzzz, r7.xyzw
  mov r8.yw, r4.zzzw
  store_uav_typed u0.xyzw, r1.wwww, r8.xyzw
  iadd r0.yz, r0.xxxx, l(0, 5, 6, 0)
  store_uav_typed u0.xyzw, r0.yyyy, r5.xyzw
  mov r2.w, l(0)
  store_uav_typed u0.xyzw, r0.zzzz, r2.xyzw
endif
ret
// Approximately 0 instruction slots used
