//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:51 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[99], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 9
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[88].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[98].x
  ftou r0.y, cb0[89].x
  ishl r0.z, vThreadID.x, l(2)
  iadd r0.y, r0.z, r0.y
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
  iadd r0.yzw, r0.yyyy, l(0, 1, 2, 3)
  ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r0.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.xyz, r0.wwww, t0.xyzw
  mov_sat r0.y, r4.x
  mad r5.xyz, r0.yyyy, l(0.250000, -0.236842, -2.236842, 0.000000), l(0.250000, 1.473685, 1.000000, 0.000000)
  mad_sat r0.z, r1.w, l(0.500000), l(-0.500000)
  mad r0.z, r0.z, l(0.500000), l(0.500000)
  mul r6.w, r0.z, r5.x
  mul r0.z, r0.y, r0.y
  mad_sat r0.z, r5.y, r0.z, r5.z
  mad r0.z, r0.z, l(0.00350000057), l(0.004500)
  mov_sat r0.w, r2.w
  mad r5.xyz, r0.wwww, l(0.378378, -352.035614, 4.057735, 0.000000), l(-1.378378, 94.232841, -7.371519, 0.000000)
  mul r5.w, r0.w, r0.w
  mad r5.x, r5.x, r5.w, l(1.000000)
  max r5.x, r5.x, l(0.000000)
  mad r5.x, r5.x, l(0.950000), l(0.050000)
  mul r0.z, r0.z, r5.x
  add_sat r5.x, r1.w, l(-1.000000)
  mad r5.x, r5.x, l(0.750000), l(0.250000)
  mul r7.y, r0.z, r5.x
  mad r8.xy, r0.wwww, l(0.000000, 2.557997, 0.000000, 0.000000), l(0.000000, 0.755786, 0.000000, 0.000000)
  mad r5.xy, r5.yzyy, r5.wwww, r8.xyxx
  ge r8.xyz, r0.wwww, l(0.000000, 0.176667, 1.000000, 0.000000)
  and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r0.zw, r8.yyyz, r8.xxxy
  add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000001, 0.000001)
  mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  frc r0.zw, r0.zzzw
  mul r0.zw, r5.xxxy, r0.zzzw
  add r0.zw, r0.zzzw, r0.zzzw
  add_sat r0.z, r0.w, r0.z
  mad r5.xy, r0.yyyy, l(0.192982, 5.758621, 0.000000, 0.000000), l(0.000000, -4.758621, 0.000000, 0.000000)
  ge r8.xyz, r0.yyyy, l(0.000000, 0.855000, 1.000000, 0.000000)
  and r8.xyw, r8.xyxz, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
  add r8.xyz, r8.ywwy, r8.xywx
  add r8.xyz, r8.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r8.xyz, r8.xyzx
  mul r0.yw, r5.xxxy, r8.xxxy
  mul r0.yw, r0.yyyw, l(0.000000, 2.000000, 0.000000, 2.000000)
  add r0.y, r0.w, r0.y
  mad r0.y, r8.z, l(2.000000), r0.y
  mad_sat r0.y, r8.w, l(1.000000), r0.y
  add r0.y, r0.y, l(1.000000)
  mul r0.y, r0.y, r0.z
  mul_sat r0.z, l(0.071429), cb0[3].x
  mad r0.w, r0.z, l(986895.062500), l(-977025.125000)
  ge r5.xyz, r0.zzzz, l(0.989999, 0.990000, 1.000000, 0.000000)
  and r5.xyw, r5.xyxz, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
  add r5.xy, r5.ywyy, r5.xyxx
  add r5.xy, r5.xyxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  mul r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  frc r5.yz, r5.xxyx
  mul r5.x, r0.w, r5.y
  mul r0.zw, r5.xxxz, l(0.000000, 0.000000, 2.000000, 2.000000)
  add r0.z, r0.w, r0.z
  mad_sat r0.z, r5.w, l(1.000000), r0.z
  mul r7.z, r0.z, r0.y
  imad r0.x, l(5), vThreadID.x, r0.x
  store_uav_typed u0.xyzw, r0.xxxx, r1.xyzw
  iadd r1.xyzw, r0.xxxx, l(1, 2, 3, 4)
  store_uav_typed u0.xyzw, r1.xxxx, r2.xyzw
  mov r6.xyz, r3.xyzx
  store_uav_typed u0.xyzw, r1.yyyy, r6.xyzw
  mov r7.x, l(0)
  mov r7.w, r3.w
  store_uav_typed u0.xyzw, r1.zzzz, r7.xyzw
  mov r4.w, l(0)
  store_uav_typed u0.xyzw, r1.wwww, r4.xyzw
endif
ret
// Approximately 0 instruction slots used
