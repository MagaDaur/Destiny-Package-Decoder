//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:05 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// TEXCOORD                 1   xyzw        1     NONE   float
// TEXCOORD                 2   xyzw        2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float
// TEXCOORD                 4   xyzw        4     NONE   float
// TEXCOORD                 5   xyzw        5     NONE   float
// TEXCOORD                 6   xyzw        6     NONE   float
// TEXCOORD                 7   xyzw        7     NONE   float
// TEXCOORD                 8   xyzw        8     NONE   float
// TEXCOORD                 9   xyzw        9     NONE   float
// SV_VERTEXID              0   x          10   VERTID    uint   x
// SV_InstanceID            0   x          11   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xy          8     NONE   float   xy
// SV_POSITION              0   xyzw        9      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[139], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_resource_buffer (float,float,float,float) t2
dcl_input_sgv v10.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xy
dcl_output_siv o9.xyzw, position
dcl_temps 10
itof r0.x, v10.x
add r0.x, r0.x, l(0.500000)
mad r0.x, r0.x, l(0.500000), l(-0.500000)
round_ne r0.x, r0.x
ftoi r0.y, r0.x
ishl r0.z, r0.y, l(1)
iadd r0.z, -r0.z, v10.x
imul null, r0.w, r0.y, l(10)
itof r0.w, r0.w
add r0.w, r0.w, cb0[36].x
add r1.xyzw, r0.wwww, l(6.000000, 3.000000, 4.000000, 7.000000)
ftou r1.xyzw, r1.xyzw
ld_indexable(buffer)(float,float,float,float) r2.xyzw, r1.xxxx, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r1.x, r1.yyyy, t2.wxyz
ld_indexable(buffer)(float,float,float,float) r3.xyzw, r1.zzzz, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r4.xyzw, r1.wwww, t2.xyzw
ftou r1.y, r0.w
ld_indexable(buffer)(float,float,float,float) o3.xyzw, r1.yyyy, t2.xyzw
add r1.yzw, r0.wwww, l(0.000000, 1.000000, 8.000000, 9.000000)
ftou r1.yzw, r1.yyzw
ld_indexable(buffer)(float,float,float,float) o4.xyzw, r1.yyyy, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r5.xyzw, r1.zzzz, t2.xyzw
ld_indexable(buffer)(float,float,float,float) r0.w, r1.wwww, t2.yzwx
mul r1.yzw, r3.yyyy, cb1[1].xxyz
mad r1.yzw, cb1[0].xxyz, r3.xxxx, r1.yyzw
mad r1.yzw, cb1[2].xxyz, r3.zzzz, r1.yyzw
add r1.yzw, r1.yyzw, cb1[3].xxyz
lt r6.x, l(1.000000), cb0[114].x
if_nz r6.x
  ilt r6.x, r0.y, l(0)
  if_nz r6.x
    add r6.x, l(4.000000), cb0[36].x
    ftou r6.x, r6.x
    ld_indexable(buffer)(float,float,float,float) r6.xyz, r6.xxxx, t2.xyzw
  else
    add r6.w, l(-1.000000), cb0[114].x
    add r0.x, r0.x, -r6.w
    lt r0.x, |r0.x|, l(0.001000)
    if_nz r0.x
      iadd r0.x, r0.y, l(-1)
      itof r0.x, r0.x
      mad r0.x, r0.x, cb0[37].x, cb0[36].x
      add r0.x, r0.x, l(4.000000)
      ftou r0.x, r0.x
      ld_indexable(buffer)(float,float,float,float) r7.xyz, r0.xxxx, t2.xyzw
      mad r6.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r7.xyzx
    else
      iadd r0.x, r0.y, l(1)
      itof r0.x, r0.x
      mad r0.x, r0.x, cb0[37].x, cb0[36].x
      add r0.x, r0.x, l(4.000000)
      ftou r0.x, r0.x
      ld_indexable(buffer)(float,float,float,float) r6.xyz, r0.xxxx, t2.xyzw
    endif
  endif
else
  mov r6.xyz, l(0,0,0,0)
endif
mul r3.xyz, r6.yyyy, cb1[1].xyzx
mad r3.xyz, cb1[0].xyzx, r6.xxxx, r3.xyzx
mad r3.xyz, cb1[2].xyzx, r6.zzzz, r3.xyzx
add r3.xyz, r3.xyzx, cb1[3].xyzx
add r3.xyz, -r1.yzwy, r3.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
lt r0.x, l(0.000010), r0.x
movc r3.xyz, r0.xxxx, r3.xyzx, l(1.000000,0,0,0)
add r6.xyz, -r1.yzwy, cb12[7].xyzx
sincos null, r0.xy, r2.xyxx
mul r7.x, r0.y, r0.x
sincos r0.x, null, r2.x
mul r7.y, r0.y, r0.x
sincos r7.z, null, -r2.y
itof r0.x, r0.z
lt r0.x, r0.x, l(0.500000)
frc r0.y, cb0[117].x
movc r0.y, r0.x, cb0[116].x, r0.y
mul r0.y, r0.y, l(3.141000)
sincos r2.x, r8.x, r0.y
dp3 r0.y, r3.xyzx, r3.xyzx
rsq r0.y, r0.y
mul r3.xyz, r0.yyyy, r3.xyzx
mul r8.yzw, r2.xxxx, r3.xxyz
mul r9.xyz, r7.zxyz, -r8.zwyz
mad r9.xyz, r7.yzxy, -r8.wyzw, -r9.xyzx
dp3 r0.y, r7.xyzx, -r8.yzwy
mov r9.w, -r0.y
mul r7.xyz, r7.xyzx, r8.xxxx
mov r7.w, l(0)
add r7.xyzw, r7.xyzw, r9.xyzw
mul r9.xyz, r7.yzxy, r8.wyzw
mad r9.xyz, r8.zwyz, r7.zxyz, -r9.xyzx
mad r7.xyz, r8.xxxx, r7.xyzx, r9.xyzx
mad r7.xyz, r7.wwww, r8.yzwy, r7.xyzx
mul r8.xyz, r5.yyyy, r7.xyzx
mad r1.yzw, r7.xxyz, r5.yyyy, r1.yyzw
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.z, r0.y
mul r6.xyz, r0.zzzz, r6.xyzx
dp3 r0.z, r8.xyzx, r8.xyzx
rsq r0.z, r0.z
mul o1.xyz, r0.zzzz, r8.xyzx
dp3 r0.z, r6.xyzx, r3.xyzx
mul r2.x, l(0.0174532942), cb0[107].x
add r2.y, cb0[107].x, cb0[108].x
mul r2.y, r2.y, l(0.0174532942)
sincos null, r2.xy, r2.xyxx
add r0.z, |r0.z|, -r2.x
add r2.x, -r2.x, r2.y
div_sat r0.z, r0.z, r2.x
movc o0.y, r0.x, cb0[116].x, cb0[117].x
mul r6.xyzw, r1.zzzz, cb12[1].xyzw
mad r6.xyzw, cb12[0].xyzw, r1.yyyy, r6.xyzw
mad r6.xyzw, cb12[2].xyzw, r1.wwww, r6.xyzw
add r6.xyzw, r6.xyzw, cb12[3].xyzw
sqrt r0.x, r0.y
mul r0.y, r4.z, l(0.280000)
frc r0.y, r0.y
mul r2.x, r0.y, cb0[96].x
mad r2.x, -r2.x, cb0[106].x, cb0[106].y
mad_sat r0.x, r0.x, cb0[106].x, r2.x
add r0.y, -r0.y, cb0[102].x
add r0.y, r0.y, l(1.000000)
mul_sat r0.y, r0.y, l(3.333333)
mul r0.x, r0.y, r0.x
mul r0.x, r0.z, r0.x
mul r0.x, r0.x, cb0[11].x
mul r0.x, r0.x, cb0[138].x
lt r0.y, l(0.999000), r3.w
movc o0.z, r0.y, l(0), r0.x
add o2.xyz, -r1.yzwy, cb12[7].xyzx
mov o0.w, r6.w
mov o0.x, r1.x
mov o5.xy, r2.zwzz
mov o5.zw, r4.xxxy
mov o6.xy, l(0,0,0,0)
mov o6.z, r1.x
mov o6.w, r4.w
mov o7.xzw, r5.xxyz
mov o7.y, l(0)
mov o9.xyzw, r6.xyzw
mov o8.x, r5.w
mov o8.y, r0.w
ret
// Approximately 0 instruction slots used
