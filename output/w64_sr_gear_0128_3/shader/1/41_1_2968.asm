//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:06 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   x z
// POSITION                 0   xyz         3     NONE   float   xyz
// POSITION                 1   xy          4     NONE   float   xy
// POSITION                 2   xyz         5     NONE   float   xyz
// SV_VERTEXID              0   x           6   VERTID    uint
// SV_InstanceID            0   x           7   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 3      w        1     NONE   float      w
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// SV_POSITION              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[116], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_input v1.xyzw
dcl_input v2.xz
dcl_input v3.xyz
dcl_input v4.xy
dcl_input v5.xyz
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output_siv o3.xyzw, position
dcl_temps 7
mul r0.xyz, v1.yyyy, cb1[1].xyzx
mad r0.xyz, cb1[0].xyzx, v1.xxxx, r0.xyzx
mad r0.xyz, cb1[2].xyzx, v1.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb1[3].xyzx
add r1.xyz, -r0.xyzx, cb12[7].xyzx
add r0.xyz, r0.xyzx, -cb12[7].xyzx
dp3 r0.x, -cb12[6].xyzx, r0.xyzx
dp3 r0.y, r1.xyzx, r1.xyzx
sqrt r0.y, r0.y
mad r0.yz, r0.yyyy, l(0.000000, 0.400000, -0.142857, 0.000000), l(0.000000, -0.400000, 2.714286, 0.000000)
min_sat r0.y, r0.z, r0.y
mul r0.y, r0.y, cb0[14].w
mul r0.zw, v2.zzzx, l(0.000000, 0.000000, 1760.000000, 0.500000)
div r0.x, r0.x, r0.z
sincos r1.x, r2.x, r0.w
max r0.x, r0.x, l(1.000000)
mul r0.z, r0.x, r0.x
mul r0.x, r0.x, v2.z
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.y, r0.z, r0.y
mul r0.y, r0.y, cb0[115].x
lt r0.z, l(0.999000), v1.w
movc r0.y, r0.z, l(0), r0.y
mov o0.z, r0.y
lt r0.y, r0.y, l(0.000001)
mad r1.yzw, v3.xxyz, cb1[4].xxyz, cb1[5].xxyz
mul r0.xzw, r0.xxxx, r1.yyzw
mov r3.z, cb1[0].y
mov r3.x, cb1[1].y
mov r3.y, cb1[2].y
mov r4.y, cb1[1].z
mov r4.z, cb1[2].z
mov r4.x, cb1[0].z
dp3 r5.y, -cb12[6].xyzx, cb1[0].xyzx
dp3 r5.z, -cb12[6].xyzx, cb1[1].xyzx
dp3 r5.x, -cb12[6].xyzx, cb1[2].xyzx
mul r1.yzw, r4.xxyz, r5.xxyz
mad r1.yzw, r4.zzxy, r5.yyzx, -r1.yyzw
dp3 r2.y, r1.yzwy, r1.yzwy
rsq r2.z, r2.y
lt r2.y, l(0.001000), r2.y
mul r1.yzw, r1.yyzw, r2.zzzz
movc r1.yzw, r2.yyyy, r1.yyzw, r3.xxyz
mul r2.yzw, r1.yyzw, r5.xxyz
mad r2.yzw, r5.zzxy, r1.zzwy, -r2.yyzw
mov r3.x, r5.y
mov r4.x, r5.z
mov r3.z, r2.y
mov r3.y, r1.w
dp3 r6.x, r0.xzwx, r3.xyzx
dp3 r3.x, v5.xyzx, r3.xyzx
mov r4.y, r1.y
mov r5.y, r1.z
mov r4.z, r2.z
mov r5.z, r2.w
dp3 r6.y, r0.xzwx, r4.xyzx
dp3 r3.y, v5.xyzx, r4.xyzx
dp3 r6.z, r0.xzwx, r5.xyzx
dp3 r3.z, v5.xyzx, r5.xyzx
mul r4.xyz, r2.xxxx, r6.xyzx
mov r4.w, l(0)
mul r0.xzw, r1.xxxx, l(1.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyzw, -r0.wxwx, r6.yzxx
mad r5.xyz, -r6.zxyz, -r0.wwxw, r1.xyzx
mov r5.w, -r1.w
add r1.xyzw, r4.xyzw, r5.xyzw
mul r2.yzw, r0.wwxw, r1.yyzx
mad r2.yzw, r0.wwwx, r1.zzxy, -r2.yyzw
mad r1.xyz, r2.xxxx, r1.xyzx, r2.yzwy
mad r1.xyz, r1.wwww, r0.xwwx, r1.xyzx
add r1.xyz, r1.xyzx, v1.xyzx
mul r2.yzw, r1.yyyy, cb1[1].xxyz
mad r1.xyw, cb1[0].xyxz, r1.xxxx, r2.yzyw
mad r1.xyz, cb1[2].xyzx, r1.zzzz, r1.xywx
add r1.xyz, r1.xyzx, cb1[3].xyzx
mul r4.xyzw, r1.yyyy, cb12[1].xyzw
mad r4.xyzw, cb12[0].xyzw, r1.xxxx, r4.xyzw
mad r4.xyzw, cb12[2].xyzw, r1.zzzz, r4.xyzw
add o2.xyz, -r1.xyzx, cb12[7].xyzx
add r1.xyzw, r4.xyzw, cb12[3].xyzw
mov o0.w, r1.w
mad o0.xy, v4.xyxx, cb1[6].xyxx, cb1[6].zwzz
mul r4.xyzw, -r0.wxwx, r3.yzxx
mad r5.xyz, -r3.zxyz, -r0.wwxw, r4.xyzx
mul r3.xyz, r2.xxxx, r3.xyzx
mov r5.w, -r4.w
mov r3.w, l(0)
add r3.xyzw, r3.xyzw, r5.xyzw
mul r2.yzw, r0.wwxw, r3.yyzx
mad r2.yzw, r0.wwwx, r3.zzxy, -r2.yyzw
mad r2.xyz, r2.xxxx, r3.xyzx, r2.yzwy
mad r0.xzw, r3.wwww, r0.xxzw, r2.xxyz
mul r2.xyz, r0.zzzz, cb1[1].xyzx
mad r2.xyz, cb1[0].xyzx, r0.xxxx, r2.xyzx
mad o1.xyz, cb1[2].xyzx, r0.wwww, r2.xyzx
mov o1.w, v2.z
lt r0.x, cb0[16].z, l(0.000001)
or r0.x, r0.x, r0.y
movc o3.xyzw, r0.xxxx, l(10000.000000,10000.000000,-10000.000000,1.000000), r1.xyzw
ret
// Approximately 0 instruction slots used
