//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:58 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// TEXCOORD                 1   xyzw        1     NONE   float
// TEXCOORD                 2   xyzw        2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xy
// TEXCOORD                 4   xyz         4     NONE   float
// SV_POSITION              0   xyzw        5      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb7[59], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v3.xy
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 7
mul r0.xy, v5.xyxx, cb12[12].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v3.xyxx, t3.xyzw, s4
add r0.z, -r1.z, r1.y
lt r0.z, r0.z, l(0.00470588217)
movc r0.z, r0.z, r1.y, r1.z
deriv_rtx_coarse r2.xy, r1.xyxx
deriv_rtx_coarse r2.z, r0.z
deriv_rty_coarse r3.xy, r1.xyxx
deriv_rty_coarse r3.z, r0.z
mul r1.zw, r2.yyyz, r2.xxxx
mul r2.xy, r3.yzyy, r3.xxxx
lt r2.zw, |r2.xxxy|, |r1.zzzw|
movc r1.zw, r2.zzzw, r1.zzzw, r2.xxxy
add r0.w, r1.x, l(-0.500000)
lt r0.w, |r0.w|, l(0.00470588217)
add r2.x, r1.y, r1.x
add r2.x, r2.x, l(-1.000000)
lt r2.x, |r2.x|, l(0.00588235306)
lt r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.z, r1.z, r2.x
add r2.x, -r1.y, l(1.000000)
movc r1.z, r1.z, r2.x, r1.x
add r2.x, r0.z, r1.z
add r2.x, r2.x, l(-1.000000)
lt r2.x, |r2.x|, l(0.00588235306)
and r1.w, r1.w, r2.x
add r2.x, -r0.z, l(1.000000)
movc r1.z, r1.w, r2.x, r1.z
movc r0.w, r0.w, r1.z, r1.x
ge r0.z, r0.z, l(0.500000)
if_nz r0.z
  mad r1.xz, v3.xxyx, cb7[6].xxyx, cb7[6].zzwz
  sample_indexable(texture2d)(float,float,float,float) r0.z, r1.xzxx, t8.xywz, s1
  mov r1.x, l(4)
else
  ge r1.y, r1.y, l(0.500000)
  if_nz r1.y
    mad r1.yz, v3.xxyx, cb7[3].xxyx, cb7[3].zzwz
    sample_indexable(texture2d)(float,float,float,float) r0.z, r1.yzyy, t6.xywz, s1
    mov r1.x, l(2)
  else
    mad r1.yz, v3.xxyx, cb7[0].xxyx, cb7[0].zzwz
    sample_indexable(texture2d)(float,float,float,float) r0.z, r1.yzyy, t4.xywz, s1
    mov r1.x, l(0)
  endif
endif
ge r0.w, r0.w, l(0.500000)
iadd r1.y, r1.x, l(1)
movc r0.w, r0.w, r1.y, r1.x
imul null, r0.w, r0.w, l(9)
mov_sat r1.xy, cb7[r0.w + 11].zwzz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v3.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v3.xyxx, t2.xzwy, s3
ge r1.z, r3.z, l(0.156862751)
and r1.w, r1.z, l(0x3f800000)
mul_sat r4.xy, r3.yxyy, l(7.968750, 7.968750, 0.000000, 0.000000)
mad_sat r2.w, cb0[4].y, r4.x, cb0[4].x
movc r1.z, r1.z, l(0), l(1.000000)
mul r5.xz, r1.zzzz, r2.wwww
mul_sat r4.xzw, l(4.000000, 0.000000, 4.000000, 4.000000), cb7[r0.w + 9].xxyz
add_sat r6.xyz, l(-0.250000, -0.250000, -0.250000, 0.000000), cb7[r0.w + 9].xyzx
mad r6.xyz, r2.xyzx, r4.xzwx, r6.xyzx
add r0.z, r0.z, -r3.w
mad r0.z, r1.x, r0.z, r3.w
mad_sat r0.z, cb7[r0.w + 13].y, r0.z, cb7[r0.w + 13].x
mad_sat r6.w, cb7[r0.w + 13].w, r0.z, cb7[r0.w + 13].z
mov r3.xyz, r2.xyzx
add r3.xyzw, -r6.xyzw, r3.xyzw
mad r3.xyzw, r1.zzzz, r3.xyzw, r6.xyzw
mul r2.x, r1.y, r1.w
mad r0.z, -r2.w, r1.z, l(1.000000)
mul r0.xy, r0.xyxx, cb12[12].xyxx
ftoi r1.xy, r0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyw, r1.xyzw, t10.xywz
mad r0.xyw, r0.xyxw, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
dp3 r1.x, r0.xywx, r0.xywx
sqrt r1.x, r1.x
div r0.xyw, r0.xyxw, r1.xxxx
mul o0.xyz, r3.xyzx, r5.zzzz
mad r1.x, r3.w, l(0.125000), l(0.375000)
mad_sat r0.xyw, r0.xyxw, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.500000)
mul o1.xyz, r5.xzzx, r0.xywx
mul r2.y, r4.y, r5.z
mov r2.z, l(0)
mov r5.y, l(0.500000)
mul o2.xyz, r5.xyzx, r2.xyzx
mov o0.w, r0.z
mov o1.w, r0.z
mov o2.w, r0.z
ret
// Approximately 0 instruction slots used
