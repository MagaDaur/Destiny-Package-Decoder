//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xy
// TEXCOORD                 3   xyzw        3     NONE   float     zw
// TEXCOORD                 4   xyzw        4     NONE   float   xyz
// SV_InstanceID            0   x           5   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                31   xyz         0     NONE   float   xyz
// TEXCOORD                30   x           1     NONE    uint   x
// SV_POSITION              0   xyzw        2      POS   float   xyzw
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
// TEXCOORD                 3   xyzw        6     NONE   float   xyzw
// TEXCOORD                 4   xyzw        7     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.zw
dcl_input v4.xyz
dcl_input_sgv v5.x, instance_id
dcl_output o0.xyz
dcl_output o1.x
dcl_output_siv o2.xyzw, position
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 1
mul r0.xyz, v0.yyyy, cb1[1].xyzx
mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
mad o0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
mov o1.x, v5.x
mul r0.xyzw, v1.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v1.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v1.zzzz, r0.xyzw
add o2.xyzw, r0.xyzw, cb1[3].xyzw
mov o3.xyzw, v0.xyzw
mov o4.xyzw, v1.xyzw
mov o5.xy, v2.xyxx
mov o5.zw, l(0,0,0,0)
mov o6.xy, l(0,0,0,0)
mov o6.zw, v3.zzzw
mov o7.xyz, v4.xyzx
mov o7.w, l(0)
ret
// Approximately 0 instruction slots used
