//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:01 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy
// SV_VERTEXID              0   x           4   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb12[16], immediateIndexed
dcl_constantbuffer cb1[24], dynamicIndexed
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input_sgv v4.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output_siv o5.xyzw, position
dcl_temps 16
mad r0.xyz, v0.xyzx, cb1[5].wwww, cb1[5].xyzx
mul r0.w, l(3.141000), cb0[3].x
sincos r1.x, r2.x, r0.w
dp3 r0.w, cb0[2].xyzx, cb0[2].xyzx
rsq r0.w, r0.w
mul r1.yzw, r0.wwww, cb0[2].xxyz
mul r1.xyz, r1.yzwy, r1.xxxx
add r2.yzw, r0.xxyz, -cb0[4].xxyz
mul r3.xyz, -r1.yzxy, r2.wyzw
mad r3.xyz, r2.zwyz, -r1.zxyz, -r3.xyzx
dp3 r0.w, r2.yzwy, -r1.xyzx
mov r3.w, -r0.w
mul r4.xyz, r2.yzwy, r2.xxxx
mov r4.w, l(0)
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.yzw, r1.zzxy, r3.yyzx
mad r2.yzw, r1.yyzx, r3.zzxy, -r2.yyzw
mad r2.yzw, r2.xxxx, r3.xxyz, r2.yyzw
mad r2.yzw, r3.wwww, r1.xxyz, r2.yyzw
add r2.yzw, r2.yyzw, cb0[4].xxyz
mul r3.xyz, -r1.yzxy, v1.zxyz
mad r3.xyz, v1.yzxy, -r1.zxyz, -r3.xyzx
dp3 r0.w, v1.xyzx, -r1.xyzx
mov r3.w, -r0.w
mov r4.xyz, v1.xyzx
mov r4.w, l(0)
mad r3.xyzw, r2.xxxx, r4.xyzw, r3.xyzw
mul r4.xyz, r1.zxyz, r3.yzxy
mad r4.xyz, r1.yzxy, r3.zxyz, -r4.xyzx
mad r3.xyz, r2.xxxx, r3.xyzx, r4.xyzx
mad r3.xyz, r3.wwww, r1.xyzx, r3.xyzx
add r3.xyz, r3.xyzx, -v1.xyzx
mul r4.xyz, -r1.yzxy, v2.zxyz
mad r4.xyz, v2.yzxy, -r1.zxyz, -r4.xyzx
dp3 r0.w, v2.xyzx, -r1.xyzx
mov r4.w, -r0.w
mov r5.xyz, v2.xyzx
mov r5.w, l(0)
mad r4.xyzw, r2.xxxx, r5.xyzw, r4.xyzw
mul r5.xyz, r1.zxyz, r4.yzxy
mad r5.xyz, r1.yzxy, r4.zxyz, -r5.xyzx
mad r4.xyz, r2.xxxx, r4.xyzx, r5.xyzx
mad r1.xyz, r4.wwww, r1.xyzx, r4.xyzx
add r1.xyz, r1.xyzx, -v2.xyzx
add r2.xyz, -r0.xyzx, r2.yzwy
add r2.xyz, r2.xyzx, -cb0[0].xyzx
mad r2.xyz, cb0[5].xxxx, r2.xyzx, cb0[0].xyzx
mul r0.w, v0.w, l(32767.099609)
ftoi r0.w, r0.w
imax r1.w, -r0.w, r0.w
ige r2.w, r1.w, l(2048)
ilt r3.w, r0.w, l(0)
ishl r4.x, v4.x, l(1)
movc r4.x, r3.w, r4.x, v4.x
ishl r1.w, r1.w, l(3)
iadd r1.w, r1.w, l(0xffffc000)
bfi r1.w, l(3), l(0), r4.x, r1.w
ld_indexable(buffer)(uint,uint,uint,uint) r4.xyzw, r1.wwww, t1.xyzw
movc r0.w, r2.w, r4.x, r0.w
imul null, r4.x, r0.w, l(3)
imad r5.xy, l(3, 3, 0, 0), r0.wwww, l(1, 2, 0, 0)
if_nz r2.w
  utof r4.zw, r4.zzzw
  mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.00392156886, 0.00392156886)
  mov r6.x, cb1[r4.x + 8].w
  mov r6.y, cb1[r5.x + 8].w
  mov r6.z, cb1[r5.y + 8].w
  imul null, r0.w, r4.y, l(3)
  imad r5.zw, l(0, 0, 3, 3), r4.yyyy, l(0, 0, 1, 2)
  mul r7.xyz, r4.wwww, cb1[r0.w + 8].xyzx
  mul r8.x, r4.w, cb1[r0.w + 8].w
  mul r8.y, r4.w, cb1[r5.z + 8].w
  mul r8.z, r4.w, cb1[r5.w + 8].w
  mul r9.xyz, r4.wwww, cb1[r5.z + 8].xyzx
  mul r10.xyz, r4.wwww, cb1[r5.w + 8].xyzx
  mad r7.xyz, cb1[r4.x + 8].xyzx, r4.zzzz, r7.xyzx
  mad r6.xyz, r6.xyzx, r4.zzzz, r8.xyzx
  mad r8.xyz, cb1[r5.x + 8].xyzx, r4.zzzz, r9.xyzx
  mad r9.xyz, cb1[r5.y + 8].xyzx, r4.zzzz, r10.xyzx
  if_nz r3.w
    iadd r0.w, r1.w, l(1)
    ld_indexable(buffer)(uint,uint,uint,uint) r10.xyzw, r0.wwww, t1.xyzw
    utof r4.yz, r10.zzwz
    mul r4.yz, r4.yyzy, l(0.000000, 0.00392156886, 0.00392156886, 0.000000)
    imul null, r5.zw, r10.xxxy, l(0, 0, 3, 3)
    imad r10.xyzw, l(3, 3, 3, 3), r10.xxyy, l(1, 2, 1, 2)
    mul r11.x, r4.y, cb1[r5.z + 8].w
    mul r11.y, r4.y, cb1[r10.x + 8].w
    mul r11.z, r4.y, cb1[r10.y + 8].w
    mad r12.xyz, r4.yyyy, cb1[r5.z + 8].xyzx, r7.xyzx
    add r11.xyz, r6.xyzx, r11.xyzx
    mad r13.xyz, r4.yyyy, cb1[r10.x + 8].xyzx, r8.xyzx
    mad r14.xyz, r4.yyyy, cb1[r10.y + 8].xyzx, r9.xyzx
    mul r15.x, r4.z, cb1[r5.w + 8].w
    mul r15.y, r4.z, cb1[r10.z + 8].w
    mul r15.z, r4.z, cb1[r10.w + 8].w
    mad r7.xyz, r4.zzzz, cb1[r5.w + 8].xyzx, r12.xyzx
    add r6.xyz, r11.xyzx, r15.xyzx
    mad r8.xyz, r4.zzzz, cb1[r10.z + 8].xyzx, r13.xyzx
    mad r9.xyz, r4.zzzz, cb1[r10.w + 8].xyzx, r14.xyzx
  endif
else
  mov r7.xyz, cb1[r4.x + 8].xyzx
  mov r6.x, cb1[r4.x + 8].w
  mov r6.y, cb1[r5.x + 8].w
  mov r6.z, cb1[r5.y + 8].w
  mov r8.xyz, cb1[r5.x + 8].xyzx
  mov r9.xyz, cb1[r5.y + 8].xyzx
endif
add r0.xyz, r0.xyzx, r2.xyzx
add r2.xyz, r6.xyzx, cb12[15].xyzx
mov r7.w, r2.x
mov r0.w, l(1.000000)
dp4 r4.x, r7.xyzw, r0.xyzw
mov r8.w, r2.y
dp4 r4.y, r8.xyzw, r0.xyzw
mov r9.w, r2.z
dp4 r4.z, r9.xyzw, r0.xyzw
mul r2.xyzw, r4.yyyy, cb12[1].xyzw
mad r2.xyzw, cb12[0].xyzw, r4.xxxx, r2.xyzw
mad r2.xyzw, cb12[2].xyzw, r4.zzzz, r2.xyzw
add o5.xyzw, r2.xyzw, cb12[14].xyzw
add o4.xyz, r4.xyzx, cb12[7].xyzx
mad r0.xyw, cb0[5].xxxx, r3.xyxz, v1.xyxz
dp3 r1.w, r0.xywx, r0.xywx
rsq r1.w, r1.w
mul r0.xyw, r0.xyxw, r1.wwww
dp3 r2.x, r7.xyzx, r0.xywx
dp3 r2.y, r8.xyzx, r0.xywx
dp3 r2.z, r9.xyzx, r0.xywx
mad r0.xyw, cb0[5].xxxx, r1.xyxz, v2.xyxz
dp3 r1.x, r0.xywx, r0.xywx
rsq r1.x, r1.x
mul r0.xyw, r0.xyxw, r1.xxxx
dp3 r1.x, r7.xyzx, r0.xywx
dp3 r1.y, r8.xyzx, r0.xywx
dp3 r1.z, r9.xyzx, r0.xywx
mul r0.xyw, r1.yzyx, r2.zxzy
mad r0.xyw, r2.yzyx, r1.zxzy, -r0.xyxw
mul o2.xyz, r0.xywx, v2.wwww
mad r0.xy, v3.xyxx, cb1[6].xyxx, cb1[6].zwzz
mul_sat r0.w, r2.z, cb1[7].z
add_sat o0.w, r0.w, cb1[7].w
mul r0.w, v1.w, l(32767.099609)
ftoi r0.w, r0.w
ishr r1.w, r0.w, l(3)
and r1.w, r1.w, l(4095)
and r0.w, r0.w, l(7)
itof r0.w, r0.w
add o2.w, r0.w, l(0.100000)
ld_indexable(buffer)(uint,uint,uint,uint) r3.xyzw, r1.wwww, t1.xyzw
ishl r3.yw, r3.yyyw, l(0, 8, 0, 8)
or r3.xy, r3.ywyy, r3.xzxx
f16tof32 r3.xy, r3.xyxx
mul o3.zw, r0.xxxy, r3.xxxy
mov o0.xyz, r2.xyzx
mov o1.w, r0.z
mov o1.xyz, r1.xyzx
mov o3.xy, r0.xyxx
ret
// Approximately 0 instruction slots used
