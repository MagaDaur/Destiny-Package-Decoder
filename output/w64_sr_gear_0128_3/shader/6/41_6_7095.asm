//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[99], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 12
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[88].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[98].x
  ftou r0.y, cb0[89].x
  imad r0.y, l(5), vThreadID.x, r0.y
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
  iadd r2.xyzw, r0.yyyy, l(1, 2, 3, 4)
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r0.yzw, r2.yyyy, t0.zxyw
  ld_indexable(buffer)(float,float,float,float) r4.xyzw, r2.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.xy, r2.wwww, t0.xyzw
  mov_sat r5.x, r1.w
  mul r6.w, r5.x, l(0.200000)
  mad r5.yzw, r5.xxxx, l(0.000000, 1.195219, 1.714263, -0.239583), l(0.000000, -0.195219, -2.474679, 1.000000)
  ge r7.xy, r5.xxxx, l(0.163333, 1.000000, 0.000000, 0.000000)
  and r7.yw, r7.xxxy, l(0, 0x3f800000, 0, 0x3f800000)
  add r7.xy, r7.wwww, r7.ywyy
  add r7.xy, r7.xyxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  mul r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  frc r7.yz, r7.xxyx
  mul r7.x, r5.y, r7.y
  mul r7.xy, r7.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000)
  add r5.y, r7.y, r7.x
  mad_sat r7.x, r7.w, l(1.000000), r5.y
  mul r5.y, r5.x, r5.x
  mad r5.z, r5.z, r5.y, r5.w
  max r5.z, r5.z, l(0.000000)
  mad r8.x, r5.z, l(0.636000037), l(0.108000)
  mov_sat r9.xz, r4.yyxy
  mad r10.xyz, r9.xxxx, l(0.223973, -1.275862, -3.275862, 0.000000), l(0.502055, 3.551724, 1.000000, 0.000000)
  mul r5.z, r9.x, r9.x
  mul r5.w, r5.z, r10.x
  mad r5.w, r9.x, l(0.273973), r5.w
  min r5.w, r5.w, l(1.000000)
  mad r8.y, r5.w, l(0.600000), l(0.400000)
  mad r11.xyz, r5.xxxx, l(0.551724, -295.639099, 0.194573, 0.000000), l(-2.103448, 84.300331, 1.146894, 0.000000)
  mul r5.w, r5.y, r11.x
  mad_sat r5.w, r5.x, l(2.551724), r5.w
  mad r8.z, r5.w, l(0.350000), l(0.150000)
  mad_sat r5.z, r10.y, r5.z, r10.z
  mad r5.z, r5.z, l(0.0499999970), l(0.030000)
  mad r10.xyzw, r5.xxxx, l(0.000000, -2.877506, 5.000000, -5.000000), l(0.000000, 1.536039, 0.000000, 5.000000)
  mad r10.xy, r11.yzyy, r5.yyyy, r10.xyxx
  ge r11.xyz, r5.xxxx, l(0.000000, 0.203333, 1.000000, 0.000000)
  and r11.xyz, r11.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r11.xy, r11.yzyy, r11.xyxx
  add r11.xy, r11.xyxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  mul r11.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  frc r11.xy, r11.xyxx
  mul r10.xy, r10.xyxx, r11.xyxx
  add r10.xy, r10.xyxx, r10.xyxx
  add_sat r5.w, r10.y, r10.x
  mul r8.w, r5.w, r5.z
  ge r11.xyzw, r5.xxxx, l(0.000000, 0.200000, 0.800000, 1.000000)
  and r11.xyzw, r11.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r11.xyz, r11.yzwy, r11.xyzx
  add r11.xyz, r11.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r11.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r11.xyz, r11.xyzx
  mul r11.xz, r10.zzwz, r11.xxzx
  add r5.zw, r11.xxxy, r11.xxxy
  add r5.z, r5.w, r5.z
  mad r5.z, r11.z, l(2.000000), r5.z
  min r10.x, r5.z, l(1.000000)
  mad r11.xyzw, r5.xxxx, l(-2784.396973, 2.654030, -0.331395, 0.716588), l(377.734680, -4.339339, 0.000000, 0.968721)
  mad r5.zw, r11.xxxy, r5.yyyy, r11.zzzw
  ge r11.xyz, r5.xxxx, l(0.000000, 0.090000, 1.000000, 0.000000)
  and r11.xyz, r11.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r11.xy, r11.yzyy, r11.xyxx
  add r11.xy, r11.xyxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  mul r11.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  frc r11.xy, r11.xyxx
  mul r5.zw, r5.zzzw, r11.xxxy
  add r5.zw, r5.zzzw, r5.zzzw
  add_sat r5.z, r5.w, r5.z
  mul r10.y, r5.z, l(5000.000000)
  mul r5.z, r5.x, l(3.045455)
  mad r5.x, r5.x, l(1.045455), l(-3.090909)
  mad_sat r5.x, r5.x, r5.y, r5.z
  mad r5.xyz, r5.xxxx, l(-0.100266, -0.167063981, 0.158885, 0.000000), l(0.199530, 0.259064, 0.841115, 0.000000)
  imad r0.x, l(11), vThreadID.x, r0.x
  mov r7.y, l(0)
  store_uav_typed u0.xyzw, r0.xxxx, r7.xxyy
  iadd r11.xyzw, r0.xxxx, l(1, 2, 3, 4)
  mov r9.xy, l(1.000000,0.500000,0,0)
  mov r9.w, cb0[3].z
  store_uav_typed u0.xyzw, r11.xxxx, r9.xyzw
  store_uav_typed u0.xyzw, r11.yyyy, r1.xyzw
  store_uav_typed u0.xyzw, r11.zzzz, r3.xyzw
  mov r5.w, r0.y
  store_uav_typed u0.xyzw, r11.wwww, r5.xyzw
  iadd r1.xyzw, r0.xxxx, l(5, 6, 7, 8)
  mov r7.zw, r9.zzzw
  store_uav_typed u0.xyzw, r1.xxxx, r7.xxzw
  mov r6.x, r0.z
  mov r6.yz, r7.xxzx
  store_uav_typed u0.xyzw, r1.yyyy, r6.xyzw
  store_uav_typed u0.xyzw, r1.zzzz, r8.xyzw
  mov r10.z, r0.w
  mov r10.w, r6.z
  store_uav_typed u0.xyzw, r1.wwww, r10.xyzw
  iadd r0.yz, r0.xxxx, l(0, 9, 10, 0)
  store_uav_typed u0.xyzw, r0.yyyy, r4.xyzw
  mov r2.zw, l(0,0,0,0)
  store_uav_typed u0.xyzw, r0.zzzz, r2.xyzw
endif
ret
// Approximately 0 instruction slots used
