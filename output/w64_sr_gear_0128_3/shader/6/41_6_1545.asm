//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:11 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[99], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 11
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[88].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[98].x
  ftou r0.y, cb0[89].x
  imad r0.y, l(5), vThreadID.x, r0.y
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
  iadd r2.xyzw, r0.yyyy, l(1, 2, 3, 4)
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.xzw, r2.yyyy, t0.xwyz
  ld_indexable(buffer)(float,float,float,float) r5.xyzw, r2.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.zw, r2.wwww, t0.zwxy
  mov_sat r6.xyz, r5.zwyz
  mad r7.xyzw, r6.xxxy, l(0.675824, 1.500000, 0.625000, -0.236842), l(0.000000, -0.500000, 0.125000, 1.473685)
  ge r0.yzw, r6.xxxx, l(0.000000, 0.000000, 0.606667, 1.000000)
  and r8.xyw, r0.yzyw, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
  add r0.yzw, r8.yyww, r8.xxyw
  add r0.yzw, r0.yyzw, l(0.000000, 0.000001, 0.000001, 0.000001)
  mul r0.yzw, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  frc r0.yzw, r0.yyzw
  mul r0.yz, r7.xxyx, r0.yyzy
  mul r0.yz, r0.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000)
  add r0.y, r0.z, r0.y
  mad r0.y, r0.w, l(2.000000), r0.y
  mad_sat r0.y, r8.w, l(1.000000), r0.y
  mad r0.y, r0.y, l(0.720000), l(0.080000)
  mov_sat r0.z, r3.w
  mad r8.xyzw, r0.zzzz, l(-1.516129, 0.171669, -1.705882, 0.133929), l(0.516129, 0.534213, 1.000000, -1.133928)
  mul r0.w, r0.z, r0.z
  mul r7.x, r0.w, r8.w
  mad r7.y, r8.x, r0.w, l(1.000000)
  min r7.y, r7.y, l(1.000000)
  mad r7.y, r7.y, l(0.750000), l(0.250000)
  mul r9.y, r0.y, r7.y
  mad_sat r0.y, r1.w, l(0.500000), l(-0.500000)
  mad r0.y, r0.y, l(0.850000), l(0.150000)
  mul r9.z, r0.y, r7.z
  mad r0.y, r6.y, l(-2.236842), l(1.000000)
  mul r6.y, r6.y, r6.y
  mad_sat r0.y, r7.w, r6.y, r0.y
  mad r0.y, r0.y, l(0.0157499984), l(0.004250)
  mad_sat r6.y, cb0[4].y, l(0.142857), l(-0.428571)
  mad r6.y, r6.y, l(0.600000), l(0.400000)
  mul r0.y, r0.y, r6.y
  mad_sat r6.y, r8.y, r0.w, r8.z
  mad r6.y, r6.y, l(0.999000), l(0.001000)
  mul r9.w, r0.y, r6.y
  mad r8.xyzw, r0.zzzz, l(0.000000, 46.647221, 27.272728, 90.962074), l(0.000000, -115.451866, 0.000000, -22.157429)
  mad r7.yz, r8.xxyx, r0.wwww, r8.zzwz
  ge r8.xyzw, r0.zzzz, l(0.000000, 0.036667, 0.650000, 1.000000)
  and r8.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r8.xyz, r8.yzwy, r8.xyzx
  add r8.xyz, r8.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r8.xyz, r8.xyzx
  mul r8.xz, r7.yyzy, r8.xxzx
  add r7.yz, r8.xxyx, r8.xxyx
  add r0.y, r7.z, r7.y
  mad_sat r0.y, r8.z, l(2.000000), r0.y
  mov_sat r6.y, cb0[3].x
  add r6.y, -r6.y, l(1.000000)
  mul r8.x, r0.y, r6.y
  mov_sat r0.y, r2.z
  mad r6.y, r0.y, l(0.714285), l(0.285715)
  mul r0.y, r0.y, r0.y
  mul r0.y, r0.y, r6.y
  mad r0.y, r0.y, l(25.000000), l(5.000000)
  mad r10.xyzw, r0.zzzz, l(-0.067834, 0.685472, 0.000000, -2.901451), l(-1.777962, 0.402782, 1.000000, 1.813199)
  mad r7.yz, r10.xxyx, r0.wwww, r10.zzwz
  ge r10.xyz, r0.zzzz, l(0.000000, 0.523333, 1.000000, 0.000000)
  and r10.xyz, r10.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r10.xy, r10.yzyy, r10.xyxx
  add r10.xy, r10.xyxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  mul r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  frc r10.xy, r10.xyxx
  mul r7.yz, r7.yyzy, r10.xxyx
  add r7.yz, r7.yyzy, r7.yyzy
  add_sat r0.w, r7.z, r7.y
  mul r8.y, r0.w, r0.y
  mad_sat r0.y, r0.z, l(2.000000), r7.x
  mad r7.xyz, r0.yyyy, l(0.000000, -0.088641, -0.0109749995, 0.000000), l(1.000000, 0.126542, 0.049707, 0.000000)
  ishl r0.y, vThreadID.x, l(3)
  iadd r0.x, r0.y, r0.x
  mov r6.x, l(0.350000)
  mov r6.w, cb0[5].x
  store_uav_typed u0.xyzw, r0.xxxx, r6.xxzw
  iadd r10.xyzw, r0.xxxx, l(1, 2, 3, 4)
  store_uav_typed u0.xyzw, r10.xxxx, r1.xyzw
  store_uav_typed u0.xyzw, r10.yyyy, r3.xyzw
  mov r7.w, r4.x
  store_uav_typed u0.xyzw, r10.zzzz, r7.xyzw
  mov r4.xy, r6.zwzz
  store_uav_typed u0.xyzw, r10.wwww, r4.xyzw
  iadd r0.yzw, r0.xxxx, l(0, 5, 6, 7)
  mov r9.x, r4.x
  store_uav_typed u0.xyzw, r0.yyyy, r9.xyzw
  mov r8.zw, r5.xxxy
  store_uav_typed u0.xyzw, r0.zzzz, r8.xyzw
  mov r2.xy, r5.zwzz
  store_uav_typed u0.xyzw, r0.wwww, r2.xyzw
endif
ret
// Approximately 0 instruction slots used
