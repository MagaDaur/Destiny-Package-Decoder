//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:11 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// NORMAL                   0   xyzw        1     NONE   float   xyz
// TANGENT                  0   xyzw        2     NONE   float   xyz
// TEXCOORD                 0   xy          3     NONE   float   xy
// SV_VERTEXID              0   x           4   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 8   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[4], immediateIndexed
dcl_constantbuffer cb1[8], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input_sgv v4.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_temps 3
mul r0.xyz, v1.yyyy, cb1[1].xyzx
mad r0.xyz, cb1[0].xyzx, v1.xxxx, r0.xyzx
mad r0.xyz, cb1[2].xyzx, v1.zzzz, r0.xyzx
mul_sat r0.w, r0.z, cb1[7].z
add_sat o0.w, r0.w, cb1[7].w
mov o0.xyz, r0.xyzx
mov o1.w, v0.z
mul r1.xyz, v2.yyyy, cb1[1].xyzx
mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
mov o1.xyz, r1.xyzx
mul r2.xyz, r0.zxyz, r1.yzxy
mad r0.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
mov o2.xyz, -r0.xyzx
mad o3.xyzw, v3.xyxy, cb1[6].xyxy, cb1[6].zwzw
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb1[3].xyzw
mov o4.xyz, r0.xyzx
umin r1.x, v4.x, cb1[4].w
ld_indexable(buffer)(float,float,float,float) o5.xyzw, r1.xxxx, t0.xyzw
mul r1.xyzw, r0.yyyy, cb12[1].xyzw
mad r1.xyzw, cb12[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb12[2].xyzw, r0.zzzz, r1.xyzw
mad o6.xyzw, cb12[3].xyzw, r0.wwww, r1.xyzw
ret
// Approximately 0 instruction slots used
