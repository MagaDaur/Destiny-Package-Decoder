//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:08 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xy
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float
// SV_isFrontFace           0   x           6    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], immediateIndexed
dcl_constantbuffer cb13[4], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb7[63], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps_sgv v6.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 14
add r0.xyz, -v4.xyzx, cb12[7].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
mad r0.yz, v3.xxyx, cb0[24].xxyx, cb0[24].zzwz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v3.xyxx, t3.xyzw, s5
add r0.w, -r1.z, r1.y
lt r0.w, r0.w, l(0.00470588217)
movc r0.w, r0.w, r1.y, r1.z
deriv_rtx_coarse r2.xy, r1.xyxx
deriv_rtx_coarse r2.z, r0.w
deriv_rty_coarse r3.xy, r1.xyxx
deriv_rty_coarse r3.z, r0.w
mul r1.zw, r2.yyyz, r2.xxxx
mul r2.xy, r3.yzyy, r3.xxxx
lt r2.zw, |r2.xxxy|, |r1.zzzw|
movc r1.zw, r2.zzzw, r1.zzzw, r2.xxxy
add r2.x, r1.x, l(-0.500000)
add r2.y, r1.y, r1.x
add r2.y, r2.y, l(-1.000000)
lt r2.xy, |r2.xyxx|, l(0.00470588217, 0.00588235306, 0.000000, 0.000000)
lt r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.z, r1.z, r2.y
add r2.y, -r1.y, l(1.000000)
movc r1.z, r1.z, r2.y, r1.x
add r2.y, r0.w, r1.z
add r2.y, r2.y, l(-1.000000)
lt r2.y, |r2.y|, l(0.00588235306)
and r1.w, r1.w, r2.y
add r2.y, -r0.w, l(1.000000)
movc r1.z, r1.w, r2.y, r1.z
movc r1.x, r2.x, r1.z, r1.x
ge r0.w, r0.w, l(0.500000)
if_nz r0.w
  mad r1.zw, r0.yyyz, cb7[6].xxxy, cb7[6].zzzw
  mad r2.xy, r0.yzyy, cb7[7].xyxx, cb7[7].zwzz
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.zwzz, t8.wxyz, s1
  sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t9.xyzw, s1
  mad r1.zw, r2.xxxy, cb7[8].xxxx, cb7[8].yyyy
  add_sat r0.w, r2.z, cb7[8].z
  mov r2.x, l(4)
else
  ge r1.y, r1.y, l(0.500000)
  if_nz r1.y
    mad r2.yz, r0.yyzy, cb7[3].xxyx, cb7[3].zzwz
    mad r4.xy, r0.yzyy, cb7[4].xyxx, cb7[4].zwzz
    sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.yzyy, t6.wxyz, s1
    sample_indexable(texture2d)(float,float,float,float) r2.yzw, r4.xyxx, t7.wxyz, s1
    mad r1.zw, r2.yyyz, cb7[5].xxxx, cb7[5].yyyy
    add_sat r0.w, r2.w, cb7[5].z
    mov r2.x, l(2)
  else
    mad r2.yz, r0.yyzy, cb7[0].xxyx, cb7[0].zzwz
    mad r0.yz, r0.yyzy, cb7[1].xxyx, cb7[1].zzwz
    sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.yzyy, t4.wxyz, s1
    sample_indexable(texture2d)(float,float,float,float) r2.yzw, r0.yzyy, t5.wxyz, s1
    mad r1.zw, r2.yyyz, cb7[2].xxxx, cb7[2].yyyy
    add_sat r0.w, r2.w, cb7[2].z
    mov r2.x, l(0)
  endif
endif
ge r0.y, r1.x, l(0.500000)
iadd r0.z, r2.x, l(1)
movc r0.y, r0.y, r0.z, r2.x
imul null, r0.z, r0.y, l(9)
mov_sat r2.xyzw, cb7[r0.z + 11].xyzw
mov_sat r1.xy, cb7[r0.z + 12].yzyy
mov_sat r4.xyzw, cb7[r0.z + 17].xyzw
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r6.xy, v3.xyxx, t1.xyzw, s3
mad r6.xy, r6.xyxx, cb0[25].xxxx, cb0[25].yyyy
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v3.xyxx, t2.xyzw, s4
ge r6.z, r7.w, l(0.156862751)
and r6.w, r6.z, l(0x3f800000)
add r8.xy, r7.wzww, l(-0.188235298, -0.156862751, 0.000000, 0.000000)
mul_sat r8.xy, r8.xyxx, l(1.231884, 1.18604648, 0.000000, 0.000000)
mul_sat r7.zw, r7.zzzw, l(0.000000, 0.000000, 7.968750, 7.968750)
movc r8.z, v6.x, l(1.000000), l(-1.000000)
mad_sat r8.x, cb7[r0.z + 15].y, r8.x, cb7[r0.z + 15].x
mad_sat r8.x, cb7[r0.z + 15].w, r8.x, cb7[r0.z + 15].z
mad_sat r8.w, r7.y, cb0[2].x, cb0[2].y
mul_sat r8.w, r8.w, cb0[3].x
add r9.x, -r8.w, l(1.000000)
mad r9.y, r7.w, cb0[4].x, cb0[4].y
mul r9.y, r9.y, r9.x
mad_sat r9.z, cb0[5].y, r7.y, cb0[5].x
movc r7.w, r6.z, l(0), r7.w
add r9.z, -r7.y, r9.z
mad r5.w, r7.w, r9.z, r7.y
add r7.y, l(128.500000), cb0[6].x
mul r7.y, r7.y, l(0.00390625000)
ge r7.w, l(0.050000), r9.y
movc r7.y, r7.w, r7.y, l(-1.000000)
ieq r0.y, r0.y, l(2)
and r0.y, r0.y, l(0x3f800000)
mad_sat r7.w, r8.w, cb0[23].x, cb0[23].y
add r0.y, r0.y, r7.w
min r0.y, r0.y, l(1.000000)
add r10.xyzw, -cb0[21].xyzw, cb0[22].xyzw
mad_sat r10.xyzw, r0.yyyy, r10.xyzw, cb0[21].xyzw
mul_sat r11.xyzw, r5.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000)
add_sat r12.xyzw, r5.xyzw, l(-0.250000, -0.250000, -0.250000, -0.250000)
mad r10.xyzw, r10.xyzw, r11.xyzw, r12.xyzw
mul_sat r5.xyz, r3.yzwy, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r3.yzw, r3.yyzw, l(0.000000, -0.250000, -0.250000, -0.250000)
mad_sat r13.xyz, cb7[r0.z + 9].xyzx, r5.xyzx, r3.yzwy
add r13.xyz, r13.xyzx, -cb7[r0.z + 9].xyzx
mad r13.xyz, r2.xxxx, r13.xyzx, cb7[r0.z + 9].xyzx
mad_sat r0.y, cb7[r0.z + 13].y, r5.w, cb7[r0.z + 13].x
mad_sat r0.y, cb7[r0.z + 13].w, r0.y, cb7[r0.z + 13].z
mad_sat r2.x, r3.x, r11.w, r12.w
mad_sat r3.x, cb7[r0.z + 13].y, r2.x, cb7[r0.z + 13].x
mad_sat r3.x, cb7[r0.z + 13].w, r3.x, cb7[r0.z + 13].z
add r3.x, -r0.y, r3.x
mad r0.y, r2.z, r3.x, r0.y
mad_sat r13.xyz, r13.xyzx, r11.xyzx, r12.xyzx
mad r9.zw, r1.zzzw, r2.yyyy, r6.xxxy
add r0.w, r0.w, l(-1.000000)
mad r2.y, r2.y, r0.w, l(1.000000)
mad_sat r3.xyz, cb7[r0.z + 14].xyzx, r5.xyzx, r3.yzwy
add r3.xyz, r3.xyzx, -cb7[r0.z + 14].xyzx
mad r3.xyz, r4.xxxx, r3.xyzx, cb7[r0.z + 14].xyzx
mad_sat r3.xyz, r3.xyzx, r11.xyzx, r12.xyzx
mad_sat r2.z, cb7[r0.z + 16].y, r5.w, cb7[r0.z + 16].x
mad_sat r2.z, cb7[r0.z + 16].w, r2.z, cb7[r0.z + 16].z
mad_sat r2.x, cb7[r0.z + 16].y, r2.x, cb7[r0.z + 16].x
mad_sat r2.x, cb7[r0.z + 16].w, r2.x, cb7[r0.z + 16].z
add r2.x, -r2.z, r2.x
mad r2.x, r4.z, r2.x, r2.z
mad r1.zw, r1.zzzw, r4.yyyy, r6.xxxy
mad r0.w, r4.y, r0.w, l(1.000000)
add r4.xyz, -r3.xyzx, r13.xyzx
mad r3.xyz, r8.xxxx, r4.xyzx, r3.xyzx
add r4.xy, -r1.zwzz, r9.zwzz
mad r1.zw, r8.xxxx, r4.xxxy, r1.zzzw
add r0.y, r0.y, -r2.x
mad r0.y, r8.x, r0.y, r2.x
add r2.x, r2.w, -r4.w
mad r4.y, r8.x, r2.x, r4.w
add r2.x, -r0.w, r2.y
mad r0.w, r8.x, r2.x, r0.w
add r2.x, l(128.500000), cb7[r0.z + 12].x
mul r2.x, r2.x, l(0.00390625000)
ge r2.y, l(0.050000), r2.w
movc r2.x, r2.y, r2.x, l(-1.000000)
min r0.y, r0.w, r0.y
lt r0.w, l(0.000100), r1.x
mul r2.y, r1.x, l(-2.000000)
mad r1.x, r1.x, l(-2.000000), l(-0.200000)
mul r1.x, r0.y, r1.x
mad r1.x, r1.x, l(-5.002501), r2.y
min r1.x, r0.y, r1.x
movc r4.x, r0.w, r1.x, r0.y
add r2.yzw, -r10.xxyz, r3.xxyz
mad r2.yzw, r6.wwww, r2.yyzw, r10.xxyz
add r0.yw, -r6.xxxy, r1.zzzw
mad r3.xy, r6.wwww, r0.ywyy, r6.xyxx
mov r9.x, r10.w
add r0.yw, -r9.xxxy, r4.xxxy
mad r0.yw, r6.wwww, r0.yyyw, r9.xxxy
mul r1.x, r1.y, r6.w
movc o0.w, r6.z, r2.x, r7.y
ne r1.y, l(0.000000, 0.000000, 0.000000, 0.000000), cb7[r0.z + 10].w
and r1.yzw, r1.yyyy, cb7[r0.z + 10].xxyz
mul r0.z, r8.y, cb0[20].x
mul r1.yzw, r1.yyzw, r0.zzzz
mul r1.yzw, r6.wwww, r1.yyzw
mul r4.xyz, r8.xxxx, r1.yzwy
mad r1.yzw, r1.yyzw, r8.xxxx, r2.yyzw
max r0.z, r1.z, r1.y
max r0.z, r1.w, r0.z
add_sat r0.z, r0.z, l(-1.000000)
add r0.z, -r0.z, l(1.000000)
mad r1.yzw, r2.yyzw, r0.zzzz, r4.xxyz
max r0.z, r1.z, r1.y
max r0.z, r1.w, r0.z
max r0.z, r0.z, l(1.000000)
div r1.yzw, r1.yyzw, r0.zzzz
max r0.z, r4.y, r4.x
max r0.z, r4.z, r0.z
dp2 r2.x, r3.xyxx, r3.xyxx
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r3.z, r2.x
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r3.xyzx
mul r3.xyz, r8.zzzz, v0.xyzx
mul r4.xyz, r2.yyyy, v2.xyzx
mad r2.xyw, v1.xyxz, r2.xxxx, r4.xyxz
mad r2.xyz, r3.xyzx, r2.zzzz, r2.xywx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
ne r2.w, l(0.000000), cb0[8].x
if_nz r2.w
  deriv_rtx_coarse r4.xy, v3.xyxx
  dp2 r2.w, r4.xyxx, r4.xyxx
  sqrt r2.w, r2.w
  deriv_rty_coarse r4.xy, v3.xyxx
  dp2 r3.w, r4.xyxx, r4.xyxx
  sqrt r3.w, r3.w
  max r2.w, r2.w, r3.w
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  log r2.w, r2.w
  round_ni r3.w, r2.w
  exp r3.w, r3.w
  round_pi r4.x, r2.w
  exp r4.x, r4.x
  mul r4.yz, r3.wwww, v3.xxyx
  round_ni r4.yz, r4.yyzy
  dp2 r3.w, r4.yzyy, l(17.000000, 0.100000, 0.000000, 0.000000)
  sincos r3.w, null, r3.w
  mul r3.w, r3.w, l(10000.000000)
  mad r4.y, r4.z, l(13.000000), r4.y
  sincos r4.y, null, r4.y
  add r4.y, |r4.y|, l(0.100000)
  mul r3.w, r3.w, r4.y
  frc r3.w, r3.w
  mul r4.xy, r4.xxxx, v3.xyxx
  round_ni r4.xy, r4.xyxx
  dp2 r4.z, r4.xyxx, l(17.000000, 0.100000, 0.000000, 0.000000)
  sincos r4.z, null, r4.z
  mul r4.z, r4.z, l(10000.000000)
  mad r4.x, r4.y, l(13.000000), r4.x
  sincos r4.x, null, r4.x
  add r4.x, |r4.x|, l(0.100000)
  mul r4.x, r4.x, r4.z
  frc r4.x, r4.x
  frc r2.w, r2.w
  add r4.x, -r3.w, r4.x
  mad r3.w, r2.w, r4.x, r3.w
  add r4.x, -r2.w, l(1.000000)
  min r2.w, r2.w, r4.x
  mul r4.x, r3.w, r3.w
  add r4.y, r2.w, r2.w
  add r4.z, -r2.w, l(1.000000)
  mul r4.y, r4.z, r4.y
  mad r4.w, -r2.w, l(0.500000), r3.w
  div r4.xw, r4.xxxw, r4.yyyz
  add r5.x, -r3.w, l(1.000000)
  mul r5.x, r5.x, r5.x
  div r4.y, r5.x, r4.y
  add r4.y, -r4.y, l(1.000000)
  lt r4.z, r3.w, r4.z
  lt r2.w, r3.w, r2.w
  movc r2.w, r2.w, r4.x, r4.w
  movc r2.w, r4.z, r2.w, r4.y
  ge r3.w, l(0.500000), cb13[3].x
  add r4.x, cb13[3].x, cb13[3].x
  mad r4.x, r2.w, -r4.x, r4.x
  mad r4.y, cb13[3].x, l(2.000000), l(-2.000000)
  mad r2.w, r2.w, r4.y, l(1.000000)
  movc r2.w, r3.w, r4.x, r2.w
else
  mov r2.w, cb13[3].x
endif
add r2.w, -r2.w, r7.z
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
mov_sat r2.w, cb0[18].x
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
dp3 r3.x, cb0[11].xyzx, r3.xyzx
add r3.y, -cb0[9].x, cb0[10].x
mad_sat r3.x, r3.x, r3.y, cb0[9].x
add r3.y, v4.z, -cb0[12].z
mul r3.y, r3.y, cb0[13].x
max r3.y, r3.y, l(0.000000)
log r3.y, r3.y
mul r3.y, r3.y, cb0[14].x
exp r3.y, r3.y
mul_sat r3.y, r3.y, cb0[15].x
mul r3.x, r3.y, r3.x
mad_sat r0.x, r0.x, cb0[16].x, cb0[16].y
mul r0.x, r0.x, r3.x
dp3 r3.x, r1.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
max r3.x, r3.x, l(0.000100)
log r3.x, r3.x
mul r3.x, r3.x, -cb0[17].x
exp r3.x, r3.x
mul r0.x, r0.x, r3.x
add o2.w, r2.w, v0.w
mad r0.x, r0.x, cb0[19].x, r0.z
mad r0.y, r0.y, l(0.125000), l(0.375000)
mad_sat o1.xyz, r2.xyzx, r0.yyyy, l(0.500000, 0.500000, 0.500000, 0.000000)
add r0.x, r0.x, l(0.00781250000)
log r0.x, r0.x
mad_sat r0.x, r0.x, l(0.0769230798), l(0.538461566)
mov_sat r7.x, r7.x
add r0.x, r0.x, r7.x
mul o2.y, r0.x, l(0.500000)
mul o2.z, r1.x, l(0.800000)
mov o0.xyz, r1.yzwy
mov o1.w, l(0)
mov o2.x, r0.w
ret
// Approximately 0 instruction slots used
