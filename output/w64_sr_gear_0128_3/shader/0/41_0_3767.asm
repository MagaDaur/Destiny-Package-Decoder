//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:03 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// TEXCOORD                 1   xyzw        1     NONE   float
// TEXCOORD                 2   xyzw        2     NONE   float      w
// TEXCOORD                 3   xyzw        3     NONE   float   xy
// TEXCOORD                 4   xyz         4     NONE   float
// SV_POSITION              0   xyzw        5      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb7[63], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xy
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 8
mul r0.xy, v5.xyxx, cb12[12].zwzz
mad r0.zw, v3.xxxy, cb0[4].xxxy, cb0[4].zzzw
ftou r1.x, v2.w
uge r1.y, r1.x, l(4)
if_nz r1.y
  mad r1.yz, r0.zzwz, cb7[6].xxyx, cb7[6].zzwz
  sample_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t8.xwyz, s1
else
  uge r1.z, r1.x, l(2)
  if_nz r1.z
    mad r1.zw, r0.zzzw, cb7[3].xxxy, cb7[3].zzzw
    sample_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t6.xwyz, s1
  else
    mad r1.zw, r0.zzzw, cb7[0].xxxy, cb7[0].zzzw
    sample_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t4.xwyz, s1
  endif
endif
imad r1.xzw, l(9, 0, 9, 9), r1.xxxx, l(9, 0, 11, 13)
mov_sat r2.xy, cb7[r1.z + 0].zwzz
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.zwzz, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.zwzz, t2.xzwy, s3
ge r0.z, r4.z, l(0.156862751)
and r0.w, r0.z, l(0x3f800000)
mul_sat r5.xy, r4.yxyy, l(7.968750, 7.968750, 0.000000, 0.000000)
movc r0.z, r0.z, l(0), l(1.000000)
mul_sat r6.xyz, l(4.000000, 4.000000, 4.000000, 0.000000), cb7[r1.x + 0].xyzx
add_sat r7.xyz, l(-0.250000, -0.250000, -0.250000, 0.000000), cb7[r1.x + 0].xyzx
mad r6.xyz, r3.xyzx, r6.xyzx, r7.xyzx
add r1.x, r1.y, -r4.w
mad r1.x, r2.x, r1.x, r4.w
mad_sat r1.x, cb7[r1.w + 0].y, r1.x, cb7[r1.w + 0].x
mad_sat r6.w, cb7[r1.w + 0].w, r1.x, cb7[r1.w + 0].z
mov r4.xyz, r3.xyzx
add r1.xyzw, -r6.xyzw, r4.xyzw
mad r1.xyzw, r0.zzzz, r1.xyzw, r6.xyzw
mul r2.x, r2.y, r0.w
add r0.z, -r5.x, l(1.000000)
mul r0.xy, r0.xyxx, cb12[12].xyxx
ftoi r3.xy, r0.xyxx
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyw, r3.xyzw, t10.xywz
mad r0.xyw, r0.xyxw, l(2.000000, 2.000000, 0.000000, 2.000000), l(-1.000000, -1.000000, 0.000000, -1.000000)
dp3 r2.w, r0.xywx, r0.xywx
sqrt r2.w, r2.w
div r0.xyw, r0.xyxw, r2.wwww
mul o0.xyz, r1.xyzx, r5.xxxx
mad r1.x, r1.w, l(0.125000), l(0.375000)
mad_sat r0.xyw, r0.xyxw, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.500000)
mul o1.xyz, r5.xxxx, r0.xywx
mul r2.y, r5.y, r5.x
mov r2.z, l(0)
mov r5.z, l(0.500000)
mul o2.xyz, r5.xzxx, r2.xyzx
mov o0.w, r0.z
mov o1.w, r0.z
mov o2.w, r0.z
ret
// Approximately 0 instruction slots used
