//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:11 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// NORMAL                   0   xyz         1     NONE   float   xyz
// TANGENT                  0   xyzw        2     NONE   float   xyz
// TEXCOORD                 0   xy          3     NONE   float   xy
// BLENDWEIGHT              0   xyzw        4     NONE   float   xyzw
// BLENDINDICES             0   xyzw        5     NONE    uint   xyzw
// SV_VERTEXID              0   x           6   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 8   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[16], immediateIndexed
dcl_constantbuffer cb1[24], dynamicIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input_sgv v6.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_temps 10
imul null, r0.xyzw, v5.xyzw, l(3, 3, 3, 3)
mul r1.xyz, v4.yyyy, cb1[r0.y + 8].xyzx
mad r1.xyz, v4.xxxx, cb1[r0.x + 8].xyzx, r1.xyzx
mad r1.xyz, v4.zzzz, cb1[r0.z + 8].xyzx, r1.xyzx
mad r1.xyz, v4.wwww, cb1[r0.w + 8].xyzx, r1.xyzx
dp3 r2.x, r1.xyzx, v1.xyzx
imad r3.xyzw, l(3, 3, 3, 3), v5.xxyy, l(1, 2, 1, 2)
mul r4.xyz, v4.yyyy, cb1[r3.z + 8].xyzx
mad r4.xyz, v4.xxxx, cb1[r3.x + 8].xyzx, r4.xyzx
imad r5.xyzw, l(3, 3, 3, 3), v5.zzww, l(1, 2, 1, 2)
mad r4.xyz, v4.zzzz, cb1[r5.x + 8].xyzx, r4.xyzx
mad r4.xyz, v4.wwww, cb1[r5.z + 8].xyzx, r4.xyzx
dp3 r2.y, r4.xyzx, v1.xyzx
mul r6.xyz, v4.yyyy, cb1[r3.w + 8].xyzx
mad r6.xyz, v4.xxxx, cb1[r3.y + 8].xyzx, r6.xyzx
mad r6.xyz, v4.zzzz, cb1[r5.y + 8].xyzx, r6.xyzx
mad r6.xyz, v4.wwww, cb1[r5.w + 8].xyzx, r6.xyzx
dp3 r2.z, r6.xyzx, v1.xyzx
mov o0.xyz, r2.xyzx
mul_sat r2.w, r2.z, cb1[7].z
add_sat o0.w, r2.w, cb1[7].w
dp3 r7.x, r1.xyzx, v2.xyzx
dp3 r7.y, r4.xyzx, v2.xyzx
dp3 r7.z, r6.xyzx, v2.xyzx
mov o1.xyz, r7.xyzx
mad r8.xyz, v0.xyzx, cb1[4].xyzx, cb1[5].xyzx
mov o1.w, r8.z
mul r9.xyz, r2.zxyz, r7.yzxy
mad o2.xyz, r2.yzxy, r7.zxyz, -r9.xyzx
mad o3.xyzw, v3.xyxy, cb1[6].xyxy, cb1[6].zwzw
mul r2.x, v4.x, cb1[r0.x + 8].w
mul r2.y, v4.x, cb1[r3.x + 8].w
mul r2.z, v4.x, cb1[r3.y + 8].w
mul r7.x, v4.y, cb1[r0.y + 8].w
mul r7.y, v4.y, cb1[r3.z + 8].w
mul r7.z, v4.y, cb1[r3.w + 8].w
add r2.xyz, r2.xyzx, r7.xyzx
mul r0.x, v4.z, cb1[r0.z + 8].w
mul r3.x, v4.w, cb1[r0.w + 8].w
mul r0.y, v4.z, cb1[r5.x + 8].w
mul r0.z, v4.z, cb1[r5.y + 8].w
add r0.xyz, r0.xyzx, r2.xyzx
mul r3.y, v4.w, cb1[r5.z + 8].w
mul r3.z, v4.w, cb1[r5.w + 8].w
add r0.xyz, r0.xyzx, r3.xyzx
add r0.xyz, r0.xyzx, cb12[15].xyzx
mov r1.w, r0.x
mov r8.w, l(1.000000)
dp4 r1.x, r1.xyzw, r8.xyzw
mov r4.w, r0.y
mov r6.w, r0.z
dp4 r1.z, r6.xyzw, r8.xyzw
dp4 r1.y, r4.xyzw, r8.xyzw
add o4.xyz, r1.xyzx, cb12[7].xyzx
mul r0.xyzw, r1.yyyy, cb12[1].xyzw
mad r0.xyzw, cb12[0].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb12[2].xyzw, r1.zzzz, r0.xyzw
add o6.xyzw, r0.xyzw, cb12[14].xyzw
umin r0.x, v6.x, cb1[4].w
ld_indexable(buffer)(float,float,float,float) o5.xyzw, r0.xxxx, t0.xyzw
ret
// Approximately 0 instruction slots used
