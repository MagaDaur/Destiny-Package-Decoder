//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:55 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { -1.000000, 0, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0, 0, -1.000000, 0} }
dcl_constantbuffer cb0[39], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_uav_typed_texture3d (uint,uint,uint,uint) u0
dcl_uav_typed_texture3d (uint,uint,uint,uint) u1
dcl_uav_typed_texture3d (uint,uint,uint,uint) u2
dcl_input vThreadID.xyz
dcl_temps 9
dcl_thread_group 8, 8, 1
ftou r0.xyz, cb0[38].xyzx
iadd r0.yzw, r0.xxyz, vThreadID.xxyz
ftou r1.xyz, cb3[5].xyzx
ult r1.xyz, r0.yzwy, r1.xyzx
and r1.x, r1.y, r1.x
and r1.x, r1.z, r1.x
if_nz r1.x
  if_z r0.w
    itof r1.xy, r0.yzyy
    div r1.xy, r1.xyxx, cb3[4].xyxx
    mul r1.xy, r1.xyxx, cb12[12].xyxx
    mul r1.xy, r1.xyxx, l(0.031250, 0.031250, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t2.xyzw, s2, l(0.000000)
    round_ni r2.x, |r1.w|
    mul r2.y, r2.x, l(0.010000)
    ge r2.x, l(0.000000), r2.x
    movc r2.x, r2.x, l(0.010000), r2.y
    mov r2.y, l(-1)
  else
    ftou r2.z, cb3[9].x
    mov r3.xy, l(0,0,0,0)
    ineg r3.z, r2.z
    iadd r3.xyz, r0.yzwy, r3.xyzx
    utof r3.xyz, r3.xyzx
    add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    div r3.xyz, r3.xyzx, cb3[2].xyzx
    round_ni r2.z, r3.z
    frc r3.w, r3.z
    mad r3.xyz, r3.xywx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, cb3[3].xyzx
    exp r2.z, r2.z
    mul r4.xyz, r2.zzzz, cb3[6].xyzx
    mul r2.z, r2.z, cb3[7].x
    div r5.xyz, cb3[0].xyzx, r4.xyzx
    round_ni r5.xyz, r5.xyzx
    mul r5.xyz, r4.xyzx, r5.xyzx
    mad r1.xyz, r3.xyzx, r4.xyzx, r5.xyzx
    mul r2.x, r2.z, l(0.500000)
    mul r3.xyz, r2.xxxx, -cb12[6].xyzx
    mad r3.xyz, -r3.xyzx, l(5.196300, 5.196300, 5.196300, 0.000000), cb12[7].xyzx
    add r3.xyz, r1.xyzx, -r3.xyzx
    dp3 r2.z, r3.xyzx, -cb12[6].xyzx
    lt r2.y, l(0.000000), r2.z
    mov r1.w, r2.x
  endif
  if_nz r2.y
    add r1.xyz, r1.xyzx, -cb12[7].xyzx
    add r2.yzw, -r1.xxyz, cb0[7].xxyz
    dp3 r2.y, r2.yzwy, r2.yzwy
    sqrt r2.y, r2.y
    add r2.z, r2.x, r2.y
    div_sat r2.w, cb0[27].y, r2.x
    add r3.x, -r2.z, r2.y
    mad r2.z, r2.w, r3.x, r2.z
    movc r2.y, r0.w, r2.y, r2.z
    mad_sat r2.y, r2.y, cb0[26].x, cb0[26].y
    mul r2.y, r2.y, r2.y
    lt r1.w, r1.w, l(0.000000)
    movc r1.w, r1.w, l(0), r2.y
    mad r2.yzw, cb0[23].xxyz, cb0[24].xxxx, -cb0[25].xxyz
    mov r3.xyzw, r1.xyzw
    mov r4.x, l(0)
    loop
      ige r4.y, r4.x, l(6)
      breakc_nz r4.y
      mul r4.yzw, r2.xxxx, icb[r4.x + 0].xxyz
      movc r4.yzw, r0.wwww, r4.yyzw, l(0,0,0,0)
      add r3.xyz, r3.xyzx, r4.yzwy
      mul r4.yzw, r3.yyyy, cb0[19].xxyz
      mad r4.yzw, cb0[18].xxyz, r3.xxxx, r4.yyzw
      mad r4.yzw, cb0[20].xxyz, r3.zzzz, r4.yyzw
      add r4.yzw, r4.yyzw, cb0[21].xxyz
      mad r4.yzw, r4.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000), l(0.000000, 0.500000, 0.500000, 0.500000)
      mad r5.xyz, r4.yzwy, cb0[12].xyzx, cb0[13].xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r5.xyz, r5.xyzx, t1.xyzw, s1, l(0.000000)
      add r5.xyz, r5.xyzx, -cb0[14].xyzx
      mad r4.yzw, r5.xxyz, cb0[11].xxxx, r4.yyzw
      mad r4.yzw, r4.yyzw, cb0[15].xxyz, cb0[16].xxyz
      sample_l_indexable(texture3d)(float,float,float,float) r4.y, r4.yzwy, t0.yxzw, s1, l(0.000000)
      add r4.y, -r4.y, l(1.000000)
      mad_sat r4.y, r4.y, cb0[17].x, cb0[17].y
      add r4.yzw, r4.yyyy, cb0[10].xxyz
      mul r5.xyz, r3.wwww, r4.yzwy
      lt r5.xyz, l(0.000100, 0.000100, 0.000100, 0.000000), r5.xyzx
      or r5.x, r5.y, r5.x
      or r5.x, r5.z, r5.x
      if_nz r5.x
        add r5.xyz, -r3.xyzx, cb0[7].xyzx
        dp3 r5.w, r5.xyzx, r5.xyzx
        sqrt r5.w, r5.w
        div r5.xyz, r5.xyzx, r5.wwww
        mad_sat r5.w, cb0[22].y, r3.w, cb0[22].x
        mad r6.xyz, r5.wwww, r2.yzwy, cb0[25].xyzx
        dp3 r5.w, r3.xyzx, r3.xyzx
        rsq r5.w, r5.w
        mul r7.xyz, r3.xyzx, r5.wwww
        dp3_sat r6.w, icb[r4.x + 0].xyzx, r5.xyzx
        mad r8.xyz, -r3.xyzx, r5.wwww, r5.xyzx
        dp3 r5.w, r8.xyzx, r8.xyzx
        rsq r5.w, r5.w
        mul r8.xyz, r5.wwww, r8.xyzx
        dp3 r5.w, icb[r4.x + 0].xyzx, -r7.xyzx
        add r5.w, |r5.w|, l(0.000010)
        dp3_sat r5.x, r5.xyzx, r8.xyzx
        dp2 r5.x, r5.xxxx, r5.xxxx
        add r5.y, -r6.w, l(1.000000)
        add r5.x, r5.x, l(-0.500000)
        mul r5.z, r5.y, r5.y
        mul r5.z, r5.z, r5.z
        mul r5.y, r5.z, r5.y
        mad r5.y, r5.x, r5.y, l(1.000000)
        add r5.z, -r5.w, l(1.000000)
        mul r5.w, r5.z, r5.z
        mul r5.w, r5.w, r5.w
        mul r5.z, r5.w, r5.z
        mad r5.x, r5.x, r5.z, l(1.000000)
        mul r5.x, r5.x, r5.y
        mul r5.x, r6.w, r5.x
        mul r5.x, r5.x, l(0.318309873)
        mul r5.xyz, r6.xyzx, r5.xxxx
        mul r5.w, r3.w, cb0[29].x
        mul r5.xyz, r5.wwww, r5.xyzx
        mul r4.yzw, r4.yyzw, r5.xxyz
        mul r4.yzw, r4.yyzw, cb0[30].xxxx
        div r4.yzw, r4.yyzw, cb13[1].xxxx
        dp3 r5.x, r4.yzwy, r4.yzwy
        lt r5.x, l(0.000100), r5.x
        if_nz r5.x
          imad r0.x, r0.y, l(6), r4.x
          mul r4.yzw, r4.yyzw, l(0.000000, 8388608.000000, 8388608.000000, 8388608.000000)
          ftou r4.yzw, r4.yyzw
          atomic_iadd u0, r0.xzwx, r4.y
          atomic_iadd u1, r0.xzwx, r4.z
          atomic_iadd u2, r0.xzwx, r4.w
        endif
      endif
      iadd r4.x, r4.x, l(1)
    endloop
  endif
endif
ret
// Approximately 0 instruction slots used
