//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:09 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xy
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// SV_POSITION              0   xyzw        5      POS   float   xy
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[22], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[15], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_temps 4
add r0.xyz, -v4.xyzx, cb12[14].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r1.x, r0.xyzx, v1.xyzx
dp3 r1.y, r0.xyzx, v2.xyzx
dp3 r0.x, r0.xyzx, v0.xyzx
mul r0.yz, r1.xxyx, cb0[16].xxxx
mul r1.xy, r1.xyxx, cb0[13].xxxx
div r1.xy, r1.xyxx, r0.xxxx
div r0.xy, r0.yzyy, r0.xxxx
add r0.xy, -r0.xyxx, v3.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t6.xyzw, s4
add r0.yz, -r1.xxyx, v3.xxyx
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t6.yxzw, s4
sample_indexable(texture2d)(float,float,float,float) r0.z, v3.xyxx, t6.yzxw, s4
mul r1.xyzw, r0.zzzz, cb0[15].xyzw
mad r2.xyzw, r0.xxxx, cb0[17].xyzw, -r1.xyzw
mad r1.xyzw, cb0[18].xxxx, r2.xyzw, r1.xyzw
mad r0.xyzw, r0.yyyy, cb0[14].xyzw, r1.xyzw
mul r0.xyzw, r0.xyzw, cb0[12].xyzw
sample_indexable(texture2d)(float,float,float,float) r1.x, v3.xyxx, t4.xyzw, s3
ge r1.x, cb0[10].x, r1.x
movc r1.xyzw, r1.xxxx, cb0[8].xyzw, cb0[9].xyzw
sample_indexable(texture2d)(float,float,float,float) r2.x, v3.xyxx, t5.xyzw, s3
ge r2.x, cb0[11].x, r2.x
movc r2.xyzw, r2.xxxx, cb0[8].xyzw, cb0[9].xyzw
mul r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.xyzw, r1.xyzw
mul r0.xyzw, r0.xyzw, cb0[19].xyzw
mul r0.xyz, r0.xyzx, cb0[20].xxxx
mul r0.w, r0.w, cb0[21].x
mul r0.xyz, r0.xyzx, cb13[1].wwww
mul r0.xyz, r0.xyzx, cb13[1].xxxx
mul r1.x, l(0.750000), cb0[7].x
max r1.x, r1.x, l(0.000000)
add r1.yzw, v4.xxyz, -cb12[14].xxyz
dp3 r1.y, r1.yzwy, r1.yzwy
sqrt r1.y, r1.y
add r1.x, -r1.x, r1.y
mul_sat r1.x, r1.x, l(0.000020)
sqrt r2.x, r1.x
div r1.x, r1.w, r1.y
mul r1.y, r1.y, l(0.015625)
min r1.y, r1.y, l(1.000000)
sqrt r3.z, r1.y
mad r2.y, r1.x, l(0.500000), l(0.500000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyxx, t15.xyzw, s2, l(0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r3.xy, v5.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r1.x, r3.xyzx, t21.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r3.xyxx, t20.xwyz, s1, l(0.000000)
add r1.y, r1.y, l(-1.000000)
mad r1.x, r1.x, r1.y, l(1.000000)
mul r0.w, r0.w, r1.x
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
