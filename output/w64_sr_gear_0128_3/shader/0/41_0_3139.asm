//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:05 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float    yzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// SV_POSITION              0   xyzw        3      POS   float   xy
// SV_isFrontFace           0   x           4    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[111], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v0.yzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps_siv linear noperspective v3.xy, position
dcl_output o0.xyzw
dcl_temps 2
mul r0.xy, v3.xyxx, cb12[12].zwzz
mul r0.xy, r0.xyxx, cb12[12].xyxx
ftoi r0.xy, r0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t10.xyzw
mad r0.x, r0.x, cb2[0].y, cb2[0].x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -v0.w
mul_sat r0.x, r0.x, l(1.#INF0000)
add r0.x, -r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
dp3 r0.y, v1.xyzx, v1.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, v1.xxyz
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.y, r1.x
sqrt r1.x, r1.x
min r1.x, r1.x, l(1.000000)
mul r1.yzw, r1.yyyy, v2.xxyz
dp3 r0.y, r1.yzwy, r0.yzwy
mul r0.y, r0.y, r0.y
min r0.y, r0.y, l(1.000000)
mul r0.z, v0.y, v0.y
mul r0.y, r0.y, r0.z
mul r0.z, r1.x, r0.y
min r0.y, r0.y, l(1.000000)
mad r1.xyz, r0.yyyy, l(0.875387, 0.843458, 0.557070, 0.000000), cb0[97].xyzx
add r1.xyz, r1.xyzx, l(-2.511886521E-007, -2.511886521E-007, -2.511886521E-007, 0.000000)
mul r1.xyz, r1.xyzx, l(1.00000024, 1.00000024, 1.00000024, 0.000000)
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.xyzx, cb13[1].wwww
mul r1.xyz, r1.xyzx, cb13[1].xxxx
mul r1.xyz, r1.xyzx, cb8[7].xyzx
mul r1.xyz, r1.xyzx, l(15.000000, 15.000000, 15.000000, 0.000000)
min r0.y, r0.z, l(1.000000)
mul_sat r0.y, r0.y, cb0[110].x
mul_sat r0.y, r0.y, v0.z
mul r0.x, r0.x, r0.y
mul o0.xyz, r0.xxxx, r1.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
