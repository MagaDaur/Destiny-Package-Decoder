//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:10 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xy
// TEXCOORD                 4   xyz         4     NONE   float
// SV_POSITION              0   xyzw        5      POS   float
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb7[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t7.xyzw, s1
mul_sat r1.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r2.xyz, r0.xyzx, l(-0.250000, -0.250000, -0.250000, 0.000000)
mad r1.xyz, cb7[3].xyzx, r1.xyzx, r2.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v3.xyxx, t6.yzwx, s1
mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r0.x, l(128.500000), cb7[6].x
mul r0.x, r0.x, l(0.00390625000)
ge r0.y, cb7[6].x, l(0.000000)
mov_sat r0.z, cb7[5].w
mul r0.z, r0.z, r0.w
ge r1.x, l(0.050000), r0.z
mov o2.x, r0.z
and r0.y, r0.y, r1.x
movc r0.xy, r0.yyyy, r0.xxxx, l(0.200000,0,0,0)
mov o0.w, r0.y
lt r0.x, l(0.500000), r0.x
and o1.w, r0.x, l(0x3ea8f5c3)
mov_sat r0.x, cb7[6].y
mad r0.y, r0.x, l(-2.000000), l(-0.200000)
mul r0.x, r0.x, l(-2.000000)
mov_sat r0.z, cb0[0].x
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v3.xyxx, t9.xyzw, s1
add_sat r1.z, r1.z, cb0[3].z
mad r1.xy, r1.xyxx, cb0[3].xxxx, cb0[3].yyyy
min r0.z, r0.z, r1.z
mad_sat r1.z, cb7[7].y, r0.z, cb7[7].x
mad_sat r1.z, cb7[7].w, r1.z, cb7[7].z
add r1.z, -r0.z, r1.z
mad r0.z, r0.w, r1.z, r0.z
mul r0.y, r0.z, r0.y
mad r0.x, r0.y, l(-5.002501), r0.x
min r0.x, r0.x, r0.z
add r0.x, -r0.z, r0.x
mad r0.x, r0.w, r0.x, r0.z
mul r0.y, r0.w, cb7[6].z
mul o2.z, r0.y, l(0.800000)
lt r0.y, l(0.000100), cb7[6].y
movc r0.x, r0.y, r0.x, r0.z
mad r0.x, r0.x, l(0.125000), l(0.375000)
mul r0.yzw, r1.yyyy, v2.xxyz
mad r0.yzw, v1.xxyz, r1.xxxx, r0.yyzw
dp2 r1.x, r1.xyxx, r1.xyxx
add r1.x, -r1.x, l(1.000000)
max r1.x, r1.x, l(0.000000)
sqrt r1.x, r1.x
mad r0.yzw, v0.xxyz, r1.xxxx, r0.yyzw
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mad_sat o1.xyz, r0.yzwy, r0.xxxx, l(0.500000, 0.500000, 0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.x, v3.xyxx, t8.zxyw, s1
mov_sat r0.x, r0.x
mul o2.y, r0.x, l(0.500000)
mov o2.w, v0.w
ret
// Approximately 0 instruction slots used
