//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:55 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// SV_POSITION              0   xyzw        3      POS   float   xy
// SV_isFrontFace           0   x           4    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[126], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb8[7], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps_siv linear noperspective v3.xy, position
dcl_output o0.xyzw
dcl_temps 4
add r0.xy, v0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r0.z, -|r0.y|, |r0.x|
add r0.w, |r0.y|, |r0.x|
div r0.z, r0.z, r0.w
add r0.z, r0.z, l(-1.000000)
lt r1.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyxx
lt r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
dp2 r0.x, |r0.xyxx|, |r0.xyxx|
log r0.x, r0.x
mul r0.x, r0.x, cb0[96].x
exp r0.y, r0.x
iadd r1.xy, -r1.xyxx, r1.zwzz
itof r1.xy, r1.xyxx
mad r0.z, r0.z, r1.y, l(2.000000)
mul r0.z, r0.z, r1.x
mul r0.z, r0.z, l(0.125000)
frc r0.x, r0.z
mad r0.xy, r0.xyxx, cb0[8].xyxx, cb0[8].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t0.xyzw, s1
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r0.xy, r0.xyxx, cb0[99].xxxx, v0.xyxx
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
mad_sat r0.x, r0.x, l(-4.000000), l(1.800000)
mad_sat r0.x, r0.x, cb0[125].x, l(-0.500000)
mul_sat r0.x, r0.x, v0.z
mov r1.zw, l(0,0,0,0)
mul r2.xy, v3.xyxx, cb12[12].zwzz
mul r0.yz, r2.xxyx, cb12[12].xxyx
ftoi r1.xy, r0.yzyy
ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t10.yxzw
mad r0.y, r0.y, cb2[0].y, cb2[0].x
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add_sat r0.y, r0.y, -v0.w
add r0.y, -r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mad r0.x, r0.x, r0.y, -cb0[116].x
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r2.xyxx, t11.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r2.xyxx, t13.xyzw, s2
add r0.xyzw, r0.xyzw, -r1.xyzw
dp3 r2.w, -v2.xyzx, -v2.xyzx
sqrt r2.w, r2.w
mad_sat r3.x, r2.w, cb0[120].x, cb0[120].y
mul r2.w, r2.w, l(0.015625)
min r2.w, r2.w, l(1.000000)
sqrt r2.z, r2.w
sample_l_indexable(texture3d)(float,float,float,float) r2.z, r2.xyzx, t21.yzxw, s3, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyw, r2.xyxx, t20.xywz, s3, l(0.000000)
mad r0.xyzw, r3.xxxx, r0.xyzw, r1.xyzw
mul r0.xyz, r0.xyzx, cb8[5].xyzx
mad r0.xyz, r0.wwww, cb8[6].xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, cb13[1].xxxx
mad o0.xyz, r2.zzzz, r2.xywx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used
