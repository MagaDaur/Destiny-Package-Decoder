//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float
// TEXCOORD                 4   xyzw        4     NONE   float
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float
// TEXCOORD                 8   xyzw        8     NONE   float   x
// TEXCOORD                 9   xyz         9     NONE   float     z
// SV_POSITION              0   xyzw       10      POS   float   xy
// SV_isFrontFace           0   x          11    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[107], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v8.x
dcl_input_ps linear v9.z
dcl_input_ps_siv linear noperspective v10.xy, position
dcl_output o0.xyzw
dcl_temps 3
dp3 r0.x, v1.xyzx, v1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v1.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
mad r0.y, r0.x, r0.x, l(0.250000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, l(1.333333)
min r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.zw, v0.xxxy, cb0[0].xxxy, cb0[0].zzzw
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t0.zwxy, s1
add r0.zw, r0.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mad r0.zw, r0.zzzw, v8.xxxx, v0.xxxy
mul r0.z, r0.z, l(100.000000)
add r0.w, r0.w, l(-0.500000)
mad r0.w, |r0.w|, l(-2.000000), l(1.000000)
max r0.w, r0.w, l(0.000000)
mul r0.x, r0.w, r0.x
frc r0.z, r0.z
add r0.z, r0.z, l(-0.500000)
add r0.z, -|r0.z|, l(0.750000)
mad r0.y, r0.z, r0.z, r0.y
min r0.y, r0.y, l(1.000000)
mul r0.xy, r0.xyxx, r0.xyxx
mul r0.x, r0.x, r0.y
mul_sat r0.x, r0.x, v9.z
mul_sat r0.x, r0.x, v0.z
dp3 r0.y, -v2.xyzx, -v2.xyzx
sqrt r0.y, r0.y
mul r0.y, r0.y, l(0.015625)
min r0.y, r0.y, l(1.000000)
sqrt r1.z, r0.y
mul r1.xy, v10.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r0.y, r1.xyzx, t21.yxzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.xyxx, t20.xywz, s2, l(0.000000)
mul r1.xy, r1.xyxx, cb12[12].xyxx
ftoi r1.xy, r1.xyxx
add r0.z, r0.z, l(-1.000000)
mad r0.y, r0.y, r0.z, l(1.000000)
mul r0.x, r0.y, r0.x
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t10.yxzw
mad r0.y, r0.y, cb2[0].y, cb2[0].x
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mad r0.zw, v0.xxxy, v6.xxxy, v6.zzzw
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t1.yzxw, s1
mad r1.xy, v0.xyxx, v5.xyxx, v5.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t1.yzwx, s1
dp2 r0.z, r0.zzzz, r0.wwww
add_sat r0.z, r0.z, l(-0.250000)
add r0.w, -r0.z, v0.w
add r0.z, -r0.z, l(2.000000)
add r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, r0.y
add r0.y, r0.y, -v0.w
mad_sat r0.y, r0.y, l(-0.125000), l(1.000000)
mul r0.y, r0.y, r0.y
div_sat r0.z, r0.w, r0.z
add r0.z, -r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
mul r0.x, r0.z, r0.x
mov r1.x, l(1.000000)
mov r1.yz, cb0[106].xxxx
mul r0.yzw, r0.yyyy, r1.xxyz
mad r1.xy, v0.xyxx, cb0[1].xyxx, cb0[1].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t0.xyzw, s1
add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, cb0[97].xxxx, v0.xyxx
mad r1.zw, r1.xxxy, v6.xxxy, v6.zzzw
mad r1.xy, r1.xyxx, v5.xyxx, v5.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t1.yxzw, s1
mul_sat r1.x, r1.x, r1.y
mul r1.xyz, r1.xxxx, l(1.000000, 0.404822, 0.000000, 0.000000)
mov r2.x, cb0[106].x
mov r2.yz, l(0,0.404822,0,0)
mad r0.yzw, r0.yyzw, r2.xxyz, r1.xxyz
add r0.yzw, r0.yyzw, l(0.000000, -2.511886521E-007, -2.511886521E-007, -2.511886521E-007)
div r0.yzw, r0.yyzw, l(0.000000, 0.999999762, 0.999999762, 0.999999762)
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.yzw, r0.yyzw, cb13[1].wwww
mul r0.yzw, r0.yyzw, cb13[1].xxxx
mul r0.yzw, r0.yyzw, cb8[7].xxyz
mul o0.xyz, r0.xxxx, r0.yzwy
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
