//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:52 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[100], immediateIndexed
dcl_constantbuffer cb9[64], dynamicIndexed
dcl_constantbuffer cb10[2], immediateIndexed
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 6
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[89].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[99].x
  add r0.y, l(0.250000), cb10[1].x
  ftoi r0.y, r0.y
  ftoi r0.z, cb0[23].x
  iadd r0.y, r0.z, r0.y
  add r0.z, l(0.250000), cb10[0].x
  lt r0.w, cb0[23].x, cb0[24].x
  and r0.w, r0.w, cb0[23].x
  ftoi r0.zw, r0.zzzw
  iadd r0.z, r0.w, r0.z
  utof r0.w, vThreadID.x
  add r1.y, r0.w, cb0[19].x
  mul r2.xyz, cb9[r0.z + 0].zxyz, cb9[r0.z + 32].yzxy
  mad r2.xyz, cb9[r0.z + 0].yzxy, cb9[r0.z + 32].zxyz, -r2.xyzx
  dp3 r0.w, cb9[r0.z + 0].xyzx, cb9[r0.z + 32].xyzx
  mov r2.w, -r0.w
  mov r3.xyz, cb9[r0.z + 0].xyzx
  mov r3.w, l(0)
  mad r2.xyzw, cb9[r0.z + 32].wwww, r3.xyzw, r2.xyzw
  mul r3.xyz, r2.yzxy, -cb9[r0.z + 32].zxyz
  mad r3.xyz, -cb9[r0.z + 32].yzxy, r2.zxyz, -r3.xyzx
  mad r2.xyz, cb9[r0.z + 32].wwww, r2.xyzx, r3.xyzx
  mad r2.xyz, r2.wwww, -cb9[r0.z + 32].xyzx, r2.xyzx
  mul r3.xyz, cb9[r0.y + 32].yzxy, -cb9[r0.z + 32].zxyz
  mad r3.xyz, -cb9[r0.z + 32].yzxy, cb9[r0.y + 32].zxyz, -r3.xyzx
  dp3 r0.w, -cb9[r0.z + 32].xyzx, cb9[r0.y + 32].xyzx
  mov r4.w, -r0.w
  mad r4.xyz, cb9[r0.z + 32].wwww, cb9[r0.y + 32].xyzx, r3.xyzx
  mul r3.xyzw, l(-1.000000, -1.000000, -1.000000, 1.000000), cb9[r0.z + 32].xyzw
  mad r3.xyzw, cb9[r0.y + 32].wwww, r3.xyzw, r4.xyzw
  mul r4.xyz, cb9[r0.y + 0].zxyz, cb9[r0.z + 32].yzxy
  mad r4.xyz, cb9[r0.y + 0].yzxy, cb9[r0.z + 32].zxyz, -r4.xyzx
  dp3 r0.w, cb9[r0.y + 0].xyzx, cb9[r0.z + 32].xyzx
  mov r4.w, -r0.w
  mov r5.xyz, cb9[r0.y + 0].xyzx
  mov r5.w, l(0)
  mad r4.xyzw, cb9[r0.z + 32].wwww, r5.xyzw, r4.xyzw
  mul r5.xyz, r4.yzxy, -cb9[r0.z + 32].zxyz
  mad r5.xyz, -cb9[r0.z + 32].yzxy, r4.zxyz, -r5.xyzx
  mad r4.xyz, cb9[r0.z + 32].wwww, r4.xyzx, r5.xyzx
  mad r0.yzw, r4.wwww, -cb9[r0.z + 32].xxyz, r4.xxyz
  add r2.xyz, r0.yzwy, -r2.xyzx
  mul r4.xyzw, r3.wwww, l(0.001000, 0.000000, 0.000000, 0.000000)
  mad r4.xyzw, r3.zzyx, l(-0.000000, 0.001000, -0.001000, 0.001000), r4.xyzw
  mul r0.yzw, r3.zzxy, r4.yyzx
  mad r0.yzw, r3.yyzx, r4.zzxy, -r0.yyzw
  mad r0.yzw, r3.wwww, r4.xxyz, r0.yyzw
  mad r3.xyz, r4.wwww, r3.xyzx, r0.yzwy
  imad r0.x, l(3), vThreadID.x, r0.x
  mov r3.w, l(0)
  store_uav_typed u0.xyzw, r0.xxxx, r3.xyzw
  iadd r0.yz, r0.xxxx, l(0, 1, 2, 0)
  mov r2.w, l(0)
  store_uav_typed u0.xyzw, r0.yyyy, r2.xyzw
  mov r1.xzw, l(0,0,0,0)
  store_uav_typed u0.xyzw, r0.zzzz, r1.xyzw
endif
ret
// Approximately 0 instruction slots used
