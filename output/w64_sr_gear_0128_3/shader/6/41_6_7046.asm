//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[100], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb9[64], dynamicIndexed
dcl_constantbuffer cb10[2], immediateIndexed
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 11
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[89].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[99].x
  add r0.y, l(0.250000), cb10[1].x
  ftoi r0.y, r0.y
  ftoi r0.z, cb0[23].x
  iadd r0.y, r0.z, r0.y
  add r0.z, l(0.250000), cb10[0].x
  lt r0.w, cb0[23].x, cb0[24].x
  and r0.w, r0.w, cb0[23].x
  ftoi r0.zw, r0.zzzw
  iadd r0.z, r0.w, r0.z
  utof r0.w, vThreadID.x
  add r1.w, r0.w, cb0[19].x
  add r0.w, r1.w, cb0[21].x
  ftou r0.w, r0.w
  xor r2.x, r0.w, l(61)
  ushr r0.w, r0.w, l(16)
  xor r0.w, r0.w, r2.x
  imul null, r0.w, r0.w, l(9)
  ushr r2.x, r0.w, l(4)
  xor r0.w, r0.w, r2.x
  imul null, r0.w, r0.w, l(0x27d4eb2d)
  ushr r2.x, r0.w, l(15)
  xor r0.w, r0.w, r2.x
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r2.x, r0.w
  mul r2.y, r2.x, l(2.328306437E-010)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r3.x, r0.w
  mul r2.z, r3.x, l(2.328306437E-010)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r3.x, r0.w
  mul r2.w, r3.x, l(2.328306437E-010)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r3.x, r0.w
  mul r3.x, r3.x, l(2.328306437E-010)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r4.x, r0.w
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r4.y, r0.w
  mul r3.yz, r4.xxyx, l(0.000000, 2.328306437E-010, 2.328306437E-010, 0.000000)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r4.y, r0.w
  mul r3.w, r4.y, l(2.328306437E-010)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r4.y, r0.w
  mul r5.x, r4.y, l(2.328306437E-010)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r4.y, r0.w
  mad r4.x, r4.x, l(2.305023360E-011), l(0.001000)
  mul r5.y, r4.y, l(2.328306437E-010)
  mad r4.zw, r4.yyyy, l(0.000000, 0.000000, 7.761013360E-011, 6.984919310E-010), l(0.000000, 0.000000, 0.000000, -2.000000)
  ge r6.xyz, r4.yyyy, l(0.000000, 3221225472.000000, 4294967296.000000, 0.000000)
  and r6.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r6.xy, r6.yzyy, r6.xyxx
  add r6.xy, r6.xyxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  mul r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  frc r6.xy, r6.xyxx
  mul r4.yz, r4.zzwz, r6.xxyx
  mul r4.yz, r4.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000)
  add r4.y, r4.z, r4.y
  add_sat r4.y, r4.y, l(0.000001)
  mad r2.x, r4.y, l(0.650000), l(0.500000)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r4.y, r0.w
  mad r6.x, r4.y, l(4.656612873E-010), l(-1.000000)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r4.y, r0.w
  mad r6.y, r4.y, l(4.656612873E-010), l(-1.000000)
  imad r0.w, r0.w, l(0x0019660d), l(0x3c6ef35f)
  utof r0.w, r0.w
  mad r6.z, r0.w, l(4.656612873E-010), l(-1.000000)
  dp3 r0.w, r6.xyzx, r6.xyzx
  rsq r0.w, r0.w
  mul r4.yzw, r0.wwww, r6.xxyz
  mul r4.yzw, r4.yyzw, l(0.000000, 0.500000, 0.100000, 0.100000)
  mul r6.xyz, r4.xxxx, l(1.000000, 0.000000, 0.000000, 0.000000)
  mul r7.xyz, cb9[r0.z + 0].zxyz, cb9[r0.z + 32].yzxy
  mad r7.xyz, cb9[r0.z + 0].yzxy, cb9[r0.z + 32].zxyz, -r7.xyzx
  dp3 r0.w, cb9[r0.z + 0].xyzx, cb9[r0.z + 32].xyzx
  mov r7.w, -r0.w
  mov r8.xyz, cb9[r0.z + 0].xyzx
  mov r8.w, l(0)
  mad r7.xyzw, cb9[r0.z + 32].wwww, r8.xyzw, r7.xyzw
  mul r8.xyz, r7.yzxy, -cb9[r0.z + 32].zxyz
  mad r8.xyz, -cb9[r0.z + 32].yzxy, r7.zxyz, -r8.xyzx
  mad r7.xyz, cb9[r0.z + 32].wwww, r7.xyzx, r8.xyzx
  mad r7.xyz, r7.wwww, -cb9[r0.z + 32].xyzx, r7.xyzx
  mul r8.xyz, cb9[r0.y + 32].yzxy, -cb9[r0.z + 32].zxyz
  mad r8.xyz, -cb9[r0.z + 32].yzxy, cb9[r0.y + 32].zxyz, -r8.xyzx
  dp3 r0.w, -cb9[r0.z + 32].xyzx, cb9[r0.y + 32].xyzx
  mov r9.w, -r0.w
  mad r9.xyz, cb9[r0.z + 32].wwww, cb9[r0.y + 32].xyzx, r8.xyzx
  mul r8.xyzw, l(-1.000000, -1.000000, -1.000000, 1.000000), cb9[r0.z + 32].xyzw
  mad r8.xyzw, cb9[r0.y + 32].wwww, r8.xyzw, r9.xyzw
  mul r9.xyz, cb9[r0.y + 0].zxyz, cb9[r0.z + 32].yzxy
  mad r9.xyz, cb9[r0.y + 0].yzxy, cb9[r0.z + 32].zxyz, -r9.xyzx
  dp3 r0.w, cb9[r0.y + 0].xyzx, cb9[r0.z + 32].xyzx
  mov r9.w, -r0.w
  mov r10.xyz, cb9[r0.y + 0].xyzx
  mov r10.w, l(0)
  mad r9.xyzw, cb9[r0.z + 32].wwww, r10.xyzw, r9.xyzw
  mul r10.xyz, r9.yzxy, -cb9[r0.z + 32].zxyz
  mad r10.xyz, -cb9[r0.z + 32].yzxy, r9.zxyz, -r10.xyzx
  mad r9.xyz, cb9[r0.z + 32].wwww, r9.xyzx, r10.xyzx
  mad r9.xyz, r9.wwww, -cb9[r0.z + 32].xyzx, r9.xyzx
  add r7.xyz, -r7.xyzx, r9.xyzx
  mul r9.xyz, r4.wyzw, -r8.yzxy
  mad r9.xyz, r4.zwyz, -r8.zxyz, -r9.xyzx
  dp3 r0.y, r4.yzwy, -r8.xyzx
  mov r9.w, -r0.y
  mul r4.xyz, r4.yzwy, r8.wwww
  mov r4.w, l(0)
  add r4.xyzw, r4.xyzw, r9.xyzw
  mul r9.xyz, r4.yzxy, r8.zxyz
  mad r9.xyz, r8.yzxy, r4.zxyz, -r9.xyzx
  mad r4.xyz, r8.wwww, r4.xyzx, r9.xyzx
  mad r4.xyz, r4.wwww, r8.xyzx, r4.xyzx
  add r4.xyz, r7.xyzx, r4.xyzx
  mul r7.xyzw, r6.zzxx, -r8.zxyx
  mad r9.xyz, -r6.zxzz, -r8.yzxy, r7.xyzx
  mov r9.w, -r7.w
  mul r6.xyz, r6.xyzx, r8.wwww
  mov r6.w, l(0)
  add r6.xyzw, r6.xyzw, r9.xyzw
  mul r7.xyz, r6.yzxy, r8.zxyz
  mad r7.xyz, r8.yzxy, r6.zxyz, -r7.xyzx
  mad r6.xyz, r8.wwww, r6.xyzx, r7.xyzx
  mad r6.xyz, r6.wwww, r8.xyzx, r6.xyzx
  mul r7.xyz, r4.zxyz, -cb9[r0.z + 32].yzxy
  mad r7.xyz, r4.yzxy, -cb9[r0.z + 32].zxyz, -r7.xyzx
  dp3 r0.y, r4.xyzx, -cb9[r0.z + 32].xyzx
  mov r7.w, -r0.y
  mul r8.xyz, r4.xyzx, cb9[r0.z + 32].wwww
  mov r8.w, l(0)
  add r7.xyzw, r7.xyzw, r8.xyzw
  mul r8.xyz, r7.yzxy, cb9[r0.z + 32].zxyz
  mad r8.xyz, cb9[r0.z + 32].yzxy, r7.zxyz, -r8.xyzx
  mad r7.xyz, cb9[r0.z + 32].wwww, r7.xyzx, r8.xyzx
  mad r7.xyz, r7.wwww, cb9[r0.z + 32].xyzx, r7.xyzx
  add r0.yzw, r7.xxyz, cb9[r0.z + 0].xxyz
  add r0.yzw, r0.yyzw, -cb12[7].xxyz
  dp3 r0.y, r0.yzwy, r0.yzwy
  sqrt r4.w, r0.y
  imad r0.x, l(6), vThreadID.x, r0.x
  mov r6.w, l(0)
  store_uav_typed u0.xyzw, r0.xxxx, r6.xyzw
  iadd r6.xyzw, r0.xxxx, l(1, 2, 3, 4)
  store_uav_typed u0.xyzw, r6.xxxx, r4.xyzw
  mov r1.xyz, l(0,0,0,0)
  store_uav_typed u0.xyzw, r6.yyyy, r1.xyzw
  store_uav_typed u0.xyzw, r6.zzzz, r2.xyzw
  store_uav_typed u0.xyzw, r6.wwww, r3.xyzw
  iadd r0.y, r0.x, l(5)
  mov r5.zw, l(0,0,0,0)
  store_uav_typed u0.xyzw, r0.yyyy, r5.xyzw
endif
ret
// Approximately 0 instruction slots used
