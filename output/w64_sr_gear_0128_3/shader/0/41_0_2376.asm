//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:08 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 8   xyzw        5     NONE   float
// SV_POSITION              0   xyzw        6      POS   float
// SV_isFrontFace           0   x           7    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[26], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb7[63], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps_sgv v7.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 14
add r0.xyz, -v4.xyzx, cb12[7].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v3.xyxx, t3.wxyz, s5
add r1.x, -r0.w, r0.z
lt r1.x, r1.x, l(0.00470588217)
movc r0.w, r1.x, r0.z, r0.w
deriv_rtx_coarse r1.xyz, r0.yzwy
deriv_rty_coarse r2.xyz, r0.yzwy
mul r1.xy, r1.yzyy, r1.xxxx
mul r1.zw, r2.yyyz, r2.xxxx
lt r2.xy, |r1.zwzz|, |r1.xyxx|
movc r1.xy, r2.xyxx, r1.xyxx, r1.zwzz
add r1.z, r0.y, l(-0.500000)
add r1.w, r0.z, r0.y
add r1.w, r1.w, l(-1.000000)
lt r1.zw, |r1.zzzw|, l(0.000000, 0.000000, 0.00470588217, 0.00588235306)
lt r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.x, r1.x, r1.w
add r1.w, -r0.z, l(1.000000)
movc r1.x, r1.x, r1.w, r0.y
add r1.w, r0.w, r1.x
add r1.w, r1.w, l(-1.000000)
lt r1.w, |r1.w|, l(0.00588235306)
and r1.y, r1.y, r1.w
add r1.w, -r0.w, l(1.000000)
movc r1.x, r1.y, r1.w, r1.x
movc r0.y, r1.z, r1.x, r0.y
ge r0.yw, r0.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000)
if_nz r0.w
  mad r1.xy, v3.zwzz, cb7[6].xyxx, cb7[6].zwzz
  mad r1.zw, v3.zzzw, cb7[7].xxxy, cb7[7].zzzw
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t8.wxyz, s1
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t9.xyzw, s1
  mad r1.xy, r1.xyxx, cb7[8].xxxx, cb7[8].yyyy
  add_sat r0.w, r1.z, cb7[8].z
  mov r1.z, l(4)
else
  ge r0.z, r0.z, l(0.500000)
  if_nz r0.z
    mad r3.xy, v3.zwzz, cb7[3].xyxx, cb7[3].zwzz
    mad r3.zw, v3.zzzw, cb7[4].xxxy, cb7[4].zzzw
    sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r3.xyxx, t6.wxyz, s1
    sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t7.xyzw, s1
    mad r1.xy, r3.xyxx, cb7[5].xxxx, cb7[5].yyyy
    add_sat r0.w, r3.z, cb7[5].z
    mov r1.z, l(2)
  else
    mad r3.xy, v3.zwzz, cb7[0].xyxx, cb7[0].zwzz
    mad r3.zw, v3.zzzw, cb7[1].xxxy, cb7[1].zzzw
    sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r3.xyxx, t4.wxyz, s1
    sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t5.xyzw, s1
    mad r1.xy, r3.xyxx, cb7[2].xxxx, cb7[2].yyyy
    add_sat r0.w, r3.z, cb7[2].z
    mov r1.z, l(0)
  endif
endif
iadd r0.z, r1.z, l(1)
movc r0.y, r0.y, r0.z, r1.z
imul null, r0.z, r0.y, l(9)
mov_sat r3.xyzw, cb7[r0.z + 11].xyzw
mov_sat r1.zw, cb7[r0.z + 12].yyyz
mov_sat r4.xyzw, cb7[r0.z + 17].xyzw
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r6.xy, v3.xyxx, t1.xyzw, s3
mad r6.xy, r6.xyxx, cb0[25].xxxx, cb0[25].yyyy
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, v3.xyxx, t2.xyzw, s4
ge r6.z, r7.w, l(0.156862751)
and r6.w, r6.z, l(0x3f800000)
add r8.xy, r7.wzww, l(-0.188235298, -0.156862751, 0.000000, 0.000000)
mul_sat r8.xy, r8.xyxx, l(1.231884, 1.18604648, 0.000000, 0.000000)
movc r7.z, v7.x, l(1.000000), l(-1.000000)
mad_sat r8.x, cb7[r0.z + 15].y, r8.x, cb7[r0.z + 15].x
mad_sat r8.x, cb7[r0.z + 15].w, r8.x, cb7[r0.z + 15].z
mad_sat r8.z, r7.y, cb0[5].x, cb0[5].y
mul_sat r8.z, r8.z, cb0[6].x
add r8.w, -r8.z, l(1.000000)
mul_sat r7.w, r7.w, l(7.968750)
mad r9.x, r7.w, cb0[7].x, cb0[7].y
mul r9.y, r8.w, r9.x
mad_sat r8.w, cb0[8].y, r7.y, cb0[8].x
movc r7.w, r6.z, l(0), r7.w
add r8.w, -r7.y, r8.w
mad r5.w, r7.w, r8.w, r7.y
add r7.y, l(128.500000), cb0[9].x
mul r7.y, r7.y, l(0.00390625000)
ge r7.w, l(0.050000), r9.y
movc r7.y, r7.w, r7.y, l(-1.000000)
ieq r0.y, r0.y, l(2)
and r0.y, r0.y, l(0x3f800000)
mad_sat r7.w, r8.z, cb0[24].x, cb0[24].y
add r0.y, r0.y, r7.w
min r0.y, r0.y, l(1.000000)
add r10.xyzw, -cb0[22].xyzw, cb0[23].xyzw
mad_sat r10.xyzw, r0.yyyy, r10.xyzw, cb0[22].xyzw
mul_sat r11.xyzw, r5.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000)
add_sat r12.xyzw, r5.xyzw, l(-0.250000, -0.250000, -0.250000, -0.250000)
mad r10.xyzw, r10.xyzw, r11.xyzw, r12.xyzw
mul_sat r5.xyz, r2.yzwy, l(4.000000, 4.000000, 4.000000, 0.000000)
add_sat r2.yzw, r2.yyzw, l(0.000000, -0.250000, -0.250000, -0.250000)
mad_sat r13.xyz, cb7[r0.z + 9].xyzx, r5.xyzx, r2.yzwy
add r13.xyz, r13.xyzx, -cb7[r0.z + 9].xyzx
mad r13.xyz, r3.xxxx, r13.xyzx, cb7[r0.z + 9].xyzx
mad_sat r0.y, cb7[r0.z + 13].y, r5.w, cb7[r0.z + 13].x
mad_sat r0.y, cb7[r0.z + 13].w, r0.y, cb7[r0.z + 13].z
mad_sat r2.x, r2.x, r11.w, r12.w
mad_sat r3.x, cb7[r0.z + 13].y, r2.x, cb7[r0.z + 13].x
mad_sat r3.x, cb7[r0.z + 13].w, r3.x, cb7[r0.z + 13].z
add r3.x, -r0.y, r3.x
mad r0.y, r3.z, r3.x, r0.y
mad_sat r13.xyz, r13.xyzx, r11.xyzx, r12.xyzx
mad r3.xz, r1.xxyx, r3.yyyy, r6.xxyx
add r0.w, r0.w, l(-1.000000)
mad r3.y, r3.y, r0.w, l(1.000000)
mad_sat r2.yzw, cb7[r0.z + 14].xxyz, r5.xxyz, r2.yyzw
add r2.yzw, r2.yyzw, -cb7[r0.z + 14].xxyz
mad r2.yzw, r4.xxxx, r2.yyzw, cb7[r0.z + 14].xxyz
mad_sat r2.yzw, r2.yyzw, r11.xxyz, r12.xxyz
mad_sat r4.x, cb7[r0.z + 16].y, r5.w, cb7[r0.z + 16].x
mad_sat r4.x, cb7[r0.z + 16].w, r4.x, cb7[r0.z + 16].z
mad_sat r2.x, cb7[r0.z + 16].y, r2.x, cb7[r0.z + 16].x
mad_sat r2.x, cb7[r0.z + 16].w, r2.x, cb7[r0.z + 16].z
add r2.x, -r4.x, r2.x
mad r2.x, r4.z, r2.x, r4.x
mad r1.xy, r1.xyxx, r4.yyyy, r6.xyxx
mad r0.w, r4.y, r0.w, l(1.000000)
add r4.xyz, -r2.yzwy, r13.xyzx
mad r2.yzw, r8.xxxx, r4.xxyz, r2.yyzw
add r3.xz, -r1.xxyx, r3.xxzx
mad r1.xy, r8.xxxx, r3.xzxx, r1.xyxx
add r0.y, r0.y, -r2.x
mad r0.y, r8.x, r0.y, r2.x
add r2.x, r3.w, -r4.w
mad r4.y, r8.x, r2.x, r4.w
add r2.x, -r0.w, r3.y
mad r0.w, r8.x, r2.x, r0.w
add r2.x, l(128.500000), cb7[r0.z + 12].x
mul r2.x, r2.x, l(0.00390625000)
ge r3.x, l(0.050000), r3.w
movc r2.x, r3.x, r2.x, l(-1.000000)
min r0.y, r0.w, r0.y
lt r0.w, l(0.000100), r1.z
mul r3.x, r1.z, l(-2.000000)
mad r1.z, r1.z, l(-2.000000), l(-0.200000)
mul r1.z, r0.y, r1.z
mad r1.z, r1.z, l(-5.002501), r3.x
min r1.z, r0.y, r1.z
movc r4.x, r0.w, r1.z, r0.y
add r2.yzw, -r10.xxyz, r2.yyzw
mad r2.yzw, r6.wwww, r2.yyzw, r10.xxyz
add r0.yw, -r6.xxxy, r1.xxxy
mad r1.xy, r6.wwww, r0.ywyy, r6.xyxx
mov r9.x, r10.w
add r0.yw, -r9.xxxy, r4.xxxy
mad r0.yw, r6.wwww, r0.yyyw, r9.xxxy
mul r1.w, r1.w, r6.w
movc o0.w, r6.z, r2.x, r7.y
ne r2.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb7[r0.z + 10].w
and r3.xyz, r2.xxxx, cb7[r0.z + 10].xyzx
mul r0.z, r8.y, cb0[21].x
mul r3.xyz, r3.xyzx, r0.zzzz
mul r3.xyz, r6.wwww, r3.xyzx
mul r4.xyz, r8.xxxx, r3.xyzx
mad r3.xyz, r3.xyzx, r8.xxxx, r2.yzwy
max r0.z, r3.y, r3.x
max r0.z, r3.z, r0.z
add_sat r0.z, r0.z, l(-1.000000)
add r0.z, -r0.z, l(1.000000)
mad r2.xyz, r2.yzwy, r0.zzzz, r4.xyzx
max r0.z, r2.y, r2.x
max r0.z, r2.z, r0.z
max r0.z, r0.z, l(1.000000)
div r2.xyz, r2.xyzx, r0.zzzz
max r0.z, r4.y, r4.x
max r0.z, r4.z, r0.z
dp2 r2.w, r1.xyxx, r1.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r1.z, r2.w
dp3 r2.w, r1.xyzx, r1.xyzx
rsq r2.w, r2.w
mul r1.xyz, r1.xyzx, r2.wwww
mul r3.xyz, r7.zzzz, v0.xyzx
mul r4.xyz, r1.yyyy, v2.xyzx
mad r4.xyz, v1.xyzx, r1.xxxx, r4.xyzx
mad r1.xyz, r3.xyzx, r1.zzzz, r4.xyzx
dp3 r2.w, r1.xyzx, r1.xyzx
rsq r2.w, r2.w
mul r1.xyz, r1.xyzx, r2.wwww
mov_sat r2.w, cb0[19].x
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
dp3 r3.x, cb0[12].xyzx, r3.xyzx
add r3.y, -cb0[10].x, cb0[11].x
mad_sat r3.x, r3.x, r3.y, cb0[10].x
add r3.y, v4.z, -cb0[13].z
mul r3.y, r3.y, cb0[14].x
max r3.y, r3.y, l(0.000000)
log r3.y, r3.y
mul r3.y, r3.y, cb0[15].x
exp r3.y, r3.y
mul_sat r3.y, r3.y, cb0[16].x
mul r3.x, r3.y, r3.x
mad_sat r0.x, r0.x, cb0[17].x, cb0[17].y
mul r0.x, r0.x, r3.x
dp3 r3.x, r2.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
max r3.x, r3.x, l(0.000100)
log r3.x, r3.x
mul r3.x, r3.x, -cb0[18].x
exp r3.x, r3.x
mul r0.x, r0.x, r3.x
add o2.w, r2.w, v0.w
mad r0.x, r0.x, cb0[20].x, r0.z
mad r0.y, r0.y, l(0.125000), l(0.375000)
mad_sat o1.xyz, r1.xyzx, r0.yyyy, l(0.500000, 0.500000, 0.500000, 0.000000)
add r0.x, r0.x, l(0.00781250000)
log r0.x, r0.x
mad_sat r0.x, r0.x, l(0.0769230798), l(0.538461566)
mov_sat r7.x, r7.x
add r0.x, r0.x, r7.x
mul o2.y, r0.x, l(0.500000)
mul o2.z, r1.w, l(0.800000)
mov o0.xyz, r2.xyzx
mov o1.w, l(0)
mov o2.x, r0.w
ret
// Approximately 0 instruction slots used
