//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:55 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[155], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 7
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[89].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[99].x
  ftou r0.y, cb0[90].x
  imad r0.y, l(3), vThreadID.x, r0.y
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
  iadd r0.yz, r0.yyyy, l(0, 1, 2, 0)
  ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r0.zzzz, t0.xyzw
  div r0.y, cb0[22].x, r3.z
  add r4.w, r0.y, r1.w
  add r0.yzw, r2.xxyz, -cb0[4].xxyz
  mad r0.yzw, r0.yyzw, l(0.000000, 1.66666663, 1.66666663, 1.66666663), l(0.000000, 0.500000, 0.500000, 0.500000)
  sample_l_indexable(texture3d)(float,float,float,float) r0.yzw, r0.yzwy, t1.wxyz, s1, l(0.000000)
  mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  mul r0.yzw, r0.yyzw, cb0[22].xxxx
  mad r0.yzw, r0.yyzw, l(0.000000, 50.000000, 50.000000, 50.000000), r1.xxyz
  mad r5.xyz, r2.xyzx, l(0.333333343, 0.333333343, 0.333333343, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r5.xyz, r5.xyzx, t1.xyzw, s1, l(0.000000)
  mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mul r5.xyz, r5.xyzx, cb0[22].xxxx
  mad r1.xyz, r5.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r1.xyzx
  add r5.xy, -r2.yxyy, cb0[142].yxyy
  mul r5.xy, r5.xyxx, cb0[142].wzww
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyxx, t2.xyzw, s2, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t3.xzwy, s2, l(0.000000)
  max r1.w, r5.z, l(0.000001)
  div r6.xyzw, r6.xyzw, r1.wwww
  div r1.w, r5.y, r1.w
  add r5.yzw, -r2.xxyz, r6.xxyz
  dp3 r6.x, r5.yzwy, r5.yzwy
  sqrt r6.x, r6.x
  max r6.xy, r6.xwxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  div r6.y, r6.x, r6.y
  min r6.y, r6.y, l(1.000000)
  add r6.y, -r6.y, l(1.000000)
  max r1.w, r1.w, l(0.000001)
  log r6.y, r6.y
  mul r1.w, r1.w, r6.y
  exp r1.w, r1.w
  mul r1.w, r1.w, r5.x
  div r5.xyz, r5.yzwy, r6.xxxx
  mul r5.xyz, r1.wwww, r5.xyzx
  mul r5.xyz, r5.xyzx, cb0[22].xxxx
  mad r1.xyz, r5.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.xyzx
  add r1.xyz, -r0.yzwy, r1.xyzx
  mad r0.yzw, r1.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r0.yyzw
  add_sat r1.x, cb0[154].x, cb0[154].x
  add r1.x, -r1.x, l(1.000000)
  mul r4.xyz, r0.yzwy, r1.xxxx
  mad r2.xyz, r4.xyzx, cb0[136].xxxx, r2.xyzx
  mul r0.y, r2.w, cb0[154].x
  mad r3.x, r0.y, l(6.28318548), r3.x
  imad r0.x, l(3), vThreadID.x, r0.x
  store_uav_typed u0.xyzw, r0.xxxx, r4.xyzw
  iadd r0.yz, r0.xxxx, l(0, 1, 2, 0)
  store_uav_typed u0.xyzw, r0.yyyy, r2.xyzw
  store_uav_typed u0.xyzw, r0.zzzz, r3.xyzw
endif
ret
// Approximately 0 instruction slots used
