//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:52 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 3      w        1     NONE   float      w
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// SV_POSITION              0   xyzw        3      POS   float   xy
// SV_isFrontFace           0   x           4    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[112], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t23
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps_siv linear noperspective v3.xy, position
dcl_output o0.xyzw
dcl_temps 4
add r0.x, v0.x, cb0[104].x
mov r0.y, v0.y
mad r0.zw, r0.xxxy, cb0[3].xxxy, cb0[3].zzzw
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t0.zwxy, s1
add r0.zw, r0.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mad r0.xy, r0.zwzz, cb0[97].xxxx, r0.xyxx
mad r0.zw, r0.xxxy, cb0[1].xxxy, cb0[1].zzzw
mad r0.xy, r0.xyxx, cb0[0].xyxx, cb0[0].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.zwzz, t1.yxzw, s1
add r0.x, r0.x, r0.y
mad_sat r0.z, r0.x, l(1.200000), l(-0.200000)
add r1.x, v0.x, cb0[102].x
add r1.z, v0.x, cb0[103].x
mov r1.yw, v0.yyyy
mad r2.xyzw, r1.xyzw, cb0[3].xyxy, cb0[3].zwzw
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t0.zwxy, s1
add r2.xyzw, r2.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
mad r1.zw, r2.zzzw, cb0[97].xxxx, r1.zzzw
mad r1.xy, r2.xyxx, cb0[97].xxxx, r1.xyxx
mad r2.xy, r1.xyxx, cb0[1].xyxx, cb0[1].zwzz
mad r1.xy, r1.xyxx, cb0[0].xyxx, cb0[0].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t1.yzwx, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xyzw, s1
add r0.w, r0.w, r1.x
mad_sat r0.x, r0.w, l(1.200000), l(-0.200000)
mad r1.xy, r1.zwzz, cb0[1].xyxx, cb0[1].zwzz
mad r1.zw, r1.zzzw, cb0[0].xxxy, cb0[0].zzzw
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t1.yzwx, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t1.xyzw, s1
add r0.w, r0.w, r1.x
mad_sat r0.y, r0.w, l(1.200000), l(-0.200000)
mad r1.xy, v0.xyxx, cb0[3].xyxx, cb0[3].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t0.xyzw, s1
add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r2.xy, v3.xyxx, cb12[12].zwzz
mad r1.xy, r1.xyxx, cb0[97].xxxx, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t23.xyzw, s2
add r0.xyz, r0.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, l(-2.511886521E-007, -2.511886521E-007, -2.511886521E-007, 0.000000)
mul r0.xyz, r0.xyzx, l(1.00000024, 1.00000024, 1.00000024, 0.000000)
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyz, r0.xyzx, cb13[1].wwww
mul r0.xyz, r0.xyzx, cb13[1].xxxx
mul r0.xyz, r0.xyzx, cb8[7].xyzx
dp3 r0.w, -v2.xyzx, -v2.xyzx
sqrt r0.w, r0.w
mul r1.x, r0.w, l(0.015625)
mad_sat r0.w, r0.w, cb0[111].x, cb0[111].y
min r1.x, r1.x, l(1.000000)
sqrt r2.z, r1.x
sample_l_indexable(texture3d)(float,float,float,float) r1.x, r2.xyzx, t21.xyzw, s4, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyxx, t20.xyzw, s4, l(0.000000)
add r3.xyzw, r3.xyzw, l(-0.000000, -0.000000, -0.000000, -1.000000)
mad r1.xyzw, r1.xxxx, r3.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
mad r0.xyz, r0.xyzx, r1.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r2.xyxx, t11.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t13.xyzw, s3
add r1.xyzw, r1.xyzw, -r2.xyzw
mad r1.xyzw, r0.wwww, r1.xyzw, r2.xyzw
mul r1.xyz, r1.xyzx, cb8[5].xyzx
mad r1.xyz, r1.wwww, cb8[6].xyzx, r1.xyzx
mad r0.xyz, r1.xyzx, cb13[1].xxxx, r0.xyzx
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v1.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
mul r0.w, r0.w, r0.w
mad_sat r0.w, r0.w, l(1.182033), l(-0.182033)
log r0.w, r0.w
mul r0.w, r0.w, cb0[106].x
exp r0.w, r0.w
add r1.x, v0.y, l(-0.500000)
mad r1.x, |r1.x|, l(-2.727273), l(1.250000)
mul r0.w, r0.w, r1.x
mul_sat r0.w, r0.w, v1.w
mul_sat r0.w, r0.w, v0.z
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, r0.w
ret
// Approximately 0 instruction slots used
