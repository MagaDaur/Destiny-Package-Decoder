//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[99], immediateIndexed
dcl_constantbuffer cb13[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 13
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[88].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[98].x
  ftou r0.y, cb0[89].x
  imad r0.y, l(5), vThreadID.x, r0.y
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
  iadd r2.xyzw, r0.yyyy, l(1, 2, 3, 4)
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r2.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r0.yz, r2.yyyy, t0.zxyw
  ld_indexable(buffer)(float,float,float,float) r4.yz, r2.zzzz, t0.xzwy
  ld_indexable(buffer)(float,float,float,float) r2.xyz, r2.wwww, t0.yzxw
  mov_sat r5.z, r4.z
  add r0.w, r4.y, cb13[0].y
  mul r6.xy, r0.wwww, l(0.070000, 0.050000, 0.000000, 0.000000)
  frc r6.xz, r6.xxyx
  add r5.w, -r6.x, l(1.000000)
  mov_sat r6.xw, r2.xxxz
  mov_sat r0.w, r1.w
  mad r7.xyzw, r0.wwww, l(1.492964, -4.526588, -2.104881, 1.566530), l(1.327149, 7.227020, 1.776794, -5.966465)
  mad r8.xyzw, r0.wwww, l(0.000000, -1.863632, 1.857109, 7.242310), l(0.000000, 0.191317, -0.610276, -1.842294)
  mad r9.xyz, r0.wwww, l(0.014967, 0.153933, -0.294096, 0.000000), l(0.985033, -0.970156, 0.192871, 0.000000)
  mul r9.w, r0.w, r0.w
  mad r7.xyzw, r7.xyzw, r9.wwww, r8.xyzw
  ge r8.xyzw, r0.wwww, l(0.000000, 0.283333, 0.527778, 0.755556)
  and r8.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  ge r10.xy, r0.wwww, l(0.988889, 1.000000, 0.000000, 0.000000)
  and r10.yz, r10.xxyx, l(0, 0x3f800000, 0x3f800000, 0)
  add r8.xyz, r8.yzwy, r8.xyzx
  add r8.xyz, r8.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r8.xyz, r8.xyzx
  mul r7.xyz, r7.xyzx, r8.xyzx
  add r8.xy, r10.zzzz, r10.yzyy
  add r8.xy, r8.xyxx, l(0.000001, 0.000001, 0.000000, 0.000000)
  mul r8.xy, r8.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  frc r8.xy, r8.xyxx
  mul r8.x, r9.x, r8.x
  mov r8.z, l(2.000000)
  mul r7.xy, r7.xyxx, r8.zzzz
  mul r8.x, r8.x, l(2.000000)
  add r7.x, r7.y, r7.x
  mad r7.x, r8.z, r7.z, r7.x
  mad r7.x, r7.w, r8.w, r7.x
  mad r7.y, r8.y, l(4.000000), r8.x
  mad r7.y, r10.z, l(1.000000), r7.y
  movc_sat r7.x, r10.x, r7.y, r7.x
  mad r7.x, r7.x, l(0.200000018), l(0.100000)
  mad r8.xyzw, r0.wwww, l(0.000000, 633.103271, 15.969116, 1.450863), l(0.000000, -99.970825, -10.473923, -2.593361)
  mad r10.xyzw, r0.wwww, l(16.581734, 7.994197, 3.628916, 2.196268), l(0.000000, 0.050686, 0.122795, 0.210248)
  mad r11.xy, r0.wwww, l(1.509904, 0.496670, 0.000000, 0.000000), l(0.308347, 0.604618, 0.000000, 0.000000)
  mad r8.xyzw, r8.xyzw, r9.wwww, r10.xyzw
  mad r9.xy, r9.yzyy, r9.wwww, r11.xyxx
  ge r10.xyzw, r0.wwww, l(0.000000, 0.005556, 0.055556, 0.200000)
  and r10.xyzw, r10.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  ge r11.xyz, r0.wwww, l(0.427778, 0.866667, 1.000000, 0.000000)
  and r12.xyw, r11.xyxz, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
  add r10.xyz, r10.yzwy, r10.xyzx
  add r10.xyz, r10.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r10.xyz, r10.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r10.xyz, r10.xyzx
  mul r8.xyz, r8.xyzx, r10.xyzx
  add r10.xyz, r12.ywwy, r12.xywx
  add r10.xyz, r10.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r10.xyz, r10.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r10.xyz, r10.xyzx
  mul r9.xy, r9.xyxx, r10.xyxx
  mov r9.z, l(2.000000)
  mul r8.xy, r8.xyxx, r9.zzzz
  mul r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
  add r8.x, r8.y, r8.x
  mad r8.x, r9.z, r8.z, r8.x
  mad r8.x, r8.w, r10.w, r8.x
  add r8.y, r9.y, r9.x
  mad r8.y, r10.z, l(2.000000), r8.y
  mad r8.y, r12.w, l(1.000000), r8.y
  movc_sat r8.x, r11.x, r8.y, r8.x
  mul r8.x, r8.x, l(0.350000)
  mad r8.yz, r6.wwxw, l(0.000000, 0.750000, 0.750000, 0.000000), l(0.000000, 0.500000, 0.250000, 0.000000)
  mul r7.w, r8.y, r8.x
  mad r10.xyzw, r0.wwww, l(0.000000, 0.000000, -6.601662, -10.447784), l(0.000000, 0.000000, 6.193863, 12.792114)
  mad r11.xyzw, r0.wwww, l(9.090909, 0.000000, -1.242615, -5.031494), l(0.000000, 1.000000, 0.898066, 1.627167)
  mad r8.xyw, r0.wwww, l(58.650452, -11.789246, 0.000000, 9.853516), l(-140.817993, 45.040039, 0.000000, -20.332153)
  mad r9.xyz, r0.wwww, l(108.689636, -54.681030, 11.104004, 0.000000), l(-26.411072, 21.430237, -0.625183, 0.000000)
  mad r10.xyzw, r10.xyzw, r9.wwww, r11.xyzw
  mad r8.xyw, r8.xyxw, r9.wwww, r9.xyxz
  ge r9.xyzw, r0.wwww, l(0.000000, 0.110000, 0.500000, 0.613889)
  and r9.xyzw, r9.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  ge r11.xyzw, r0.wwww, l(0.725000, 0.869444, 0.969444, 1.000000)
  and r12.xyzw, r11.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r9.xyz, r9.yzwy, r9.xyzx
  add r9.xyz, r9.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r9.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r9.xyz, r9.xyzx
  mul r9.xyz, r10.xyzx, r9.xyzx
  add r10.xyz, r12.yzwy, r12.xyzx
  add r10.xyz, r10.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r10.xyz, r10.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r10.xyz, r10.xyzx
  mul r8.xyw, r8.xyxw, r10.xyxz
  mov r0.w, l(2.000000)
  mul r9.xy, r9.xyxx, r0.wwww
  add r8.xy, r8.xyxx, r8.xyxx
  add r9.x, r9.y, r9.x
  mad r0.w, r0.w, r9.z, r9.x
  mad r0.w, r10.w, r9.w, r0.w
  add r8.x, r8.y, r8.x
  mad r8.x, r8.w, l(2.000000), r8.x
  movc_sat r0.w, r11.x, r8.x, r0.w
  mul r0.w, r0.w, l(0.250000)
  mul r0.w, r8.z, r0.w
  mov_sat r8.x, cb0[4].x
  add r8.x, r8.x, l(1.000000)
  mul r4.x, r0.w, r8.x
  imad r0.x, l(10), vThreadID.x, r0.x
  mov r5.xy, l(2.000000,1.000000,0,0)
  store_uav_typed u0.xyzw, r0.xxxx, r5.xyzw
  iadd r8.xyzw, r0.xxxx, l(1, 2, 3, 4)
  mov r6.xy, l(3.000000,1.000000,0,0)
  store_uav_typed u0.xyzw, r8.xxxx, r6.xywz
  store_uav_typed u0.xyzw, r8.yyyy, r5.xyzw
  store_uav_typed u0.xyzw, r8.zzzz, r6.xywz
  store_uav_typed u0.xyzw, r8.wwww, r1.xyzw
  iadd r1.xyzw, r0.xxxx, l(5, 6, 7, 8)
  store_uav_typed u0.xyzw, r1.xxxx, r3.xyzw
  mov r6.xy, r0.yzyy
  mov r6.z, r5.z
  store_uav_typed u0.xyzw, r1.yyyy, r6.xyzw
  mov r7.yz, r6.zzwz
  store_uav_typed u0.xyzw, r1.zzzz, r7.xyzw
  mov r4.w, r2.z
  store_uav_typed u0.xyzw, r1.wwww, r4.xyzw
  iadd r0.y, r0.x, l(9)
  mov r2.zw, l(0,0,0,0)
  store_uav_typed u0.xyzw, r0.yyyy, r2.xyzw
endif
ret
// Approximately 0 instruction slots used
