//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:11 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float
// TANGENT                  0   xyzw        2     NONE   float
// TEXCOORD                 0   xy          3     NONE   float   xy
// SV_VERTEXID              0   x           4   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy
// TEXCOORD                 1   xyz         1     NONE   float
// SV_POSITION              0   xyzw        2      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[16], immediateIndexed
dcl_constantbuffer cb1[24], dynamicIndexed
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input v0.xyzw
dcl_input v3.xy
dcl_input_sgv v4.x, vertex_id
dcl_output o0.xy
dcl_output_siv o2.xyzw, position
dcl_temps 7
mul r0.x, v0.w, l(32767.099609)
ftoi r0.x, r0.x
imax r0.y, -r0.x, r0.x
ige r0.z, r0.y, l(2048)
ilt r0.w, r0.x, l(0)
ishl r1.x, v4.x, l(1)
movc r1.x, r0.w, r1.x, v4.x
ishl r0.y, r0.y, l(3)
iadd r0.y, r0.y, l(0xffffc000)
bfi r0.y, l(3), l(0), r1.x, r0.y
ld_indexable(buffer)(uint,uint,uint,uint) r1.xyzw, r0.yyyy, t1.xyzw
movc r0.x, r0.z, r1.x, r0.x
ishl r1.x, r0.x, l(1)
bfi r0.x, l(31), l(1), r0.x, l(1)
if_nz r0.z
  utof r1.zw, r1.zzzw
  mul r0.z, r1.z, l(0.00392156886)
  mov r2.x, cb1[r1.x + 8].w
  mov r2.y, cb1[r0.x + 8].w
  ishl r1.z, r1.y, l(1)
  bfi r1.y, l(31), l(1), r1.y, l(1)
  dp4 r2.z, cb1[r1.z + 8].xyzw, cb1[r1.x + 8].xyzw
  ge r2.z, r2.z, l(0.000000)
  movc r2.z, r2.z, l(0.00392156886), l(-0.00392156886)
  mul r1.w, r1.w, r2.z
  mul r3.xyz, r1.wwww, cb1[r1.z + 8].xyzx
  mul r4.xyz, r1.wwww, cb1[r1.y + 8].xyzx
  mul r5.x, r1.w, cb1[r1.z + 8].w
  mul r5.y, r1.w, cb1[r1.y + 8].w
  mad r3.xyz, r0.zzzz, cb1[r1.x + 8].xyzx, r3.xyzx
  mad r1.yzw, r0.zzzz, cb1[r0.x + 8].xxyz, r4.xxyz
  mad r2.xy, r0.zzzz, r2.yxyy, r5.yxyy
  if_nz r0.w
    iadd r0.y, r0.y, l(1)
    ld_indexable(buffer)(uint,uint,uint,uint) r4.xyzw, r0.yyyy, t1.xyzw
    ishl r0.yz, r4.xxyx, l(0, 1, 1, 0)
    bfi r2.zw, l(0, 0, 31, 31), l(0, 0, 1, 1), r4.xxxy, l(0, 0, 1, 1)
    dp4 r0.w, cb1[r0.y + 8].xyzw, cb1[r1.x + 8].xyzw
    utof r4.xy, r4.zwzz
    ge r0.w, r0.w, l(0.000000)
    movc r0.w, r0.w, l(0.00392156886), l(-0.00392156886)
    mul r0.w, r0.w, r4.x
    mul r5.x, r0.w, cb1[r0.y + 8].w
    mul r5.y, r0.w, cb1[r2.z + 8].w
    mad r4.xzw, r0.wwww, cb1[r0.y + 8].xxyz, r3.xxyz
    mad r6.xyz, r0.wwww, cb1[r2.z + 8].xyzx, r1.yzwy
    add r0.yw, r2.yyyx, r5.xxxy
    dp4 r2.z, cb1[r0.z + 8].xyzw, cb1[r1.x + 8].xyzw
    ge r2.z, r2.z, l(0.000000)
    movc r2.z, r2.z, l(0.00392156886), l(-0.00392156886)
    mul r2.z, r2.z, r4.y
    mul r5.x, r2.z, cb1[r0.z + 8].w
    mul r5.y, r2.z, cb1[r2.w + 8].w
    mad r3.xyz, r2.zzzz, cb1[r0.z + 8].xyzx, r4.xzwx
    mad r1.yzw, r2.zzzz, cb1[r2.w + 8].xxyz, r6.xxyz
    add r2.xy, r0.wyww, r5.yxyy
    mov r3.w, r2.y
  else
    mov r3.w, r2.y
  endif
  dp4 r0.y, r3.xyzw, r3.xyzw
  sqrt r0.y, r0.y
  div r4.xyz, r3.xyzx, r0.yyyy
  div r1.yzw, r1.yyzw, r0.yyyy
  mov r2.y, r3.w
  div r0.yz, r2.xxyx, r0.yyyy
  mov r4.w, r0.z
else
  mov r1.yzw, cb1[r0.x + 8].xxyz
  mov r4.xyzw, cb1[r1.x + 8].xyzw
  mov r0.y, cb1[r0.x + 8].w
endif
add r2.xyzw, r4.xyzw, r4.xyzw
mad r0.xzw, v0.xxyz, cb1[5].wwww, cb1[5].xxyz
mul r3.xyz, r0.xzwx, r4.yzxy
mad r3.xyz, r4.xyzx, r0.zwxz, -r3.xyzx
mad r3.xyz, r4.wwww, r0.wxzw, r3.xyzx
mad r0.xzw, -r2.zzxy, r3.zzxy, r0.xxzw
mad r0.xzw, r2.yyzx, r3.xxyz, r0.xxzw
mad r0.xzw, -r2.zzxy, r1.zzwy, r0.xxzw
mad r0.xzw, r2.yyzx, r1.wwyz, r0.xxzw
mad r0.xzw, r2.wwww, r1.yyzw, r0.xxzw
mad r0.xyz, -r0.yyyy, r2.xyzx, r0.xzwx
add r0.xyz, r0.xyzx, cb12[15].xyzx
mul r1.xyzw, r0.yyyy, cb12[1].xyzw
mad r1.xyzw, cb12[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb12[2].xyzw, r0.zzzz, r1.xyzw
add r0.xyzw, r0.xyzw, cb12[14].xyzw
mad o0.xy, v3.xyxx, cb1[6].xyxx, cb1[6].zwzz
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, l(0, 0, 0, 0), t2.xyzw
div r0.xy, r0.xyxx, r0.wwww
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), r1.zwzz
mad r0.x, r0.x, r1.z, r1.x
add r2.x, r0.x, l(-1.000000)
add r0.x, r1.y, l(-1.000000)
mad r2.y, r0.y, r1.w, -r0.x
mul o2.xy, r0.wwww, r2.xyxx
mov o2.zw, r0.zzzw
ret
// Approximately 0 instruction slots used
