//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float    y w
// TEXCOORD                 4   xyzw        4     NONE   float   xy
// POSITION                 0   xyz         5     NONE   float   xyz
// POSITION                 1   xy          6     NONE   float   xy
// POSITION                 2   xyz         7     NONE   float   xyz
// SV_VERTEXID              0   x           8   VERTID    uint
// SV_InstanceID            0   x           9   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// SV_POSITION              0   xyzw        5      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[114], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyzw
dcl_input v3.yw
dcl_input v4.xy
dcl_input v5.xyz
dcl_input v6.xy
dcl_input v7.xyz
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output_siv o5.xyzw, position
dcl_temps 12
mov r0.z, cb1[0].y
mov r0.x, cb1[1].y
mov r0.y, cb1[2].y
mul r1.xyz, v2.yyyy, cb1[1].xyzx
mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
add r1.xyz, r1.xyzx, cb1[3].xyzx
add r1.xyz, -r1.xyzx, cb12[7].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r2.y, r1.xyzx, cb1[0].xyzx
dp3 r2.z, r1.xyzx, cb1[1].xyzx
dp3 r2.x, r1.xyzx, cb1[2].xyzx
mov r1.y, cb1[1].z
mov r1.z, cb1[2].z
mov r1.x, cb1[0].z
mul r3.xyz, r2.xyzx, r1.xyzx
mad r1.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r1.w, r0.w
lt r0.w, l(0.001000), r0.w
mul r1.xyz, r1.wwww, r1.xyzx
movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mul r1.xyz, r0.xyzx, r2.xyzx
mad r1.xyz, r2.zxyz, r0.yzxy, -r1.xyzx
mov r3.x, r2.y
mov r4.x, r2.z
mov r3.z, r1.x
mov r3.y, r0.z
mov r5.w, l(0)
mad r6.xyz, v5.xyzx, cb1[4].xyzx, cb1[5].xyzx
dp3 r0.z, cb0[110].xyzx, cb0[110].xyzx
rsq r0.z, r0.z
mul r7.xyz, r0.zzzz, cb0[110].xyzx
mul r0.zw, v3.wwwy, l(0.000000, 0.000000, 3.141000, 0.500000)
sincos r1.x, r8.x, r0.z
sincos r9.x, r10.x, r0.w
mul r7.xyz, r7.xyzx, r1.xxxx
mul r8.yzw, r6.zzxy, -r7.yyzx
mad r11.xyz, r6.yzxy, -r7.zxyz, -r8.yzwy
mul r5.xyz, r6.xyzx, r8.xxxx
dp3 r0.z, r6.xyzx, -r7.xyzx
mov r11.w, -r0.z
add r5.xyzw, r5.xyzw, r11.xyzw
mul r6.xyz, r5.yzxy, r7.zxyz
mad r6.xyz, r7.yzxy, r5.zxyz, -r6.xyzx
mad r5.xyz, r8.xxxx, r5.xyzx, r6.xyzx
mad r5.xyz, r5.wwww, r7.xyzx, r5.xyzx
mul r5.xyz, r5.xyzx, v4.xxxx
dp3 r6.x, r5.xyzx, r3.xyzx
mov r4.y, r0.x
mov r2.y, r0.y
mov r4.z, r1.y
mov r2.z, r1.z
dp3 r6.y, r5.xyzx, r4.xyzx
dp3 r6.z, r5.xyzx, r2.xyzx
mul r0.xyz, r6.xyzx, r10.xxxx
mov r0.w, l(0)
mul r1.xyz, r9.xxxx, l(1.000000, 0.000000, 0.000000, 0.000000)
mul r5.xyzw, -r1.zxzx, r6.yzxx
mad r6.xyz, -r6.zxyz, -r1.zzxz, r5.xyzx
mov r6.w, -r5.w
add r0.xyzw, r0.xyzw, r6.xyzw
mul r5.xyz, r0.yzxy, r1.zxzz
mad r5.xyz, r1.zzxz, r0.zxyz, -r5.xyzx
mad r0.xyz, r10.xxxx, r0.xyzx, r5.xyzx
mad r0.xyz, r0.wwww, r1.xzzx, r0.xyzx
add r0.xyz, r0.xyzx, v2.xyzx
mul r5.xyz, r0.yyyy, cb1[1].xyzx
mad r0.xyw, cb1[0].xyxz, r0.xxxx, r5.xyxz
mad r0.xyz, cb1[2].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb1[3].xyzx
mul r5.xyzw, r0.yyyy, cb12[1].xyzw
mad r5.xyzw, cb12[0].xyzw, r0.xxxx, r5.xyzw
mad r5.xyzw, cb12[2].xyzw, r0.zzzz, r5.xyzw
add o2.xyz, -r0.xyzx, cb12[7].xyzx
add r0.xyzw, r5.xyzw, cb12[3].xyzw
mov o0.w, r0.w
mul r1.w, cb0[12].y, cb0[113].x
lt r2.w, l(0.999000), v2.w
movc r1.w, r2.w, l(0), r1.w
mov o0.z, r1.w
lt r1.w, r1.w, l(0.000001)
mad o0.xy, v6.xyxx, cb1[6].xyxx, cb1[6].zwzz
mov r5.xyz, v7.xyzx
mov r5.w, l(0)
mul r6.xyz, -r7.yzxy, v7.zxyz
mad r6.xyz, v7.yzxy, -r7.zxyz, -r6.xyzx
dp3 r2.w, v7.xyzx, -r7.xyzx
mov r6.w, -r2.w
mad r5.xyzw, r8.xxxx, r5.xyzw, r6.xyzw
mul r6.xyz, r5.yzxy, r7.zxyz
mad r6.xyz, r7.yzxy, r5.zxyz, -r6.xyzx
mad r5.xyz, r8.xxxx, r5.xyzx, r6.xyzx
mad r5.xyz, r5.wwww, r7.xyzx, r5.xyzx
dp3 r3.x, r5.xyzx, r3.xyzx
dp3 r3.y, r5.xyzx, r4.xyzx
dp3 r3.z, r5.xyzx, r2.xyzx
mul r2.xyz, r3.xyzx, r10.xxxx
mul r4.xyzw, -r1.zxzx, r3.yzxx
mad r3.xyz, -r3.zxyz, -r1.zzxz, r4.xyzx
mov r3.w, -r4.w
mov r2.w, l(0)
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyz, r1.zxzz, r2.yzxy
mad r3.xyz, r1.zzxz, r2.zxyz, -r3.xyzx
mad r2.xyz, r10.xxxx, r2.xyzx, r3.xyzx
mad r1.xyz, r2.wwww, r1.xyzx, r2.xyzx
mul r2.xyz, r1.yyyy, cb1[1].xyzx
mad r2.xyz, cb1[0].xyzx, r1.xxxx, r2.xyzx
mad o1.xyz, cb1[2].xyzx, r1.zzzz, r2.xyzx
mov o1.w, v4.y
mov o3.xyzw, v0.xyzw
mov o4.x, v3.w
mov o4.yz, l(0,0,0,0)
mov o4.w, v4.x
lt r1.x, cb0[13].y, l(0.000001)
or r1.x, r1.x, r1.w
movc o5.xyzw, r1.xxxx, l(10000.000000,10000.000000,-10000.000000,1.000000), r0.xyzw
ret
// Approximately 0 instruction slots used
