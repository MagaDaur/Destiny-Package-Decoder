//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 2   xyz         2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float
// SV_POSITION              0   xyzw        5      POS   float
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[109], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v3.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 2
add r0.xy, v0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r0.z, -|r0.y|, |r0.x|
add r0.w, |r0.y|, |r0.x|
div r0.z, r0.z, r0.w
add r0.z, r0.z, l(-1.000000)
lt r1.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyxx
lt r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd r1.xy, -r1.xyxx, r1.zwzz
itof r1.xy, r1.xyxx
mad r0.z, r0.z, r1.y, l(2.000000)
mul r0.z, r0.z, r1.x
mul r0.z, r0.z, l(0.125000)
frc r1.y, r0.z
dp2 r0.z, |r0.xyxx|, |r0.xyxx|
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
mad r0.x, r0.x, l(-2.500000), l(1.000000)
max r0.x, r0.x, l(0.000000)
mul r0.x, r0.x, r0.x
log r0.y, r0.z
mul r0.y, r0.y, cb0[104].x
exp r1.x, r0.y
mad r0.yz, r1.xxyx, v3.xxyx, v3.zzwz
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t1.yxzw, s2
add_sat r0.y, r0.y, cb0[13].x
mul_sat r0.y, r0.y, cb0[13].y
mul_sat r0.y, r0.y, v0.z
add r0.y, r0.y, -cb0[108].x
lt r0.y, r0.y, l(0.000000)
discard_nz r0.y
mov r1.x, l(1.000000)
mov r1.yz, cb0[0].xxxx
mul r0.xyz, r0.xxxx, r1.xyzx
mov r1.x, cb0[0].x
mov r1.yz, v1.wwww
mul r0.xyz, r0.xyzx, r1.xyzx
mov r1.x, v1.w
mov r1.yz, l(0,0.404822,0,0)
mul r0.xyz, r0.xyzx, r1.xyzx
max r0.w, r0.y, l(0.000000)
max r0.w, r0.w, r0.x
max r1.x, r0.w, l(1.000000)
add r0.w, r0.w, l(0.00781250000)
log r0.w, r0.w
mad r0.w, r0.w, l(0.0769230798), l(0.538461566)
min r0.w, r0.w, l(1.000000)
add r0.w, r0.w, l(1.000000)
mul o2.y, r0.w, l(0.500000)
div o0.xyz, r0.xyzx, r1.xxxx
mov o0.w, l(0)
dp3 r0.x, v1.xyzx, v1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v1.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t0.xzwy, s1
mov_sat r1.x, r0.w
mov o2.x, r0.w
mad r0.w, r1.x, l(0.125000), l(0.375000)
mad_sat o1.xyz, r0.xyzx, r0.wwww, l(0.500000, 0.500000, 0.500000, 0.000000)
mov o1.w, l(0)
mov o2.zw, l(0,0,0,1.000000)
ret
// Approximately 0 instruction slots used
