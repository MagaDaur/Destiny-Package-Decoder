//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:06 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float      w
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float
// POSITION                 0   xyz         3     NONE   float   xyz
// POSITION                 1   xy          4     NONE   float   xy
// POSITION                 2   xyz         5     NONE   float   xyz
// SV_VERTEXID              0   x           6   VERTID    uint
// SV_InstanceID            0   x           7   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// SV_POSITION              0   xyzw        3      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[107], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_input v0.w
dcl_input v1.xyzw
dcl_input v3.xyz
dcl_input v4.xy
dcl_input v5.xyz
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output_siv o3.xyzw, position
dcl_temps 7
mul r0.xyz, v1.yyyy, cb1[1].xyzx
mad r0.xyz, cb1[0].xyzx, v1.xxxx, r0.xyzx
mad r0.xyz, cb1[2].xyzx, v1.zzzz, r0.xyzx
add r0.xyz, r0.xyzx, cb1[3].xyzx
add r0.xyz, r0.xyzx, -cb12[7].xyzx
dp3 r0.x, -cb12[6].xyzx, r0.xyzx
mul r0.x, r0.x, l(0.000454545458)
max r0.x, r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.x, r0.x, l(1.250000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mul r0.y, r0.y, cb0[13].w
mul r0.y, r0.y, cb0[106].x
lt r0.z, l(0.999000), v0.w
movc r0.y, r0.z, l(0), r0.y
mov o0.z, r0.y
lt r0.y, r0.y, l(0.000001)
mad r1.xyz, v3.xyzx, cb1[4].xyzx, cb1[5].xyzx
mad r0.xzw, r1.xxyz, r0.xxxx, cb0[14].xxyz
mul r0.xzw, r0.xxzw, cb0[15].xxyz
mov r1.z, cb1[0].y
mov r1.x, cb1[1].y
mov r1.y, cb1[2].y
mov r2.y, cb1[1].z
mov r2.z, cb1[2].z
mov r2.x, cb1[0].z
dp3 r3.y, -cb12[6].xyzx, cb1[0].xyzx
dp3 r3.z, -cb12[6].xyzx, cb1[1].xyzx
dp3 r3.x, -cb12[6].xyzx, cb1[2].xyzx
mul r4.xyz, r2.xyzx, r3.xyzx
mad r2.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r2.w, r1.w
lt r1.w, l(0.001000), r1.w
mul r2.xyz, r2.wwww, r2.xyzx
movc r1.xyz, r1.wwww, r2.xyzx, r1.xyzx
mul r2.xyz, r1.xyzx, r3.xyzx
mad r2.xyz, r3.zxyz, r1.yzxy, -r2.xyzx
mov r4.x, r3.y
mov r5.x, r3.z
mov r4.z, r2.x
mov r4.y, r1.z
dp3 r6.x, r0.xzwx, r4.xyzx
dp3 r4.x, v5.xyzx, r4.xyzx
mov r5.y, r1.x
mov r3.y, r1.y
mov r5.z, r2.y
mov r3.z, r2.z
dp3 r6.y, r0.xzwx, r5.xyzx
dp3 r4.y, v5.xyzx, r5.xyzx
dp3 r6.z, r0.xzwx, r3.xyzx
dp3 r4.z, v5.xyzx, r3.xyzx
mul r0.x, v1.w, l(0.500000)
sincos r0.x, r1.x, r0.x
mul r2.xyz, r6.xyzx, r1.xxxx
mov r2.w, l(0)
mul r0.xzw, r0.xxxx, l(1.000000, 0.000000, 0.000000, 0.000000)
mul r3.xyzw, -r0.wxwx, r6.yzxx
mad r5.xyz, -r6.zxyz, -r0.wwxw, r3.xyzx
mov r5.w, -r3.w
add r2.xyzw, r2.xyzw, r5.xyzw
mul r1.yzw, r0.wwxw, r2.yyzx
mad r1.yzw, r0.wwwx, r2.zzxy, -r1.yyzw
mad r1.yzw, r1.xxxx, r2.xxyz, r1.yyzw
mad r1.yzw, r2.wwww, r0.xxww, r1.yyzw
add r1.yzw, r1.yyzw, v1.xxyz
mul r2.xyz, r1.zzzz, cb1[1].xyzx
mad r2.xyz, cb1[0].xyzx, r1.yyyy, r2.xyzx
mad r1.yzw, cb1[2].xxyz, r1.wwww, r2.xxyz
add r1.yzw, r1.yyzw, cb1[3].xxyz
mul r2.xyzw, r1.zzzz, cb12[1].xyzw
mad r2.xyzw, cb12[0].xyzw, r1.yyyy, r2.xyzw
mad r2.xyzw, cb12[2].xyzw, r1.wwww, r2.xyzw
add o2.xyz, -r1.yzwy, cb12[7].xyzx
add r2.xyzw, r2.xyzw, cb12[3].xyzw
mov o0.w, r2.w
mad o0.xy, v4.xyxx, cb1[6].xyxx, cb1[6].zwzz
mul r3.xyzw, -r0.wxwx, r4.yzxx
mad r5.xyz, -r4.zxyz, -r0.wwxw, r3.xyzx
mul r4.xyz, r4.xyzx, r1.xxxx
mov r5.w, -r3.w
mov r4.w, l(0)
add r3.xyzw, r4.xyzw, r5.xyzw
mul r1.yzw, r0.wwxw, r3.yyzx
mad r1.yzw, r0.wwwx, r3.zzxy, -r1.yyzw
mad r1.xyz, r1.xxxx, r3.xyzx, r1.yzwy
mad r0.xzw, r3.wwww, r0.xxzw, r1.xxyz
mul r1.xyz, r0.zzzz, cb1[1].xyzx
mad r1.xyz, cb1[0].xyzx, r0.xxxx, r1.xyzx
mad o1.xyz, cb1[2].xyzx, r0.wwww, r1.xyzx
lt r0.x, cb0[17].x, l(0.000001)
or r0.x, r0.x, r0.y
movc o3.xyzw, r0.xxxx, l(10000.000000,10000.000000,-10000.000000,1.000000), r2.xyzw
ret
// Approximately 0 instruction slots used
