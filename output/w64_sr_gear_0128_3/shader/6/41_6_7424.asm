//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:52 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[132], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb9[64], dynamicIndexed
dcl_constantbuffer cb10[2], immediateIndexed
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 13
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[89].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[99].x
  add r0.y, l(0.250000), cb10[0].x
  ftoi r0.y, r0.y
  ftoi r0.z, cb0[23].x
  iadd r0.y, r0.z, r0.y
  add r0.z, l(0.250000), cb10[1].x
  lt r0.w, cb0[23].x, cb0[24].x
  and r0.w, r0.w, cb0[23].x
  ftoi r0.zw, r0.zzzw
  iadd r0.z, r0.w, r0.z
  utof r0.w, vThreadID.x
  add r1.z, r0.w, cb0[19].x
  add r2.x, r1.z, cb0[21].x
  ftou r2.x, r2.x
  xor r2.y, r2.x, l(61)
  ushr r2.x, r2.x, l(16)
  xor r2.x, r2.x, r2.y
  imul null, r2.x, r2.x, l(9)
  ushr r2.y, r2.x, l(4)
  xor r2.x, r2.y, r2.x
  imul null, r2.x, r2.x, l(0x27d4eb2d)
  ushr r2.y, r2.x, l(15)
  xor r2.x, r2.y, r2.x
  imad r2.x, r2.x, l(0x0019660d), l(0x3c6ef35f)
  utof r2.y, r2.x
  imad r2.x, r2.x, l(0x0019660d), l(0x3c6ef35f)
  utof r2.z, r2.x
  imad r2.x, r2.x, l(0x0019660d), l(0x3c6ef35f)
  utof r2.w, r2.x
  mul r3.xyz, r2.yzwy, l(2.328306437E-010, 2.328306437E-010, 2.328306437E-010, 0.000000)
  mad r4.xy, r2.yyyy, l(8.765398823E-011, 1.055499022E-009, 0.000000, 0.000000), l(0.000000, -3.533334, 0.000000, 0.000000)
  ge r5.xyz, r2.yyyy, l(0.000000, 3650722304.000000, 4294967296.000000, 0.000000)
  and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r2.yw, r5.yyyz, r5.xxxy
  add r2.yw, r2.yyyw, l(0.000000, 0.000001, 0.000000, 0.000001)
  mul r2.yw, r2.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000)
  frc r2.yw, r2.yyyw
  mul r2.yw, r4.xxxy, r2.yyyw
  mul r2.yw, r2.yyyw, l(0.000000, 2.000000, 0.000000, 2.000000)
  add r2.y, r2.w, r2.y
  add_sat r2.y, r2.y, l(0.000001)
  mad r2.y, r2.y, l(0.045000), l(0.005000)
  mad r4.xy, r2.zzzz, l(9.313225885E-011, 1.290547003E-009, 0.000000, 0.000000), l(0.000000, -4.542857, 0.000000, 0.000000)
  ge r5.xyz, r2.zzzz, l(0.000000, 3793886464.000000, 4294967296.000000, 0.000000)
  and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r2.zw, r5.yyyz, r5.xxxy
  add r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.000001, 0.000001)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  frc r2.zw, r2.zzzw
  mul r2.zw, r4.xxxy, r2.zzzw
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
  add r2.z, r2.w, r2.z
  add_sat r2.z, r2.z, l(0.000001)
  mad r1.w, r2.z, l(1.750000), l(1.250000)
  add r0.w, r0.w, l(1.000000)
  div r0.w, r0.w, cb0[89].x
  add r2.z, -r0.w, l(1.000000)
  mul r2.z, r2.z, cb0[22].x
  div r4.w, r2.z, r1.w
  imad r2.x, r2.x, l(0x0019660d), l(0x3c6ef35f)
  utof r2.z, r2.x
  mad r5.x, r2.z, l(4.656612873E-010), l(-1.000000)
  imad r2.x, r2.x, l(0x0019660d), l(0x3c6ef35f)
  utof r2.z, r2.x
  mad r5.y, r2.z, l(4.656612873E-010), l(-1.000000)
  imad r2.x, r2.x, l(0x0019660d), l(0x3c6ef35f)
  utof r2.x, r2.x
  mad r5.z, r2.x, l(4.656612873E-010), l(-1.000000)
  dp3 r2.x, r5.xyzx, r5.xyzx
  rsq r2.x, r2.x
  mul r2.xzw, r2.xxxx, r5.xxyz
  mul r2.xyz, r2.yyyy, r2.xzwx
  dp3 r2.w, r2.xyzx, r2.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r2.xyzx
  mul r5.xyz, r5.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
  lt r2.w, cb0[126].x, l(0.500000)
  if_nz r2.w
    mov r6.xyzw, cb9[r0.y + 32].xyzw
    mov r7.xyz, cb9[r0.y + 0].xyzx
  else
    lt r2.w, cb0[126].x, l(1.500000)
    if_nz r2.w
      add r8.xyz, -cb0[129].xyzx, cb9[r0.y + 0].xyzx
      mad r7.xyz, r0.wwww, r8.xyzx, cb0[129].xyzx
      add r8.xyzw, -cb0[128].xyzw, cb9[r0.y + 32].xyzw
      mad r8.xyzw, r0.wwww, r8.xyzw, cb0[128].xyzw
      dp4 r2.w, r8.xyzw, r8.xyzw
      rsq r2.w, r2.w
      mul r6.xyzw, r2.wwww, r8.xyzw
    else
      add r8.xyz, -cb0[129].xyzx, cb9[r0.y + 0].xyzx
      add r9.xyz, cb0[129].xyzx, -cb0[130].xyzx
      dp3 r2.w, r8.xyzx, r8.xyzx
      sqrt r2.w, r2.w
      max r2.w, r2.w, l(0.000010)
      div r10.xyz, r8.xyzx, r2.wwww
      dp3 r5.w, r9.xyzx, r10.xyzx
      add r5.w, r5.w, r5.w
      mad r10.xyz, r5.wwww, r10.xyzx, -r9.xyzx
      dp3 r5.w, r10.xyzx, r10.xyzx
      sqrt r5.w, r5.w
      max r5.w, r5.w, l(0.000010)
      div r10.xyz, r10.xyzx, r5.wwww
      mad r10.xyz, r10.xyzx, r2.wwww, cb9[r0.y + 0].xyzx
      add r10.xyz, r10.xyzx, -cb0[129].xyzx
      lt r2.w, l(2.500000), cb0[126].x
      if_nz r2.w
        dp3 r2.w, r9.xyzx, r9.xyzx
        sqrt r2.w, r2.w
        max r2.w, r2.w, l(0.000010)
        add r11.xyz, cb0[130].xyzx, -cb0[131].xyzx
        div r12.xyz, r9.xyzx, r2.wwww
        dp3 r5.w, r11.xyzx, r12.xyzx
        add r5.w, r5.w, r5.w
        mad r11.xyz, r5.wwww, r12.xyzx, -r11.xyzx
        dp3 r5.w, r11.xyzx, r11.xyzx
        sqrt r5.w, r5.w
        max r5.w, r5.w, l(0.000010)
        div r11.xyz, r11.xyzx, r5.wwww
        mad r11.xyz, r11.xyzx, r2.wwww, cb0[129].xyzx
        add r11.xyz, r11.xyzx, -cb0[130].xyzx
        mul r11.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      else
        mov r11.xyz, r9.xyzx
      endif
      add r11.xyz, -r9.xyzx, r11.xyzx
      mad r9.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r9.xyzx
      mad r10.xyz, r10.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), -r8.xyzx
      mad r8.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r8.xyzx
      mul r2.w, r0.w, r0.w
      mul r5.w, r0.w, r2.w
      mul r7.w, r2.w, l(3.000000)
      mad r8.w, r5.w, l(2.000000), -r7.w
      add r8.w, r8.w, l(1.000000)
      mad r7.w, r5.w, l(-2.000000), r7.w
      mad r5.w, -r2.w, l(2.000000), r5.w
      add r5.w, r0.w, r5.w
      mad r2.w, r2.w, r0.w, -r2.w
      mul r10.xyz, r7.wwww, cb9[r0.y + 0].xyzx
      mad r10.xyz, r8.wwww, cb0[129].xyzx, r10.xyzx
      mad r9.xyz, r5.wwww, r9.xyzx, r10.xyzx
      mad r7.xyz, r2.wwww, r8.xyzx, r9.xyzx
      add r8.xyzw, -cb0[128].xyzw, cb9[r0.y + 32].xyzw
      mad r8.xyzw, r0.wwww, r8.xyzw, cb0[128].xyzw
      dp4 r0.y, r8.xyzw, r8.xyzw
      rsq r0.y, r0.y
      mul r6.xyzw, r0.yyyy, r8.xyzw
    endif
  endif
  mul r8.xyz, cb9[r0.z + 0].zxyz, cb9[r0.z + 32].yzxy
  mad r8.xyz, cb9[r0.z + 0].yzxy, cb9[r0.z + 32].zxyz, -r8.xyzx
  dp3 r0.y, cb9[r0.z + 0].xyzx, cb9[r0.z + 32].xyzx
  mov r8.w, -r0.y
  mov r9.xyz, cb9[r0.z + 0].xyzx
  mov r9.w, l(0)
  mad r8.xyzw, cb9[r0.z + 32].wwww, r9.xyzw, r8.xyzw
  mul r9.xyz, r8.yzxy, -cb9[r0.z + 32].zxyz
  mad r9.xyz, -cb9[r0.z + 32].yzxy, r8.zxyz, -r9.xyzx
  mad r8.xyz, cb9[r0.z + 32].wwww, r8.xyzx, r9.xyzx
  mad r8.xyz, r8.wwww, -cb9[r0.z + 32].xyzx, r8.xyzx
  mul r9.xyz, r6.yzxy, -cb9[r0.z + 32].zxyz
  mad r9.xyz, -cb9[r0.z + 32].yzxy, r6.zxyz, -r9.xyzx
  dp3 r0.y, -cb9[r0.z + 32].xyzx, r6.xyzx
  mov r10.w, -r0.y
  mad r10.xyz, cb9[r0.z + 32].wwww, r6.xyzx, r9.xyzx
  mul r9.xyzw, l(-1.000000, -1.000000, -1.000000, 1.000000), cb9[r0.z + 32].xyzw
  mad r6.xyzw, r6.wwww, r9.xyzw, r10.xyzw
  mul r9.xyz, r7.zxyz, cb9[r0.z + 32].yzxy
  mad r9.xyz, r7.yzxy, cb9[r0.z + 32].zxyz, -r9.xyzx
  dp3 r0.y, r7.xyzx, cb9[r0.z + 32].xyzx
  mov r9.w, -r0.y
  mul r7.xyz, r7.xyzx, cb9[r0.z + 32].wwww
  mov r7.w, l(0)
  add r7.xyzw, r7.xyzw, r9.xyzw
  mul r9.xyz, r7.yzxy, -cb9[r0.z + 32].zxyz
  mad r9.xyz, -cb9[r0.z + 32].yzxy, r7.zxyz, -r9.xyzx
  mad r7.xyz, cb9[r0.z + 32].wwww, r7.xyzx, r9.xyzx
  mad r7.xyz, r7.wwww, -cb9[r0.z + 32].xyzx, r7.xyzx
  add r7.xyz, r7.xyzx, -r8.xyzx
  mul r8.xyz, r2.zxyz, -r6.yzxy
  mad r8.xyz, r2.yzxy, -r6.zxyz, -r8.xyzx
  dp3 r0.y, r2.xyzx, -r6.xyzx
  mov r8.w, -r0.y
  mul r2.xyz, r2.xyzx, r6.wwww
  mov r2.w, l(0)
  add r2.xyzw, r2.xyzw, r8.xyzw
  mul r8.xyz, r2.yzxy, r6.zxyz
  mad r8.xyz, r6.yzxy, r2.zxyz, -r8.xyzx
  mad r2.xyz, r6.wwww, r2.xyzx, r8.xyzx
  mad r2.xyz, r2.wwww, r6.xyzx, r2.xyzx
  add r4.xyz, r7.xyzx, r2.xyzx
  mul r2.xyz, r5.zxyz, -r6.yzxy
  mad r2.xyz, r5.yzxy, -r6.zxyz, -r2.xyzx
  dp3 r0.y, r5.xyzx, -r6.xyzx
  mov r2.w, -r0.y
  mul r5.xyz, r5.xyzx, r6.wwww
  mov r5.w, l(0)
  add r2.xyzw, r2.xyzw, r5.xyzw
  mul r5.xyz, r2.yzxy, r6.zxyz
  mad r5.xyz, r6.yzxy, r2.zxyz, -r5.xyzx
  mad r2.xyz, r6.wwww, r2.xyzx, r5.xyzx
  mad r2.xyz, r2.wwww, r6.xyzx, r2.xyzx
  mul r5.xyz, r4.zxyz, -cb9[r0.z + 32].yzxy
  mad r5.xyz, r4.yzxy, -cb9[r0.z + 32].zxyz, -r5.xyzx
  dp3 r0.y, r4.xyzx, -cb9[r0.z + 32].xyzx
  mov r5.w, -r0.y
  mul r6.xyz, r4.xyzx, cb9[r0.z + 32].wwww
  mov r6.w, l(0)
  add r5.xyzw, r5.xyzw, r6.xyzw
  mul r6.xyz, r5.yzxy, cb9[r0.z + 32].zxyz
  mad r6.xyz, cb9[r0.z + 32].yzxy, r5.zxyz, -r6.xyzx
  mad r5.xyz, cb9[r0.z + 32].wwww, r5.xyzx, r6.xyzx
  mad r5.xyz, r5.wwww, cb9[r0.z + 32].xyzx, r5.xyzx
  add r0.yzw, r5.xxyz, cb9[r0.z + 0].xxyz
  add r0.yzw, r0.yyzw, -cb12[7].xxyz
  dp3 r0.y, r0.yzwy, r0.yzwy
  sqrt r2.w, r0.y
  ishl r0.y, vThreadID.x, l(2)
  iadd r0.x, r0.y, r0.x
  store_uav_typed u0.xyzw, r0.xxxx, r2.xyzw
  iadd r0.yzw, r0.xxxx, l(0, 1, 2, 3)
  store_uav_typed u0.xyzw, r0.yyyy, r4.xyzw
  mov r1.xy, l(0,0,0,0)
  store_uav_typed u0.xyzw, r0.zzzz, r1.xyzw
  mov r3.w, l(0)
  store_uav_typed u0.xyzw, r0.wwww, r3.xyzw
endif
ret
// Approximately 0 instruction slots used
