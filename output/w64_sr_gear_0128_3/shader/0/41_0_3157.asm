//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:05 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float    yzw
// SV_POSITION              0   xyzw        5      POS   float   xy
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[114], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.yzw
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_temps 4
mul r0.xyz, v3.xyzx, v4.wwww
mul r0.xyz, r0.xyzx, cb13[1].wwww
mul r0.xyz, r0.xyzx, cb13[1].xxxx
mul r0.xyz, r0.xyzx, cb8[7].xyzx
dp3 r0.w, -v2.xyzx, -v2.xyzx
sqrt r0.w, r0.w
mul r1.x, r0.w, l(0.015625)
mad_sat r0.w, r0.w, cb0[113].x, cb0[113].y
min r1.x, r1.x, l(1.000000)
sqrt r1.z, r1.x
mul r1.xy, v5.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r1.z, r1.xyzx, t21.yzxw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t20.xyzw, s2, l(0.000000)
add r2.xyzw, r2.xyzw, l(-0.000000, -0.000000, -0.000000, -1.000000)
mad r2.xyzw, r1.zzzz, r2.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
mad r0.xyz, r0.xyzx, r2.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t11.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyxx, t13.xyzw, s1
mul r1.xy, r1.xyxx, cb12[12].xyxx
ftoi r1.xy, r1.xyxx
add r2.xyzw, r2.xyzw, -r3.xyzw
mad r2.xyzw, r0.wwww, r2.xyzw, r3.xyzw
mul r2.xyz, r2.xyzx, cb8[5].xyzx
mad r2.xyz, r2.wwww, cb8[6].xyzx, r2.xyzx
mad r0.xyz, r2.xyzx, cb13[1].xxxx, r0.xyzx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r1.xyzw, t10.yzwx
mad r0.w, r0.w, cb2[0].y, cb2[0].x
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r0.w, r0.w, -v0.w
mul r1.x, v4.y, l(0.500000)
div_sat r0.w, r0.w, r1.x
add r0.w, -r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
mad r1.xy, v0.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xyzw, s3
log r1.x, r1.x
mul r1.x, r1.x, l(2.200000)
exp r1.x, r1.x
mad r1.yz, v0.xxyx, cb0[8].xxyx, cb0[8].zzwz
sample_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t1.yxzw, s3
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, v4.z
add r1.y, v3.w, l(-0.500000)
mul_sat r1.y, r1.y, l(0.500000)
mul_sat r1.x, r1.y, r1.x
mul_sat r1.x, r1.x, v0.z
mul r0.w, r0.w, r1.x
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, r0.w
ret
// Approximately 0 instruction slots used
