//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:50 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float
// TEXCOORD                 5   xyzw        5     NONE   float
// SV_VERTEXID              0   x           6   VERTID    uint   x
// SV_InstanceID            0   x           7   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 4      w        1     NONE   float      w
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// SV_POSITION              0   xyzw        4      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[121], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input_sgv v6.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, position
dcl_temps 5
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
mov x0[0].xy, l(-1.000000,1.000000,0,0)
mov x0[1].xy, l(-1.000000,-1.000000,0,0)
mov x0[2].xy, l(1.000000,1.000000,0,0)
mov x0[3].xy, l(1.000000,-1.000000,0,0)
mov x1[0].xy, l(0,0,0,0)
mov x1[1].xy, l(0,1.000000,0,0)
mov x1[2].xy, l(1.000000,0,0,0)
mov x1[3].xy, l(1.000000,1.000000,0,0)
itof r0.x, v6.x
add r0.x, r0.x, l(0.500000)
mad r0.x, r0.x, l(0.250000), l(-0.500000)
round_ne r0.x, r0.x
ftoi r0.x, r0.x
ishl r0.x, r0.x, l(2)
iadd r0.x, -r0.x, v6.x
mov o0.xy, x1[r0.x + 0].xyxx
mov r0.xy, x0[r0.x + 0].xyxx
sincos r1.x, r2.x, v2.w
mul r0.zw, r0.yyyx, r1.xxxx
mad r0.y, r0.y, r2.x, r0.w
mad r0.x, r0.x, r2.x, -r0.z
lt r0.z, l(0.000000), r0.x
lt r0.w, r0.x, l(0.000000)
iadd r0.z, -r0.z, r0.w
ilt r0.z, l(0), r0.z
mul r1.xyz, v0.yyyy, cb1[1].xyzx
mad r1.xyz, cb1[0].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb1[2].xyzx, v0.zzzz, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r1.w, r0.w
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.yzxy
add r0.w, r1.w, l(0.000100)
mul r1.w, r0.w, v3.y
div r1.xyz, r1.xyzx, r0.wwww
mul r0.w, r1.w, l(0.0333333351)
min r0.w, r0.w, l(1.000000)
movc r0.z, r0.z, l(0), r0.w
mul r3.xyz, v1.yyyy, cb1[1].xyzx
mad r3.xyz, cb1[0].xyzx, v1.xxxx, r3.xyzx
mad r3.xyz, cb1[2].xyzx, v1.zzzz, r3.xyzx
add r3.xyz, r3.xyzx, cb1[3].xyzx
mad r1.xyz, -r0.zzzz, r1.xyzx, r3.xyzx
add r4.xyz, -r3.xyzx, cb12[7].xyzx
add r3.xyz, r3.xyzx, -cb12[7].xyzx
dp3 r0.z, -cb12[6].xyzx, r3.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r2.w, r1.w
sqrt r1.w, r1.w
mul r3.xyz, r2.wwww, r4.xyzx
mul r4.xyz, r2.xyzx, r3.zxyz
mad r2.xyz, r3.yzxy, r2.yzxy, -r4.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r4.xyz, r3.yzxy, r2.zxyz
mad r4.xyz, r2.yzxy, r3.zxyz, -r4.xyzx
mov o1.xyz, r3.xyzx
mul r3.xy, v3.zxzz, l(1760.000000, 0.280000, 0.000000, 0.000000)
div r0.z, r0.z, r3.x
frc r2.w, r3.y
max r0.z, r0.z, l(1.000000)
mul r3.x, r0.z, v3.z
mul r0.z, r0.z, r0.z
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r3.yzw, r3.xxxx, r4.xxyz
mad r1.xyz, r3.yzwy, r0.xxxx, r1.xyzx
mul r2.xyz, r2.xyzx, r3.xxxx
add r0.x, r3.x, r3.x
div r0.x, r0.w, r0.x
add r0.x, r0.x, l(1.000000)
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
max r0.x, r0.x, l(0.000000)
mad r1.xyz, r2.xyzx, r0.yyyy, r1.xyzx
mul r3.xyzw, r1.yyyy, cb12[1].xyzw
mad r3.xyzw, cb12[0].xyzw, r1.xxxx, r3.xyzw
mad r3.xyzw, cb12[2].xyzw, r1.zzzz, r3.xyzw
add o2.xyz, -r1.xyzx, cb12[7].xyzx
add r3.xyzw, r3.xyzw, cb12[3].xyzw
mov o0.w, r3.w
mad r0.y, -r2.w, cb0[96].x, r1.w
add r0.w, -r1.w, l(10000.000000)
add r1.x, -r2.w, cb0[102].x
add r1.x, r1.x, l(1.000000)
mul_sat r1.x, r1.x, l(3.333333)
add r0.y, r0.y, l(-0.500000)
min_sat r0.y, r0.w, r0.y
mul r0.y, r1.x, r0.y
mul r0.x, r0.x, r0.y
mul r0.x, r0.x, cb0[5].x
mul r0.x, r0.z, r0.x
mul r0.x, r0.x, cb0[117].x
lt r0.y, l(0.999000), v0.w
movc r0.y, r0.y, l(0), l(1.000000)
mul r0.x, r0.y, r0.x
mov o0.z, r0.x
lt r0.x, r0.x, l(0.000001)
mov o1.w, v3.w
mov o3.xyz, v2.xyzx
mov o3.w, v3.z
lt r0.y, cb0[120].x, l(0.000001)
or r0.x, r0.y, r0.x
movc o4.xyzw, r0.xxxx, l(10000.000000,10000.000000,-10000.000000,1.000000), r3.xyzw
ret
// Approximately 0 instruction slots used
