//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:57 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float
// TEXCOORD                 1   xyzw        1     NONE   float
// TEXCOORD                 2   xyz         2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xy
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 8   xyzw        5     NONE   float   x
// SV_POSITION              0   xyzw        6      POS   float   xy
// SV_isFrontFace           0   x           7    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[18], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[15], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.x
dcl_input_ps_siv linear noperspective v6.xy, position
dcl_output o0.xyzw
dcl_temps 5
dp2 r0.x, cb0[13].xyxx, v3.xyxx
add r0.x, r0.x, cb0[13].z
dp2 r0.z, cb0[14].xyxx, v3.xyxx
add r0.y, r0.z, cb0[14].z
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t5.xyzw, s4
mad r0.xyz, r0.xyzx, cb0[15].xxxx, cb0[15].yyyy
mad r1.xy, v3.xyxx, cb0[11].xyxx, cb0[11].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t4.xyzw, s4
mad r2.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t4.xyzw, s4
add r1.xyz, r1.xyzx, r2.xyzx
add r0.xyz, -r0.xyzx, r1.xyzx
add r0.w, -v5.x, l(1.000000)
add_sat r0.xyz, -r0.wwww, r0.xyzx
mul r0.yzw, r0.xxyz, cb0[16].xxyz
mul r0.x, r0.x, v5.x
mul r0.yzw, r0.yyzw, cb0[17].xxxx
mul r0.yzw, r0.yyzw, cb13[1].wwww
mul r0.yzw, r0.yyzw, cb13[1].xxxx
mul r1.x, l(0.750000), cb0[10].x
max r1.x, r1.x, l(0.000000)
add r1.yzw, v4.xxyz, -cb12[14].xxyz
dp3 r1.y, r1.yzwy, r1.yzwy
sqrt r1.y, r1.y
add r1.x, -r1.x, r1.y
mul_sat r1.x, r1.x, l(0.000020)
sqrt r2.x, r1.x
div r1.x, r1.w, r1.y
mad r2.y, r1.x, l(0.500000), l(0.500000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t15.xyzw, s3, l(0.000000)
mul r0.yzw, r0.yyzw, r2.xxyz
mul r1.x, r1.y, l(0.015625)
mad_sat r1.y, r1.y, cb0[6].x, cb0[6].y
min r1.x, r1.x, l(1.000000)
sqrt r2.z, r1.x
mul r2.xy, v6.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r1.x, r2.xyzx, t21.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyxx, t20.xyzw, s1, l(0.000000)
add r3.xyzw, r3.xyzw, l(-0.000000, -0.000000, -0.000000, -1.000000)
mad r3.xyzw, r1.xxxx, r3.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
mad r0.yzw, r0.yyzw, r3.wwww, r3.xxyz
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyxx, t11.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.xyxx, t13.xyzw, s2
add r3.xyzw, r3.xyzw, -r4.xyzw
mad r1.xyzw, r1.yyyy, r3.xyzw, r4.xyzw
mad r2.x, r2.w, cb0[9].x, -r2.w
mad r1.w, r1.w, r2.x, r1.w
mul r2.x, cb0[8].x, cb13[1].x
mul r1.w, r1.w, r2.x
mad r2.x, -r2.x, r2.w, r2.x
mul r1.xyz, r1.xyzx, r2.xxxx
mad r1.xyz, cb0[7].xyzx, r1.wwww, r1.xyzx
add r0.yzw, r0.yyzw, r1.xxyz
mul o0.xyz, r0.xxxx, r0.yzwy
mov o0.w, r0.x
ret
// Approximately 0 instruction slots used
