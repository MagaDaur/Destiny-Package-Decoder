//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:50 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyzw
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy
// SV_VERTEXID              0   x           4   VERTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 8   xyzw        5     NONE   float   xyzw
// SV_POSITION              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb12[16], immediateIndexed
dcl_constantbuffer cb1[24], dynamicIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input_sgv v4.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output_siv o6.xyzw, position
dcl_temps 16
umin r0.x, v4.x, cb1[4].w
ld_indexable(buffer)(float,float,float,float) r0.xyzw, r0.xxxx, t0.xyzw
mad r1.xyz, v0.xyzx, cb1[5].wwww, cb1[5].xyzx
mul r1.w, r0.y, cb0[3].x
mul r1.w, r1.w, cb0[4].x
mul r1.w, r1.w, l(3.141000)
sincos r2.x, r3.x, r1.w
dp3 r1.w, cb0[2].xyzx, cb0[2].xyzx
rsq r1.w, r1.w
mul r2.yzw, r1.wwww, cb0[2].xxyz
mul r3.yzw, r2.yyzw, r2.xxxx
add r4.xyz, r1.xyzx, -cb0[5].xyzx
mul r5.xyz, -r3.zwyz, r4.zxyz
mad r5.xyz, r4.yzxy, -r3.wyzw, -r5.xyzx
dp3 r1.w, r4.xyzx, -r3.yzwy
mov r5.w, -r1.w
mul r4.xyz, r3.xxxx, r4.xyzx
mov r4.w, l(0)
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyz, r3.wyzw, r4.yzxy
mad r5.xyz, r3.zwyz, r4.zxyz, -r5.xyzx
mad r4.xyz, r3.xxxx, r4.xyzx, r5.xyzx
mad r4.xyz, r4.wwww, r3.yzwy, r4.xyzx
add r4.xyz, r4.xyzx, cb0[5].xyzx
mul r5.xyz, -r3.zwyz, v1.zxyz
mad r5.xyz, v1.yzxy, -r3.wyzw, -r5.xyzx
dp3 r1.w, v1.xyzx, -r3.yzwy
mov r5.w, -r1.w
mov r6.xyz, v1.xyzx
mov r6.w, l(0)
mad r5.xyzw, r3.xxxx, r6.xyzw, r5.xyzw
mul r6.xyz, r3.wyzw, r5.yzxy
mad r6.xyz, r3.zwyz, r5.zxyz, -r6.xyzx
mad r5.xyz, r3.xxxx, r5.xyzx, r6.xyzx
mad r5.xyz, r5.wwww, r3.yzwy, r5.xyzx
add r6.xyz, r5.xyzx, -v1.xyzx
mul r7.xyz, -r3.zwyz, v2.zxyz
mad r7.xyz, v2.yzxy, -r3.wyzw, -r7.xyzx
dp3 r1.w, v2.xyzx, -r3.yzwy
mov r7.w, -r1.w
mov r8.xyz, v2.xyzx
mov r8.w, l(0)
mad r7.xyzw, r3.xxxx, r8.xyzw, r7.xyzw
mul r9.xyz, r3.wyzw, r7.yzxy
mad r9.xyz, r3.zwyz, r7.zxyz, -r9.xyzx
mad r7.xyz, r3.xxxx, r7.xyzx, r9.xyzx
mad r3.xyz, r7.wwww, r3.yzwy, r7.xyzx
add r3.xyz, r3.xyzx, -v2.xyzx
add r7.xyz, -r1.xyzx, r4.xyzx
mov r9.x, cb0[6].x
mov r9.y, cb0[7].x
mov r9.z, cb0[8].x
add r4.xyz, r4.xyzx, r9.xyzx
mul r1.w, r0.z, cb0[10].x
mul r1.w, r1.w, l(3.141000)
sincos r2.x, r10.x, r1.w
mul r2.xyz, r2.yzwy, r2.xxxx
add r10.yzw, r4.xxyz, -cb0[11].xxyz
mul r11.xyz, -r2.yzxy, r10.wyzw
mad r11.xyz, r10.zwyz, -r2.zxyz, -r11.xyzx
dp3 r1.w, r10.yzwy, -r2.xyzx
mov r11.w, -r1.w
mul r12.xyz, r10.yzwy, r10.xxxx
mov r12.w, l(0)
add r11.xyzw, r11.xyzw, r12.xyzw
mul r10.yzw, r2.zzxy, r11.yyzx
mad r10.yzw, r2.yyzx, r11.zzxy, -r10.yyzw
mad r10.yzw, r10.xxxx, r11.xxyz, r10.yyzw
mad r10.yzw, r11.wwww, r2.xxyz, r10.yyzw
add r10.yzw, r10.yyzw, cb0[11].xxyz
mul r11.xyz, -r2.yzxy, r5.zxyz
mad r11.xyz, r5.yzxy, -r2.zxyz, -r11.xyzx
dp3 r1.w, r5.xyzx, -r2.xyzx
mov r11.w, -r1.w
mul r12.xyz, r5.xyzx, r10.xxxx
mov r12.w, l(0)
add r11.xyzw, r11.xyzw, r12.xyzw
mul r12.xyz, r2.zxyz, r11.yzxy
mad r12.xyz, r2.yzxy, r11.zxyz, -r12.xyzx
mad r11.xyz, r10.xxxx, r11.xyzx, r12.xyzx
mad r11.xyz, r11.wwww, r2.xyzx, r11.xyzx
add r5.xyz, -r5.xyzx, r11.xyzx
mul r11.xyz, -r2.yzxy, v2.zxyz
mad r11.xyz, v2.yzxy, -r2.zxyz, -r11.xyzx
dp3 r1.w, v2.xyzx, -r2.xyzx
mov r11.w, -r1.w
mad r8.xyzw, r10.xxxx, r8.xyzw, r11.xyzw
mul r11.xyz, r2.zxyz, r8.yzxy
mad r11.xyz, r2.yzxy, r8.zxyz, -r11.xyzx
mad r8.xyz, r10.xxxx, r8.xyzx, r11.xyzx
mad r2.xyz, r8.wwww, r2.xyzx, r8.xyzx
add r2.xyz, r2.xyzx, -v2.xyzx
add r4.xyz, -r4.xyzx, r10.yzwy
add r4.xyz, r4.xyzx, r9.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
add r3.xyz, r4.xyzx, r7.xyzx
add r3.xyz, r3.xyzx, -cb0[0].xyzx
mad r3.xyz, cb0[12].xxxx, r3.xyzx, cb0[0].xyzx
mul r1.w, v0.w, l(32767.099609)
ftoi r1.w, r1.w
imax r2.w, -r1.w, r1.w
ige r3.w, r2.w, l(2048)
ilt r4.x, r1.w, l(0)
ishl r4.y, v4.x, l(1)
movc r4.y, r4.x, r4.y, v4.x
ishl r2.w, r2.w, l(3)
iadd r2.w, r2.w, l(0xffffc000)
bfi r2.w, l(3), l(0), r4.y, r2.w
ld_indexable(buffer)(uint,uint,uint,uint) r6.xyzw, r2.wwww, t1.xyzw
movc r1.w, r3.w, r6.x, r1.w
imul null, r4.y, r1.w, l(3)
imad r4.zw, l(0, 0, 3, 3), r1.wwww, l(0, 0, 1, 2)
if_nz r3.w
  utof r6.xz, r6.zzwz
  mul r6.xz, r6.xxzx, l(0.00392156886, 0.000000, 0.00392156886, 0.000000)
  mov r7.x, cb1[r4.y + 8].w
  mov r7.y, cb1[r4.z + 8].w
  mov r7.z, cb1[r4.w + 8].w
  imul null, r1.w, r6.y, l(3)
  imad r6.yw, l(0, 3, 0, 3), r6.yyyy, l(0, 1, 0, 2)
  mul r8.xyz, r6.zzzz, cb1[r1.w + 8].xyzx
  mul r9.x, r6.z, cb1[r1.w + 8].w
  mul r9.y, r6.z, cb1[r6.y + 8].w
  mul r9.z, r6.z, cb1[r6.w + 8].w
  mul r10.xyz, r6.zzzz, cb1[r6.y + 8].xyzx
  mul r6.yzw, r6.zzzz, cb1[r6.w + 8].xxyz
  mad r8.xyz, cb1[r4.y + 8].xyzx, r6.xxxx, r8.xyzx
  mad r7.xyz, r7.xyzx, r6.xxxx, r9.xyzx
  mad r9.xyz, cb1[r4.z + 8].xyzx, r6.xxxx, r10.xyzx
  mad r6.xyz, cb1[r4.w + 8].xyzx, r6.xxxx, r6.yzwy
  if_nz r4.x
    iadd r1.w, r2.w, l(1)
    ld_indexable(buffer)(uint,uint,uint,uint) r10.xyzw, r1.wwww, t1.xyzw
    utof r10.zw, r10.zzzw
    mul r10.zw, r10.zzzw, l(0.000000, 0.000000, 0.00392156886, 0.00392156886)
    imul null, r11.xy, r10.xyxx, l(3, 3, 0, 0)
    imad r12.xyzw, l(3, 3, 3, 3), r10.xxyy, l(1, 2, 1, 2)
    mul r13.x, r10.z, cb1[r11.x + 8].w
    mul r13.y, r10.z, cb1[r12.x + 8].w
    mul r13.z, r10.z, cb1[r12.y + 8].w
    mad r11.xzw, r10.zzzz, cb1[r11.x + 8].xxyz, r8.xxyz
    add r13.xyz, r7.xyzx, r13.xyzx
    mad r14.xyz, r10.zzzz, cb1[r12.x + 8].xyzx, r9.xyzx
    mad r10.xyz, r10.zzzz, cb1[r12.y + 8].xyzx, r6.xyzx
    mul r15.x, r10.w, cb1[r11.y + 8].w
    mul r15.y, r10.w, cb1[r12.z + 8].w
    mul r15.z, r10.w, cb1[r12.w + 8].w
    mad r8.xyz, r10.wwww, cb1[r11.y + 8].xyzx, r11.xzwx
    add r7.xyz, r13.xyzx, r15.xyzx
    mad r9.xyz, r10.wwww, cb1[r12.z + 8].xyzx, r14.xyzx
    mad r6.xyz, r10.wwww, cb1[r12.w + 8].xyzx, r10.xyzx
  endif
else
  mov r8.xyz, cb1[r4.y + 8].xyzx
  mov r7.x, cb1[r4.y + 8].w
  mov r7.y, cb1[r4.z + 8].w
  mov r7.z, cb1[r4.w + 8].w
  mov r9.xyz, cb1[r4.z + 8].xyzx
  mov r6.xyz, cb1[r4.w + 8].xyzx
endif
add r1.xyz, r1.xyzx, r3.xyzx
add r3.xyz, r7.xyzx, cb12[15].xyzx
mov r8.w, r3.x
mov r1.w, l(1.000000)
dp4 r4.x, r8.xyzw, r1.xyzw
mov r9.w, r3.y
dp4 r4.y, r9.xyzw, r1.xyzw
mov r6.w, r3.z
dp4 r4.z, r6.xyzw, r1.xyzw
mul r3.xyzw, r4.yyyy, cb12[1].xyzw
mad r3.xyzw, cb12[0].xyzw, r4.xxxx, r3.xyzw
mad r3.xyzw, cb12[2].xyzw, r4.zzzz, r3.xyzw
add o6.xyzw, r3.xyzw, cb12[14].xyzw
add o4.xyz, r4.xyzx, cb12[7].xyzx
mad r1.xyw, cb0[12].xxxx, r5.xyxz, v1.xyxz
dp3 r2.w, r1.xywx, r1.xywx
rsq r2.w, r2.w
mul r1.xyw, r1.xyxw, r2.wwww
dp3 r3.x, r8.xyzx, r1.xywx
dp3 r3.y, r9.xyzx, r1.xywx
dp3 r3.z, r6.xyzx, r1.xywx
mad r1.xyw, cb0[12].xxxx, r2.xyxz, v2.xyxz
dp3 r2.x, r1.xywx, r1.xywx
rsq r2.x, r2.x
mul r1.xyw, r1.xyxw, r2.xxxx
dp3 r2.x, r8.xyzx, r1.xywx
dp3 r2.y, r9.xyzx, r1.xywx
dp3 r2.z, r6.xyzx, r1.xywx
mul r1.xyw, r2.yzyx, r3.zxzy
mad r1.xyw, r3.yzyx, r2.zxzy, -r1.xyxw
mul o2.xyz, r1.xywx, v2.wwww
mad r1.xy, v3.xyxx, cb1[6].xyxx, cb1[6].zwzz
mul_sat r1.w, r3.z, cb1[7].z
add_sat o0.w, r1.w, cb1[7].w
mul r1.w, v1.w, l(32767.099609)
ftoi r1.w, r1.w
ishr r2.w, r1.w, l(3)
and r2.w, r2.w, l(4095)
and r1.w, r1.w, l(7)
itof r1.w, r1.w
add o2.w, r1.w, l(0.100000)
ld_indexable(buffer)(uint,uint,uint,uint) r4.xyzw, r2.wwww, t1.xyzw
ishl r4.yw, r4.yyyw, l(0, 8, 0, 8)
or r4.xy, r4.ywyy, r4.xzxx
f16tof32 r4.xy, r4.xyxx
mul o3.zw, r1.xxxy, r4.xxxy
mov o0.xyz, r3.xyzx
mov o1.w, r1.z
mov o1.xyz, r2.xyzx
mov o3.xy, r1.xyxx
mov o5.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used
