//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:54:04 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// SV_POSITION              0   xyzw        7      POS   float   xy
// SV_isFrontFace           0   x           8    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[98], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps_siv linear noperspective v7.xy, position
dcl_output o0.xyzw
dcl_temps 2
mad r0.xy, v0.xyxx, cb0[8].xyxx, cb0[8].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s3
mad r0.x, r0.x, v6.y, v6.x
add r0.y, v4.w, l(-0.500000)
mul_sat r0.y, r0.y, l(0.500000)
mul_sat r0.x, r0.y, r0.x
mul_sat r0.x, r0.x, v0.z
dp3 r0.y, -v2.xyzx, -v2.xyzx
sqrt r0.y, r0.y
mul r0.y, r0.y, l(0.015625)
min r0.y, r0.y, l(1.000000)
sqrt r1.z, r0.y
mul r1.xy, v7.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r0.y, r1.xyzx, t21.yxzw, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.xyxx, t20.xywz, s2, l(0.000000)
mul r1.xy, r1.xyxx, cb12[12].xyxx
ftoi r1.xy, r1.xyxx
add r0.z, r0.z, l(-1.000000)
mad r0.y, r0.y, r0.z, l(1.000000)
mul r0.x, r0.y, r0.x
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t10.yxzw
mad r0.y, r0.y, cb2[0].y, cb2[0].x
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.y, r0.y, -v0.w
mul_sat r0.y, r0.y, l(6.66666651)
add r0.y, -r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
mad r0.yz, v0.xxyx, cb0[9].xxyx, cb0[9].zzwz
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t0.yxzw, s1
mov_sat r0.y, r0.y
mad r0.yzw, r0.yyyy, l(0.000000, 1.423584, 1.423584, 1.423584), cb0[97].xxyz
sample_indexable(texture2d)(float,float,float,float) r1.x, v0.xyxx, t1.xyzw, s1
mov_sat r1.x, r1.x
mad r1.xyz, cb0[13].xyzx, r1.xxxx, l(0.333000, 0.333000, 0.333000, 0.000000)
mul r0.yzw, r0.yyzw, r1.xxyz
mad_sat r0.yzw, r0.yyzw, l(0.000000, 3.000000, 3.000000, 3.000000), l(0.000000, -0.800000, -0.800000, -0.800000)
add r0.yzw, r0.yyzw, l(0.000000, -2.511886521E-007, -2.511886521E-007, -2.511886521E-007)
mul r0.yzw, r0.yyzw, l(0.000000, 1.00000024, 1.00000024, 1.00000024)
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.yzw, r0.yyzw, v4.xxyz
mul r0.yzw, r0.yyzw, v6.zzzz
mul r0.yzw, r0.yyzw, cb13[1].wwww
mul r0.yzw, r0.yyzw, cb13[1].xxxx
mul r0.yzw, r0.yyzw, cb8[7].xxyz
mul o0.xyz, r0.xxxx, r0.yzwy
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used
