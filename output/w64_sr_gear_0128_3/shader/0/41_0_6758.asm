//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:55 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb13[5], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 9
mul r0.xy, v0.xyxx, cb12[12].zwzz
mul r0.zw, r0.xxxy, cb12[12].xxxy
ftoi r1.xy, r0.zwzz
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t1.yzxw
mul r2.xyzw, v0.yyyy, cb0[4].xyzw
mad r2.xyzw, cb0[3].xyzw, v0.xxxx, r2.xyzw
mad r2.xyzw, cb0[5].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[6].xyzw
div r2.xyz, r2.xyzx, r2.wwww
add r3.xyz, -r2.xyzx, cb0[7].xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
sqrt r0.z, r0.z
mad_sat r0.w, r0.z, cb0[26].x, cb0[26].y
mul r0.w, r0.w, r0.w
mul r4.xyz, r2.yyyy, cb0[19].xyzx
mad r4.xyz, cb0[18].xyzx, r2.xxxx, r4.xyzx
mad r4.xyz, cb0[20].xyzx, r2.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[21].xyzx
mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r5.xyz, r4.xyzx, cb0[12].xyzx, cb0[13].xyzx
sample_indexable(texture3d)(float,float,float,float) r5.xyz, r5.xyzx, t4.xyzw, s1
add r5.xyz, r5.xyzx, -cb0[14].xyzx
mad r4.xyz, r5.xyzx, cb0[11].xxxx, r4.xyzx
mad r4.xyz, r4.xyzx, cb0[15].xyzx, cb0[16].xyzx
sample_indexable(texture3d)(float,float,float,float) r2.w, r4.xyzx, t3.yzwx, s1
add r2.w, -r2.w, l(1.000000)
mad_sat r2.w, r2.w, cb0[17].x, cb0[17].y
add r4.xyz, r2.wwww, cb0[10].xyzx
mul r5.xyz, r0.wwww, r4.xyzx
lt r5.xyz, l(0.000100, 0.000100, 0.000100, 0.000000), r5.xyzx
or r2.w, r5.y, r5.x
or r2.w, r5.z, r2.w
if_nz r2.w
  ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t0.xyzw
  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r0.xyxx, t2.xyzw, s0
  dp3 r0.x, r1.xyzx, r1.xyzx
  sqrt r0.x, r0.x
  mad r0.y, r0.x, l(4.000000), l(-3.000000)
  div r1.xyz, r1.xyzx, r0.xxxx
  add_sat r0.x, r5.y, r5.y
  mul r1.w, r5.z, l(1.250000)
  mov_sat r1.w, r1.w
  mul r0.x, r0.x, r0.x
  max r0.x, r0.x, l(0.000100)
  log r0.x, r0.x
  mul r0.x, r0.x, cb0[32].x
  exp r0.x, r0.x
  div r3.xyz, r3.xyzx, r0.zzzz
  dp3 r0.z, r2.xyzx, r2.xyzx
  rsq r0.z, r0.z
  mul r5.yzw, r0.zzzz, r2.xxyz
  dp3 r2.w, r1.xyzx, -r5.yzwy
  add r3.w, r2.w, r2.w
  mad r6.xyz, r1.xyzx, r3.wwww, r5.yzwy
  add r7.xyz, -r2.xyzx, cb0[9].xyzx
  dp3 r3.w, r7.xyzx, r6.xyzx
  mad r6.xyz, r3.wwww, r6.xyzx, -r7.xyzx
  dp3 r3.w, r6.xyzx, r6.xyzx
  sqrt r3.w, r3.w
  div_sat r3.w, cb0[8].x, r3.w
  mad r6.xyz, r6.xyzx, r3.wwww, r7.xyzx
  dp3 r3.w, r6.xyzx, r6.xyzx
  sqrt r3.w, r3.w
  div r6.xyz, r6.xyzx, r3.wwww
  add r4.w, -r0.y, l(1.000000)
  max r4.w, r4.w, l(0.010000)
  div r3.w, cb0[8].x, r3.w
  add_sat r3.w, r3.w, r3.w
  div r3.w, r4.w, r3.w
  add r3.w, r4.w, r3.w
  mul r3.w, r3.w, r3.w
  min r3.w, r3.w, l(1.000000)
  mad_sat r4.w, cb0[22].y, r0.w, cb0[22].x
  mad r7.xyz, cb0[23].xyzx, cb0[24].xxxx, -cb0[25].xyzx
  mad r7.xyz, r4.wwww, r7.xyzx, cb0[25].xyzx
  dp3_sat r4.w, r1.xyzx, r3.xyzx
  min r6.w, r1.w, l(0.200000)
  add r6.w, r4.w, r6.w
  min r6.w, r6.w, l(1.000000)
  mad r8.xyz, -r2.xyzx, r0.zzzz, r3.xyzx
  dp3 r7.w, r8.xyzx, r8.xyzx
  rsq r7.w, r7.w
  mul r8.xyz, r7.wwww, r8.xyzx
  add r2.w, |r2.w|, l(0.000010)
  dp3_sat r7.w, r3.xyzx, r8.xyzx
  mul r8.x, r0.y, l(-0.500000)
  mad r0.y, -r0.y, l(0.900000), l(1.000000)
  mul r7.w, r7.w, r7.w
  dp2 r7.w, r7.wwww, r0.yyyy
  add r4.w, -r4.w, l(1.000000)
  add r7.w, r7.w, l(-0.500000)
  mul r8.y, r4.w, r4.w
  mul r8.y, r8.y, r8.y
  mul r4.w, r4.w, r8.y
  mad r4.w, r7.w, r4.w, l(1.000000)
  add r8.y, -r2.w, l(1.000000)
  mul r8.z, r8.y, r8.y
  mul r8.z, r8.z, r8.z
  mul r8.y, r8.z, r8.y
  mad r7.w, r7.w, r8.y, l(1.000000)
  mul r4.w, r4.w, r7.w
  lt r7.w, l(0.000100), r1.w
  dp3_sat r8.y, r3.xyzx, -r1.xyzx
  dp3 r8.z, -r5.yzwy, -r5.yzwy
  rsq r8.z, r8.z
  mul r5.yzw, -r5.yyzw, r8.zzzz
  dp3_sat r3.x, r3.xyzx, -r5.yzwy
  log r3.x, r3.x
  mul r3.x, r3.x, cb13[4].y
  exp r3.x, r3.x
  mad_sat r3.x, r8.y, cb13[4].x, r3.x
  mul r1.w, r1.w, r3.x
  and r1.w, r1.w, r7.w
  mul r3.x, r6.w, r4.w
  mul r1.w, r1.w, l(0.318309873)
  mad r1.w, r3.x, l(0.318309873), r1.w
  mul r3.xyz, r7.xyzx, r1.wwww
  dp3_sat r1.w, r1.xyzx, r6.xyzx
  mad r2.xyz, -r2.xyzx, r0.zzzz, r6.xyzx
  dp3 r0.z, r2.xyzx, r2.xyzx
  rsq r0.z, r0.z
  mul r2.xyz, r0.zzzz, r2.xyzx
  dp3 r0.z, r1.xyzx, r2.xyzx
  dp3_sat r1.x, r6.xyzx, r2.xyzx
  mul r0.y, r0.y, r0.y
  mul r0.y, r0.y, r0.y
  add r1.x, -r1.x, l(1.000000)
  mad r1.y, r5.x, l(0.840000), l(0.040000)
  mul r1.z, r1.x, r1.x
  mul r1.z, r1.z, r1.z
  mul r2.x, r1.z, r1.x
  mad r1.x, -r1.x, r1.z, l(1.000000)
  div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
  mad r1.x, r1.y, r2.x, r1.x
  mov_sat r8.x, r8.x
  mad r1.y, -r2.w, r0.y, r2.w
  mad r1.y, r1.y, r2.w, r0.y
  sqrt r1.y, r1.y
  add r1.y, r1.y, r1.w
  mad r1.z, -r1.w, r0.y, r1.w
  mad r1.z, r1.z, r1.w, r0.y
  sqrt r1.z, r1.z
  add r1.z, r1.z, r2.w
  add r1.y, r1.z, r1.y
  div r1.y, l(0.500000), r1.y
  add r1.y, r8.x, r1.y
  min r1.y, r1.y, l(1.000000)
  mad r1.z, r0.z, r0.y, -r0.z
  mad r0.z, r1.z, r0.z, l(1.000000)
  mul r0.z, r0.z, r0.z
  div r0.y, r0.y, r0.z
  mul r0.y, r0.y, r1.x
  mul r0.y, r1.y, r0.y
  mul r0.y, r1.w, r0.y
  mul r0.y, r0.y, l(0.318309873)
  mul r1.xyz, r7.xyzx, r0.yyyy
  mul r1.xyz, r3.wwww, r1.xyzx
  mul r2.xyz, r0.xxxx, r3.xyzx
  mul r0.xyz, r0.xxxx, r1.xyzx
  mul r0.w, r0.w, cb0[29].x
  mul r1.xyz, r0.wwww, r2.xyzx
  mul r0.xyz, r0.wwww, r0.xyzx
  mul r1.xyz, r4.xyzx, r1.xyzx
  mul r0.xyz, r4.xyzx, r0.xyzx
  mul r1.xyz, r1.xyzx, cb0[30].xxxx
  mul r0.xyz, r0.xyzx, cb0[30].yyyy
else
  mov r1.xyz, l(0,0,0,0)
  mov r0.xyz, l(0,0,0,0)
endif
mov o0.xyz, r1.xyzx
mov o0.w, l(0)
mov o1.xyz, r0.xyzx
mov o1.w, l(0)
ret
// Approximately 0 instruction slots used
