//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:54 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[107], immediateIndexed
dcl_constantbuffer cb13[1], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 11
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[96].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[106].x
  ftou r0.y, cb0[97].x
  ishl r0.z, vThreadID.x, l(2)
  iadd r0.y, r0.z, r0.y
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
  iadd r0.yzw, r0.yyyy, l(0, 1, 2, 3)
  ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r0.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.w, r0.wwww, t0.yzwx
  add r0.y, r1.w, r1.w
  frc r0.y, r0.y
  mov r5.w, -r0.y
  add r0.y, r4.w, cb13[0].y
  mul r0.y, r0.y, l(0.900000)
  frc r0.y, r0.y
  add r6.z, -r0.y, l(1.000000)
  add r0.y, r3.w, cb13[0].y
  mul r0.y, r0.y, l(0.200000)
  frc r0.y, r0.y
  add r6.w, -r0.y, l(1.000000)
  mov_sat r0.y, r2.w
  mad r7.xyzw, r0.yyyy, l(0.000000, 149.746948, 2.201950, -6.871445), l(0.000000, -39.734924, -6.429794, -0.488480)
  mad r8.xyzw, r0.yyyy, l(7.645882, 5.764602, 3.335973, 2.027622), l(0.436667, 0.467194, 0.523564, 0.620619)
  mul r0.z, r0.y, r0.y
  mad r7.xyzw, r7.xyzw, r0.zzzz, r8.xyzw
  ge r8.xyzw, r0.yyyy, l(0.000000, 0.012889, 0.090222, 0.233611)
  and r8.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r8.xyz, r8.yzwy, r8.xyzx
  add r8.xyz, r8.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r8.xyz, r8.xyzx
  mul r7.xyz, r7.xyzx, r8.xyzx
  mov r0.w, l(2.000000)
  mul r7.xy, r7.xyxx, r0.wwww
  add r7.x, r7.y, r7.x
  mad r0.w, r0.w, r7.z, r7.x
  mad r0.w, r7.w, r8.w, r0.w
  mad r7.xyzw, r0.yyyy, l(6.893448, 8.736038, 1.343781, -0.662922), l(-13.497620, -14.998688, -0.039734, 4.914429)
  mad r8.xyzw, r0.yyyy, l(6.060532, 6.258904, -3.803406, -7.853439), l(0.209470, 0.256320, 2.505730, 3.601616)
  mad r9.x, r0.y, l(-0.070226), l(0.070226)
  mad r7.xyzw, r7.xyzw, r0.zzzz, r8.xyzw
  ge r8.xyzw, r0.yyyy, l(0.290000, 0.451722, 0.692333, 0.834333)
  and r10.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  ge r0.yz, r0.yyyy, l(0.000000, 0.976333, 1.000000, 0.000000)
  and r8.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
  add r9.yzw, r10.yyzw, r10.xxyz
  add r9.yzw, r9.yyzw, l(0.000000, 0.000001, 0.000001, 0.000001)
  mul r9.yzw, r9.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  frc r9.yzw, r9.yyzw
  mul r7.xyz, r7.xyzx, r9.yzwy
  add r0.z, r8.z, r8.y
  add r0.z, r0.z, l(0.000001)
  mul r0.z, r0.z, l(0.500000)
  frc r0.z, r0.z
  mov r8.y, l(2.000000)
  mul r7.xy, r7.xyxx, r8.yyyy
  dp2 r0.z, r0.zzzz, r9.xxxx
  add r7.x, r7.y, r7.x
  mad r7.x, r8.y, r7.z, r7.x
  mad r7.x, r7.w, r10.w, r7.x
  movc r0.w, r8.x, r7.x, r0.w
  movc_sat r0.y, r0.y, r0.z, r0.w
  mad r4.x, r0.y, l(0.225000009), l(0.075000)
  imad r0.x, l(5), vThreadID.x, r0.x
  mov r6.xy, l(1.000000,3.000000,0,0)
  store_uav_typed u0.xyzw, r0.xxxx, r6.xyzw
  iadd r6.xyzw, r0.xxxx, l(1, 2, 3, 4)
  store_uav_typed u0.xyzw, r6.xxxx, r1.xyzw
  store_uav_typed u0.xyzw, r6.yyyy, r2.xyzw
  mov r5.xyz, r3.xyzx
  store_uav_typed u0.xyzw, r6.zzzz, r5.xyzw
  mov r4.y, l(1.000000)
  mov r4.z, r3.w
  store_uav_typed u0.xyzw, r6.wwww, r4.xyzw
endif
ret
// Approximately 0 instruction slots used
