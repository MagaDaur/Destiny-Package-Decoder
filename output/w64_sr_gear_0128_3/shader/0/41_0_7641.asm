//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:51 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 1   xyz         1     NONE   float
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float
// SV_POSITION              0   xyzw        5      POS   float   xy
// SV_isFrontFace           0   x           6    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[108], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps_siv linear noperspective v5.xy, position
dcl_output o0.xyzw
dcl_temps 2
mad r0.xy, v0.xyxx, l(1.000000, 0.500000, 0.000000, 0.000000), l(0.000000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s1
add r0.y, -r0.x, l(1.000000)
mul r0.xzw, r0.xxxx, cb0[99].xxyz
mad r0.xyz, r0.yyyy, cb0[98].xyzx, r0.xzwx
mad r1.xy, v0.xyxx, v3.xyxx, v3.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t1.yzwx, s2
mul r0.w, r0.w, l(3.000000)
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[102].xyzx
max r0.xyz, r0.xyzx, cb0[103].xxxx
min r0.xyz, r0.xyzx, cb0[104].xxxx
add r0.xyz, r0.xyzx, l(-2.511886521E-007, -2.511886521E-007, -2.511886521E-007, 0.000000)
mul r0.xyz, r0.xyzx, l(1.00000024, 1.00000024, 1.00000024, 0.000000)
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyz, r0.xyzx, cb13[1].wwww
mul r0.xyz, r0.xyzx, cb13[1].xxxx
mul r0.xyz, r0.xyzx, l(20.000000, 20.000000, 20.000000, 0.000000)
mad r1.xy, v0.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t2.yzwx, s2
mad r1.xy, v0.yxyy, cb0[8].yxyy, cb0[8].wzww
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s2
add r0.w, r0.w, -r1.x
log r0.w, |r0.w|
mul r0.w, r0.w, cb0[107].x
exp r0.w, r0.w
mul r0.w, r0.w, l(4.000000)
min r0.w, r0.w, l(1.000000)
mul_sat r0.w, r0.w, v1.w
mul_sat r0.w, r0.w, v0.z
dp3 r1.x, cb8[7].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r0.w, r0.w, r1.x
dp3 r1.x, -v2.xyzx, -v2.xyzx
sqrt r1.x, r1.x
mul r1.x, r1.x, l(0.015625)
min r1.x, r1.x, l(1.000000)
sqrt r1.z, r1.x
mul r1.xy, v5.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r1.z, r1.xyzx, t21.yzxw, s3, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t20.wxyz, s3, l(0.000000)
add r1.x, r1.x, l(-1.000000)
mad r1.x, r1.z, r1.x, l(1.000000)
mul r0.w, r0.w, r1.x
mul o0.xyz, r0.wwww, r0.xyzx
mov_sat r0.x, cb0[96].x
mul o0.w, r0.x, r0.w
ret
// Approximately 0 instruction slots used
