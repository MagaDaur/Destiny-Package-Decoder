//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:59 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float    yzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float
// SV_VERTEXID              0   x           8   VERTID    uint   x
// SV_InstanceID            0   x           9   INSTID    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 7      w        1     NONE   float      w
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_POSITION              0   xyzw        7      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[115], immediateIndexed
dcl_constantbuffer cb12[8], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v5.yzw
dcl_input v6.xyzw
dcl_input_sgv v8.x, vertex_id
dcl_output o0.xyzw
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output_siv o7.xyzw, position
dcl_temps 6
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
mov x0[0].xy, l(-1.000000,1.000000,0,0)
mov x0[1].xy, l(-1.000000,-1.000000,0,0)
mov x0[2].xy, l(1.000000,1.000000,0,0)
mov x0[3].xy, l(1.000000,-1.000000,0,0)
mov x1[0].xy, l(0,0,0,0)
mov x1[1].xy, l(0,1.000000,0,0)
mov x1[2].xy, l(1.000000,0,0,0)
mov x1[3].xy, l(1.000000,1.000000,0,0)
itof r0.x, v8.x
add r0.x, r0.x, l(0.500000)
mad r0.x, r0.x, l(0.250000), l(-0.500000)
round_ne r0.x, r0.x
ftoi r0.x, r0.x
ishl r0.x, r0.x, l(2)
iadd r0.x, -r0.x, v8.x
mov o0.xy, x1[r0.x + 0].xyxx
mov r0.xy, x0[r0.x + 0].xyxx
mul r1.xyz, v1.yyyy, cb1[1].yzxy
mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, v2.yyyy, cb1[1].xyzx
mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb1[3].xyzx
add r3.xyz, -r2.xyzx, cb12[7].xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx
mul r4.xyz, r1.xyzx, r3.zxyz
mad r4.xyz, r3.yzxy, r1.yzxy, -r4.xyzx
dp3 r0.z, r1.zxyz, r3.xyzx
log r0.z, |r0.z|
mul r0.z, r0.z, l(2.500000)
exp r0.z, r0.z
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r4.xyzx
mul r4.xyz, r3.yzxy, r1.zxyz
mad r4.xyz, r1.yzxy, r3.zxyz, -r4.xyzx
mul r1.xyz, r1.xyzx, cb0[10].xxxx
mov o1.xyz, r3.xyzx
mul r3.xyz, r4.xyzx, cb0[10].xxxx
add r0.w, v6.y, l(-1.000000)
mad r4.y, r0.z, r0.w, l(1.000000)
mov r4.x, v6.y
mul r0.xy, r0.yxyy, r4.xyxx
sincos r4.x, r5.x, v3.w
mul r0.zw, r0.xxxy, r4.xxxx
mad r0.y, r0.y, r5.x, -r0.z
mad r0.x, r0.x, r5.x, r0.w
mad r0.yzw, r3.xxyz, r0.yyyy, r2.xxyz
mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
mul r1.xyzw, r0.yyyy, cb12[1].xyzw
mad r1.xyzw, cb12[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb12[2].xyzw, r0.zzzz, r1.xyzw
add o2.xyz, -r0.xyzx, cb12[7].xyzx
add r0.xyzw, r1.xyzw, cb12[3].xyzw
mov o0.w, r0.w
mul r1.x, cb0[9].y, cb0[114].x
lt r1.y, l(0.999000), v2.w
movc r1.x, r1.y, l(0), r1.x
mov o0.z, r1.x
lt r1.x, r1.x, l(0.000001)
mov o1.w, v6.w
mov o3.xyzw, v0.xyzw
mov o4.xyz, v3.xyzx
mov o4.w, v5.y
mov o5.xyzw, v4.xyzw
mov o6.xy, v5.zwzz
mov o6.zw, v6.xxxz
lt r1.y, v6.z, l(0.000001)
or r1.x, r1.y, r1.x
movc o7.xyzw, r1.xxxx, l(10000.000000,10000.000000,-10000.000000,1.000000), r0.xyzw
ret
// Approximately 0 instruction slots used
