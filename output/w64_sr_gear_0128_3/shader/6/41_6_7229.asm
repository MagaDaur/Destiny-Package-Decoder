//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:53 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[99], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_uav_typed_buffer (float,float,float,float) u0
dcl_input vThreadID.x
dcl_temps 13
dcl_thread_group 64, 1, 1
add r0.x, l(0.500000), cb0[88].x
ftou r0.x, r0.x
ult r0.x, vThreadID.x, r0.x
if_nz r0.x
  ftou r0.x, cb0[98].x
  ftou r0.y, cb0[89].x
  ishl r0.z, vThreadID.x, l(2)
  iadd r0.y, r0.z, r0.y
  ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
  iadd r0.yzw, r0.yyyy, l(0, 1, 2, 3)
  ld_indexable(buffer)(float,float,float,float) r2.xyzw, r0.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.xyzw, r0.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.yz, r0.wwww, t0.zxyw
  mov_sat r5.z, r3.w
  mad r0.yzw, r5.zzzz, l(0.000000, -0.258823, 0.472393, 3.324324), l(0.000000, 1.258823, 0.000000, -2.324324)
  mul r6.x, r5.z, r5.z
  mul r0.y, r0.y, r6.x
  min r6.w, r0.y, l(1.000000)
  mov_sat r0.y, r1.w
  mul r7.xy, r0.yyyy, l(0.293194, 2.687500, 0.000000, 0.000000)
  mad r7.zw, r0.yyyy, l(0.000000, 0.000000, 0.749984, 0.723769), l(0.000000, 0.000000, -0.043178, -2.411269)
  mul r8.x, r0.y, r0.y
  mad r7.xy, r7.wzww, r8.xxxx, r7.yxyy
  max r7.y, r7.y, l(0.000000)
  mad r7.y, r7.y, l(2.912000), l(0.405000)
  mad r9.xy, r7.yyyy, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
  ge r7.yzw, r0.yyyy, l(0.000000, 0.000000, 0.999999, 1.000000)
  and r7.yzw, r7.yyzw, l(0, 0x3f800000, 0x3f800000, 0x3f800000)
  add r8.yzw, r7.zzww, r7.yyzw
  add r8.yzw, r8.yyzw, l(0.000000, 0.000001, 0.000001, 0.000001)
  mul r8.yzw, r8.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  frc r8.yzw, r8.yyzw
  add r7.yz, r8.yyzy, r8.yyzy
  add r7.y, r7.z, r7.y
  mad r7.y, r8.w, l(2.000000), r7.y
  add r7.y, r7.w, r7.y
  min r7.y, r7.y, l(1.000000)
  mad r10.xyz, r7.yyyy, l(50.000000, 50.000000, 50.000000, 0.000000), l(50.000000, 50.000000, 50.000000, 0.000000)
  ge r7.yzw, r5.zzzz, l(0.000000, 0.000000, 0.815000, 1.000000)
  and r11.xyw, r7.yzyw, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
  add r7.yzw, r11.yyww, r11.xxyw
  add r7.yzw, r7.yyzw, l(0.000000, 0.000001, 0.000001, 0.000001)
  mul r7.yzw, r7.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  frc r7.yzw, r7.yyzw
  mul r0.zw, r0.zzzw, r7.yyyz
  mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
  add r0.z, r0.w, r0.z
  mad r0.z, r7.w, l(2.000000), r0.z
  mad_sat r0.z, r11.w, l(1.000000), r0.z
  mad r9.z, r0.z, l(0.975000), l(0.025000)
  mov_sat r7.x, r7.x
  mad r7.xyz, r7.xxxx, l(0.500000, 0.000000, 0.000000, 0.000000), l(0.500000, 1.000000, 1.000000, 0.000000)
  mov_sat r0.z, r4.y
  mad r8.yz, r0.zzzz, l(0.000000, 0.210317, 5.145833, 0.000000), l(0.000000, 0.000000, -4.145833, 0.000000)
  ge r11.xyz, r0.zzzz, l(0.000000, 0.840000, 1.000000, 0.000000)
  and r11.xyw, r11.xyxz, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
  add r11.xyz, r11.ywwy, r11.xywx
  add r11.xyz, r11.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r11.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r11.xyz, r11.xyzx
  mul r0.zw, r8.yyyz, r11.xxxy
  mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
  add r0.z, r0.w, r0.z
  mad r0.z, r11.z, l(2.000000), r0.z
  mad_sat r0.z, r11.w, l(1.000000), r0.z
  mad r0.z, r0.z, l(0.750000), l(0.500000)
  mad r11.xyzw, r0.yyyy, l(0.000000, 0.233988, 0.850343, -1.725000), l(0.000000, -0.526726, -1.638330, 4.450000)
  mad r12.xyzw, r0.yyyy, l(42.857143, 0.281341, 0.866373, -3.725000), l(0.000000, 0.993719, 0.921615, 1.000000)
  mad r11.xyzw, r11.wxyz, r8.xxxx, r12.wxyz
  ge r12.xyzw, r0.yyyy, l(0.000000, 0.023333, 0.813333, 1.000000)
  and r12.xyzw, r12.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r8.yzw, r12.yyzw, r12.xxyz
  add r8.yzw, r8.yyzw, l(0.000000, 0.000001, 0.000001, 0.000001)
  mul r8.yzw, r8.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  frc r8.yzw, r8.yyzw
  mul r8.yzw, r11.yyzw, r8.yyzw
  mul r8.yz, r8.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000)
  add r0.w, r8.z, r8.y
  mad r0.w, r8.w, l(2.000000), r0.w
  mad_sat r0.w, r12.w, l(1.000000), r0.w
  mad r0.w, r0.w, l(0.500000), l(0.500000)
  mul r9.w, r0.w, r0.z
  mad r12.xyzw, r0.yyyy, l(0.000000, 0.831770, 1000000.000000, -1.168235), l(0.000000, -0.663538, 0.000000, 1.000002)
  mad r0.zw, r12.xxxy, r8.xxxx, r12.zzzw
  ge r8.xyzw, r0.yyyy, l(0.000000, 0.000001, 0.000002, 1.000000)
  and r8.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  add r8.xyz, r8.yzwy, r8.xyzx
  add r8.xyz, r8.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  mul r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  frc r8.xyz, r8.xyzx
  mul r8.xz, r0.zzwz, r8.xxzx
  add r0.yz, r8.xxyx, r8.xxyx
  add r0.y, r0.z, r0.y
  mad_sat r8.x, r8.z, l(2.000000), r0.y
  mov_sat r11.x, r11.x
  mad r8.y, r11.x, l(19.000000), l(1.000000)
  imad r0.x, l(9), vThreadID.x, r0.x
  mov r6.xyz, l(1.000000,1.000000,0,0)
  store_uav_typed u0.xyzw, r0.xxxx, r6.xyzw
  iadd r6.xyzw, r0.xxxx, l(1, 2, 3, 4)
  mov r5.xyw, l(1.000000,1.000000,0,0)
  store_uav_typed u0.xyzw, r6.xxxx, r5.xyzw
  store_uav_typed u0.xyzw, r6.yyyy, r1.xyzw
  store_uav_typed u0.xyzw, r6.zzzz, r2.xyzw
  mov r10.w, r3.x
  store_uav_typed u0.xyzw, r6.wwww, r10.xyzw
  iadd r1.xyzw, r0.xxxx, l(5, 6, 7, 8)
  mov r7.w, r3.y
  store_uav_typed u0.xyzw, r1.xxxx, r7.xyzw
  store_uav_typed u0.xyzw, r1.yyyy, r9.xyzw
  mov r8.z, r3.z
  mov r8.w, l(0)
  store_uav_typed u0.xyzw, r1.zzzz, r8.xyzw
  mov r4.x, r3.w
  mov r4.w, l(0)
  store_uav_typed u0.xyzw, r1.wwww, r4.xyzw
endif
ret
// Approximately 0 instruction slots used
