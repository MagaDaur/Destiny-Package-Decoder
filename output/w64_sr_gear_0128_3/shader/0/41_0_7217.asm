//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Jun 29 22:53:53 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz
// TEXCOORD                 1   xyz         1     NONE   float
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// TEXCOORD                 3   xyzw        3     NONE   float    yzw
// SV_POSITION              0   xyzw        4      POS   float   xy
// SV_isFrontFace           0   x           5    FFACE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[115], immediateIndexed
dcl_constantbuffer cb13[2], immediateIndexed
dcl_constantbuffer cb12[13], immediateIndexed
dcl_constantbuffer cb8[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture3d (float,float,float,float) t21
dcl_input_ps linear v0.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.yzw
dcl_input_ps_siv linear noperspective v4.xy, position
dcl_output o0.xyzw
dcl_temps 5
mov r0.x, cb13[1].w
mov r0.y, l(1.000000)
mul r0.xy, r0.xyxx, v3.wwww
mul r0.xy, r0.xyxx, cb13[1].xwxx
mul r0.y, r0.y, cb13[1].x
mul r0.xz, r0.xxxx, cb8[7].xxyx
mul r1.z, r0.y, cb8[7].z
dp3 r0.y, -v2.xyzx, -v2.xyzx
sqrt r0.y, r0.y
mul r0.w, r0.y, l(0.015625)
mad_sat r0.y, r0.y, cb0[114].x, cb0[114].y
min r0.w, r0.w, l(1.000000)
sqrt r2.z, r0.w
mul r2.xy, v4.xyxx, cb12[12].zwzz
sample_l_indexable(texture3d)(float,float,float,float) r0.w, r2.xyzx, t21.yzwx, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyxx, t20.xyzw, s2, l(0.000000)
add r3.xyzw, r3.xyzw, l(-0.000000, -0.000000, -0.000000, -1.000000)
mad r3.xyzw, r0.wwww, r3.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
mul r1.xy, r0.xzxx, r3.wwww
mov r4.xy, l(0.381326,0.462077,0,0)
mov r4.z, r3.w
mad r0.xzw, r1.xxyz, r4.xxyz, r3.xxyz
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r2.xyxx, t11.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t13.xyzw, s1
add r1.xyzw, r1.xyzw, -r2.xyzw
mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw
mul r1.xyz, r1.xyzx, cb8[5].xyzx
mad r1.xyz, r1.wwww, cb8[6].xyzx, r1.xyzx
mad r0.xyz, r1.xyzx, cb13[1].xxxx, r0.xzwx
sample_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t0.yzwx, s3
log r0.w, r0.w
mul r0.w, r0.w, l(2.200000)
exp r0.w, r0.w
mad_sat r0.w, r0.w, v3.z, v3.y
mul_sat r0.w, r0.w, v0.z
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, r0.w
ret
// Approximately 0 instruction slots used
